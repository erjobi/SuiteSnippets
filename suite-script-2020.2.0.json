{
    "(N/action) action.Action": {
        "prefix": "action.Action",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=action.Action for more information.",
        "description": [
            "N/action Module",
            "action.Action\n",
            "Object Description:\nEncapsulates a NetSuite record action.\nThis object is returned by the action.get(options) and action.find(options) methods.\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/action Module\n",
            "Methods and Properties:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.Action\n"
        ]
    },
    "(N/action) Action(options)": {
        "prefix": "Action(options)",
        "body": [
            "Action({",
            "\tObject: ${2:Object},",
            "\t",
            "})"
        ],
        "description": [
            "N/action Module",
            "Action()\n",
            "Method Description:\nExecutes the action and returns the action result in a plain JavaScript object.\nThe action result is returned in an object. The response property of the results object shows the action result. If the action fails, it is listed in the results object’s notifications property. If the action executes successfully, the notifications property is usually empty.\nIf the Action object is qualified (it is a result of an action.get() or action.find() call that provides the recordId), then it is not required to provide a recordId and the options.params.recordId parameter is optional. If options.params.recordId is provided during execution, it takes precedence over the recordId stored in the Action object.\nReplace Action with the name of the action you are executing.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Parent Object:\naction.Action\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action(options)\n"
        ]
    },
    "(N/action) Action.promise(options)": {
        "prefix": "Action.promise(options)",
        "body": [
            "${1:Action}.promise({",
            "\tObject: ${2:Object},",
            "\t",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/action Module",
            "Action.promise()\n",
            "Method Description:\nExecutes the action asynchronously and returns the action result in a plain JavaScript object.\nThe action result is returned in an object. The response property of the results object shows the action result. If the action fails, it is listed in the results object’s notifications property. If the action executes successfully, the notifications property is usually empty.\nIf the Action object is qualified (it is a result of an action.get() or action.find() call that provides the recordId), then it is not required to provide a recordId and the options.params.recordId parameter is optional. If options.params.recordId is provided during execution, it takes precedence over the recordId stored in the Action object.\nReplace Action with the name of the action you are executing.\nThe parameters and errors thrown for this method are the same as those for Action(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Parent Object:\naction.Action\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.promise(options)\n"
        ]
    },
    "(N/action) Action.execute(options)": {
        "prefix": "Action.execute(options)",
        "body": [
            "${1:Action}.execute({",
            "\tObject: ${2:Object},",
            "\t",
            "})"
        ],
        "description": [
            "N/action Module",
            "Action.execute()\n",
            "Method Description:\nExecutes the action and returns the action result in a object.\nThe response property of the result object holds the actual response returned by the action implementation. The notifications property of the result object is an array of notification objects. It contains the details of errors and warnings that occurred during action execution. If the action executes successfully, the notifications property is usually empty.\nIf the Action object is qualified (it is a result of an action.get() or action.find() call that provides the recordId), then it is not required to provide a recordId and the options.params.recordId parameter is optional. If options.params.recordId is provided during execution, it takes precedence over the recordId stored in the Action object.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Parent Object:\naction.Action\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.execute(options)\n"
        ]
    },
    "(N/action) Action.execute.promise(options)": {
        "prefix": "Action.execute.promise(options)",
        "body": [
            "${1:Action}.execute.promise({",
            "\tObject: ${2:Object},",
            "\t",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/action Module",
            "Action.execute.promise()\n",
            "Method Description:\nExecutes the action asynchronously and returns the action result in a plain JavaScript object.\nThe action result is returned in an object. The response property of the results object shows the action result. If the action fails, it is listed in the results object’s notifications property. If the action executes successfully, the notifications property is usually empty.\nIf the Action object is qualified (it is a result of an action.get() or action.find() call that provides the recordId), then it is not required to provide a recordId and the options.params.recordId parameter is optional. If options.params.recordId is provided during execution, it takes precedence over the recordId stored in the Action object.\nThe parameters and errors thrown for this method are the same as those for Action.execute(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Parent Object:\naction.Action\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.execute.promise(options)\n"
        ]
    },
    "(N/action) Action.executeBulk(options)": {
        "prefix": "Action.executeBulk(options)",
        "body": [
            "${1:Action}.executeBulk({",
            "\tparams: ${2:array},",
            "\tcondition: ${3:string},",
            "\tparamCallback: ${4:string}",
            "})"
        ],
        "description": [
            "N/action Module",
            "Action.executeBulk()\n",
            "Method Description:\nExecutes an asynchronous bulk record action and returns its task ID for status queries with action.getBulkStatus(options).\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n50 units\n",
            "Module:\nN/action Module\n",
            "Parent Object:\naction.Action\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.executeBulk(options)\n"
        ]
    },
    "(N/action) Action.description": {
        "prefix": "Action.description",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Action.description for more information.",
        "description": [
            "N/action Module",
            "Action.description\n",
            "Property Description:\nThe action description.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.description\n"
        ]
    },
    "(N/action) Action.id": {
        "prefix": "Action.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Action.id for more information.",
        "description": [
            "N/action Module",
            "Action.id\n",
            "Property Description:\nThe ID of the action.\nFor a list of action IDs, see Supported Record Actions.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.id\n"
        ]
    },
    "(N/action) Action.label": {
        "prefix": "Action.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Action.label for more information.",
        "description": [
            "N/action Module",
            "Action.label\n",
            "Property Description:\nThe action label.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.label\n"
        ]
    },
    "(N/action) Action.parameters": {
        "prefix": "Action.parameters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Action.parameters for more information.",
        "description": [
            "N/action Module",
            "Action.parameters\n",
            "Property Description:\nThe action parameters.\n",
            "Type:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.parameters\n"
        ]
    },
    "(N/action) Action.recordType": {
        "prefix": "Action.recordType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Action.recordType for more information.",
        "description": [
            "N/action Module",
            "Action.recordType\n",
            "Property Description:\nThe type of the record on which the action is to be performed.\nFor a list of record types, see record.Type.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nAction Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Action.recordType\n"
        ]
    },
    "(N/action) action.execute(options)": {
        "prefix": "action.execute(options)",
        "body": [
            "${1:action}.execute({",
            "\trecordType: ${2:string*},",
            "\tid: ${3:string*},",
            "\tparams: {",
            "\t",
            "})"
        ],
        "description": [
            "N/action Module",
            "action.execute()\n",
            "Method Description:\nExecutes the record action and returns the action results in a plain JavaScript object.\nIf the action fails, it is listed in the results object’s notifications property. If the action executes successfully, the notifications property is usually empty.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.execute(options)\n"
        ]
    },
    "(N/action) action.execute.promise(options)": {
        "prefix": "action.execute.promise(options)",
        "body": [
            "${1:action}.execute.promise({",
            "\trecordType: ${2:string*},",
            "\tid: ${3:string*},",
            "\tparams: {",
            "\t",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/action Module",
            "action.execute.promise()\n",
            "Method Description:\nExecutes the record action asynchronously.\nIf the action fails, it is listed in the results object’s notifications property. If the action executes successfully, the notifications property is usually empty.\nThe parameters and errors thrown for this method are the same as those for action.execute(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.execute.promise(options)\n"
        ]
    },
    "(N/action) action.executeBulk(options)": {
        "prefix": "action.executeBulk(options)",
        "body": [
            "${1:action}.executeBulk({",
            "\trecordType: ${2:string*},",
            "\tid: ${3:string*}",
            "})"
        ],
        "description": [
            "N/action Module",
            "action.executeBulk()\n",
            "Method Description:\nExecutes an asynchronous bulk record action and returns its task ID for status queries with action.getBulkStatus(options). The options.params parameter is mutually exclusive to options.condition and options.paramCallback.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n50 units\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.executeBulk(options)\n"
        ]
    },
    "(N/action) action.find(options)": {
        "prefix": "action.find(options)",
        "body": [
            "${1:action}.find({",
            "\trecordType: ${2:string*},",
            "\trecordId: ${3:string},",
            "\tid: ${4:string}",
            "})"
        ],
        "description": [
            "N/action Module",
            "action.find()\n",
            "Method Description:\nPerforms a search for available record actions. If only the recordType parameter is specified, all actions available for the record type are returned. If the recordId parameter is also specified, then only actions that qualify for execution on the given record instance are returned. If the id parameter is specified, then only the action with the specified action ID is returned.\nThis method returns a plain JavaScript object of NetSuite record actions available for the record type. The object contains one or more action.Action objects. If there are no available actions for the specified record type, an empty object is returned.\nIf the recordId is specified in this call, the actions that are found are considered qualified. You do not have to provide the recordId to execute a qualified action.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.find(options)\n"
        ]
    },
    "(N/action) action.find.promise(options)": {
        "prefix": "action.find.promise(options)",
        "body": [
            "${1:action}.find.promise({",
            "\trecordType: ${2:string*},",
            "\trecordId: ${3:string},",
            "\tid: ${4:string}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/action Module",
            "action.find.promise()\n",
            "Method Description:\nPerforms a search for available record actions asynchronously. If only the recordType parameter is specified, all actions available for the record type are returned. If the recordId parameter is also specified, then only actions that qualify for execution on the given record instance are returned. If the id parameter is specified, the only the action with the specified action ID is returned.\nThis method returns a plain JavaScript object of NetSuite record actions available for the record type. The object contains one or more action.Action objects. If there are no available actions for the specified record type, an empty object is returned.\nIf the recordId is specified in this call, the actions that are found are considered qualified. You do not have to provide the recordId to execute a qualified action.\nThe parameters and errors thrown for this method are the same as those for action.find(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.find.promise(options)\n"
        ]
    },
    "(N/action) action.get(options)": {
        "prefix": "action.get(options)",
        "body": [
            "${1:action}.get({",
            "\trecordType: ${2:string*},",
            "\trecordId: ${3:string},",
            "\tid: ${4:string*}",
            "})"
        ],
        "description": [
            "N/action Module",
            "action.get()\n",
            "Method Description:\nReturns an executable record action for the specified record type. If the recordId parameter is specified, the action object is returned only if the specified action can be executed on the specified record instance.\n",
            "Returns:\naction.Action\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.get(options)\n"
        ]
    },
    "(N/action) action.get.promise(options)": {
        "prefix": "action.get.promise(options)",
        "body": [
            "${1:action}.get.promise({",
            "\trecordType: ${2:string*},",
            "\trecordId: ${3:string},",
            "\tid: ${4:string*}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/action Module",
            "action.get.promise()\n",
            "Method Description:\nReturns an executable record action for the specified record type asynchronously. If the recordId parameter is specified, the action object is returned only if the specified action can be executed on the specified record instance.\nThe parameters and errors thrown for this method are the same as those for action.get(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.get.promise(options)\n"
        ]
    },
    "(N/action) action.getBulkStatus(options)": {
        "prefix": "action.getBulkStatus(options)",
        "body": [
            "${1:action}.getBulkStatus({",
            "\ttaskId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/action Module",
            "action.getBulkStatus()\n",
            "Method Description:\nReturns the current status of action.executeBulk(options) for the specified task ID. The bulk execution status is returned in a status object.\n",
            "Returns:\nRecordActionTaskStatus Object Members\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/action Module\n",
            "Sibling Object Members:\nN/action Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=action.getBulkStatus(options)\n"
        ]
    },
    "(N/auth) auth.changeEmail(options)": {
        "prefix": "auth.changeEmail(options)",
        "body": [
            "${1:auth}.changeEmail({",
            "\tnewEmail: ${2:string*},",
            "\tpassword: ${3:string*},",
            "\tonlyThisAccount: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/auth Module",
            "auth.changeEmail()\n",
            "Method Description:\nChanges the current user’s NetSuite email address (user name).\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/auth Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=auth.changeEmail(options)\n"
        ]
    },
    "(N/auth) auth.changePassword(options)": {
        "prefix": "auth.changePassword(options)",
        "body": [
            "${1:auth}.changePassword({",
            "\tcurrentPassword: ${2:string*},",
            "\tnewPassword: ${3:string*}",
            "})"
        ],
        "description": [
            "N/auth Module",
            "auth.changePassword()\n",
            "Method Description:\nChanges the current user’s NetSuite password.\nSee Creating a Strong Password for information on valid passwords.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/auth Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=auth.changePassword(options)\n"
        ]
    },
    "(N/cache) cache.Cache": {
        "prefix": "cache.Cache",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=cache.Cache for more information.",
        "description": [
            "N/cache Module",
            "cache.Cache\n",
            "Object Description:\nA segment of memory that can be used to temporarily store data (on a short term basis) needed by one script, by all scripts in a bundle, or by all scripts in the NetSuite account.\nThis object is returned by cache.getCache(options).\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/cache Module\n",
            "Methods and Properties:\nCache Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=cache.Cache\n"
        ]
    },
    "(N/cache) Cache.get(options)": {
        "prefix": "Cache.get(options)",
        "body": [
            "${1:Cache}.get({",
            "\tkey: ${2:string*},",
            "\tloader: ${3:function},",
            "\tttl: ${4:number}",
            "})"
        ],
        "description": [
            "N/cache Module",
            "Cache.get()\n",
            "Method Description:\nRetrieves a string value from the cache. The value retrieved is identified by a key that you pass by using the options.key parameter. If a requested value is not present in the cache, the system calls the function identified by the options.loader parameter. This user-defined function should provide logic for retrieving a value that is not in the cache. For an example, see N/cache Module Script Sample.\n",
            "Returns:\nString or null\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n1 unit if the value is present in the cache; 2 units if the loader function is used\n",
            "Module:\nN/cache Module\n",
            "Parent Object:\ncache.Cache\n",
            "Sibling Object Members:\nCache Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Cache.get(options)\n"
        ]
    },
    "(N/cache) Cache.put(options)": {
        "prefix": "Cache.put(options)",
        "body": [
            "${1:Cache}.put({",
            "\tkey: ${2:string*},",
            "\tvalue: ${3:string*},",
            "\tttl: ${4:number}",
            "})"
        ],
        "description": [
            "N/cache Module",
            "Cache.put()\n",
            "Method Description:\nPuts a value into the cache.\nYou can also put a value in a cache by using the Cache.get(options) method and the options.loader parameter. In general, using the get method is recommended and may result in a more efficient design. For an example, see N/cache Module Script Sample\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n1 unit\n",
            "Module:\nN/cache Module\n",
            "Parent Object:\ncache.Cache\n",
            "Sibling Object Members:\nCache Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Cache.put(options)\n"
        ]
    },
    "(N/cache) Cache.remove(options)": {
        "prefix": "Cache.remove(options)",
        "body": [
            "${1:Cache}.remove({",
            "\tkey: ${2:string*}",
            "})"
        ],
        "description": [
            "N/cache Module",
            "Cache.remove()\n",
            "Method Description:\nRemoves a value from the cache.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n1 unit\n",
            "Module:\nN/cache Module\n",
            "Parent Object:\ncache.Cache\n",
            "Sibling Object Members:\nCache Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Cache.remove(options)\n"
        ]
    },
    "(N/cache) Cache.name": {
        "prefix": "Cache.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Cache.name for more information.",
        "description": [
            "N/cache Module",
            "Cache.name\n",
            "Property Description:\nA label that identifies a cache.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/cache Module\n",
            "Parent Object:\ncache.Cache\n",
            "Sibling Object Members:\nCache Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Cache.name\n"
        ]
    },
    "(N/cache) Cache.scope": {
        "prefix": "Cache.scope",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Cache.scope for more information.",
        "description": [
            "N/cache Module",
            "Cache.scope\n",
            "Property Description:\nA label that describes the availability of the cache to other scripts.\n",
            "Type:\ncache.Scope\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/cache Module\n",
            "Parent Object:\ncache.Cache\n",
            "Sibling Object Members:\nCache Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Cache.scope\n"
        ]
    },
    "(N/cache) cache.getCache(options)": {
        "prefix": "cache.getCache(options)",
        "body": [
            "${1:cache}.getCache({",
            "\tname: ${2:string*},",
            "\tscope: ${3:string}",
            "})"
        ],
        "description": [
            "N/cache Module",
            "cache.getCache()\n",
            "Method Description:\nChecks for a cache object with the specified name. If the cache exists, this method returns the cache object. If the cache does not exist, the system creates it.\n",
            "Returns:\ncache.Cache\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/cache Module\n",
            "Sibling Module Members:\nN/cache Module Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=cache.getCache(options)\n"
        ]
    },
    "(N/cache) cache.Scope": {
        "prefix": "cache.Scope",
        "body": "cache.Scope.${1|PRIVATE,PROTECTED,PUBLIC|}",
        "description": [
            "N/cache Module",
            "cache.Scope\n",
            "Enum Description:\nEnumeration that holds string values that describe the availability of the cache. This enum is used to set the value of the Cache.scope property.\n",
            "Type:\nenum\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/cache Module\n",
            "Sibling Module Members:\nN/cache Module Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=cache.Scope\n"
        ]
    },
    "(N/certificateControl) certificateControl.Certificate": {
        "prefix": "certificateControl.Certificate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.Certificate for more information.",
        "description": [
            "N/certificateControl Module",
            "certificateControl.Certificate\n",
            "Object Description:\nThe certificate record, including file name and preferences.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/certificateControl Module\n",
            "Methods and Properties:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.Certificate\n"
        ]
    },
    "(N/certificateControl) Certificate.save()": {
        "prefix": "Certificate.save()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.save() for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.save()\n",
            "Method Description:\nSaves a certificate record object.\n",
            "Returns:\ncertificateControl.Certificate object\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.save()\n"
        ]
    },
    "(N/certificateControl) Certificate.description": {
        "prefix": "Certificate.description",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.description for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.description\n",
            "Property Description:\nA description of the certificate record.\n",
            "Type:\nstring\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.description\n"
        ]
    },
    "(N/certificateControl) Certificate.file": {
        "prefix": "Certificate.file",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.file for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.file\n",
            "Property Description:\nThe File Object Members object of the certificate uploaded to the certificate record.\n",
            "Type:\nFile Object Members object\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.file\n"
        ]
    },
    "(N/certificateControl) Certificate.name": {
        "prefix": "Certificate.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.name for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.name\n",
            "Property Description:\nThe name of the certificate record.\n",
            "Type:\nstring\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.name\n"
        ]
    },
    "(N/certificateControl) Certificate.monthReminder": {
        "prefix": "Certificate.monthReminder",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.monthReminder for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.monthReminder\n",
            "Property Description:\nIndicates the setting of the Month box for Expiration Reminders on the certificate record. This property is set to true if the Month box is checked and email reminders are sent to account administrators one month before the certificate expires.\nIf the Copy Employees box is also checked, selected employees are copied on the reminder emails.\n",
            "Type:\nboolean true|false\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.monthReminder\n"
        ]
    },
    "(N/certificateControl) Certificate.notifications": {
        "prefix": "Certificate.notifications",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.notifications for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.notifications\n",
            "Property Description:\nThe internal IDs of the employees copied on expiration notification email. The values for this property are found in the Copy Employees field of the Audience tab on the certificate record.\nWhen you create or edit a certificate object with values for this property, you also check the Copy Employees box for the certificate record.\n",
            "Type:\nnumber []\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.notifications\n"
        ]
    },
    "(N/certificateControl) Certificate.password": {
        "prefix": "Certificate.password",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.password for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.password\n",
            "Property Description:\nThe password for the digital certificate. If the certificate file is password-protected, you can store the password with the certificate record. If the certificate is not password-protected, enter an empty string.\n",
            "Type:\nstring (write-only)\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.password\n"
        ]
    },
    "(N/certificateControl) Certificate.restrictions": {
        "prefix": "Certificate.restrictions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.restrictions for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.restrictions\n",
            "Property Description:\nThe internal IDs of the employees selected in the Restrict to Employees field of the certificate record. If you set this property with an employee internal ID, you check the Restrict to Employees box and select that employee.\nEmployees selected must also have either the Certificate Management or Certificate Access role permission in order to access the certificate. When the Restrict to Employees box is checked, only Administrators and the employees selected can access the certificate.\n",
            "Type:\nnumber[]\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.restrictions\n"
        ]
    },
    "(N/certificateControl) Certificate.scriptId": {
        "prefix": "Certificate.scriptId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.scriptId for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.scriptId\n",
            "Property Description:\nThe ID of the certificate record.\nThe script ID for certificate records begins with “custcertificate.”\n",
            "Type:\nstring\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.scriptId\n"
        ]
    },
    "(N/certificateControl) Certificate.subsidiaries": {
        "prefix": "Certificate.subsidiaries",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.subsidiaries for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.subsidiaries\n",
            "Property Description:\nThe internal IDs of the subsidiaries associated with the certificate record.\nSubsidiary selections associate a certificate to one or more subsidiaries but do not affect access.\n",
            "Type:\nnumber[]\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.subsidiaries\n"
        ]
    },
    "(N/certificateControl) Certificate.threeMonthsReminder": {
        "prefix": "Certificate.threeMonthsReminder",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.threeMonthsReminder for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.threeMonthsReminder\n",
            "Property Description:\nIndicates the setting of the 3 Months box for Expiration Reminders on the certificate record. This property is set to true if the 3 Months box is checked. When set to true , email reminders are sent to account administrators three months before the certificate expires.\nIf the Copy Employees box is also checked, selected employees are copied on the reminder emails.\n",
            "Type:\nboolean true|false\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.threeMonthsReminder\n"
        ]
    },
    "(N/certificateControl) Certificate.weekReminder": {
        "prefix": "Certificate.weekReminder",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.weekReminder for more information.",
        "description": [
            "N/certificateControl Module",
            "Certificate.weekReminder\n",
            "Property Description:\nIndicates the setting of the Week box for Expiration Reminders on the certificate record. This property is set to true if the Week box is checked. When set to true , email reminders are sent to account administrators one week before the certificate expires.\nIf the Copy Employees box is also checked, selected employees are copied on the reminder emails.\n",
            "Type:\nboolean true|false\n",
            "Module:\nN/certificateControl Module\n",
            "Parent Object:\ncertificateControl.Certificate\n",
            "Sibling Object Members:\nCertificate Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Certificate.weekReminder\n"
        ]
    },
    "(N/certificateControl) certificateControl.createCertificate(options)": {
        "prefix": "certificateControl.createCertificate(options)",
        "body": [
            "${1:certificateControl}.createCertificate({",
            "\tfile: ${2:file*},",
            "\tpassword: ${3:string},",
            "\tscriptId: ${4:string},",
            "\tdescription: ${5:string},",
            "\tsubsidiaries: ${6:number[] or string[]},",
            "\trestrictions: ${7:number[] or string[]},",
            "\tnotifications: ${8:number[] or string[]},",
            "\tname: ${9:string*},",
            "\tweekReminder: ${10:boolean true | false},",
            "\tmonthReminder: ${11:boolean true | false},",
            "\tthreeMonthsReminder: ${12:boolean true | false}",
            "})"
        ],
        "description": [
            "N/certificateControl Module",
            "certificateControl.createCertificate()\n",
            "Method Description:\nCreates a certificate record on the Certificates page using a file from the File Cabinet.\nYour role must have Create, Edit, or Full access to the Certificate Access permission to create certificates via SuiteScript.\n",
            "Returns:\ncertificateControl.Certificate\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/certificateControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.createCertificate(options)\n"
        ]
    },
    "(N/certificateControl) certificateControl.findCertificates(options)": {
        "prefix": "certificateControl.findCertificates(options)",
        "body": [
            "${1:certificateControl}.findCertificates({",
            "\tsubsidiary: ${2:number},",
            "\ttype: ${3:string},",
            "\trestriction: ${4:number},",
            "\tnotification: ${5:number},",
            "\tname: ${6:string},",
            "\tdescription: ${7:string}",
            "})"
        ],
        "description": [
            "N/certificateControl Module",
            "certificateControl.findCertificates()\n",
            "Method Description:\nReturns an array of certificates available. You can use the parameters as filters for this search. If you do not use any parameters, all certificate records are returned.\n",
            "Returns:\nMetadata about the certificate(s)\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/certificateControl Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.findCertificates(options)\n"
        ]
    },
    "(N/certificateControl) certificateControl.findUsages(options)": {
        "prefix": "certificateControl.findUsages(options)",
        "body": [
            "${1:certificateControl}.findUsages({",
            "\tfrom: ${2:date},",
            "\tto: ${3:date},",
            "\tid: ${4:string},",
            "\toperation: ${5:string},",
            "\tscript: ${6:number},",
            "\tdeploy: ${7:number},",
            "\tentity: ${8:number}",
            "})"
        ],
        "description": [
            "N/certificateControl Module",
            "certificateControl.findUsages()\n",
            "Method Description:\nReturns an audit trail of how a certificate has been used. Includes operations performed with time stamps.\n",
            "Returns:\nAn array of operations performed.\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/certificateControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.findUsages(options)\n"
        ]
    },
    "(N/certificateControl) certificateControl.deleteCertificate(options)": {
        "prefix": "certificateControl.deleteCertificate(options)",
        "body": [
            "${1:certificateControl}.deleteCertificate({",
            "\tscriptId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/certificateControl Module",
            "certificateControl.deleteCertificate()\n",
            "Method Description:\nDeletes a certificate record that has been uploaded to the Certificates list in the UI or created using certificateControl.createCertificate(options).\nYour role must have either Edit or Full access to the Certificate Access permission to delete certificate records via SuiteScript. History of the certificate is not deleted.\n",
            "Returns:\nThe script ID of the deleted certificate.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/certificateControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.deleteCertificate(options)\n"
        ]
    },
    "(N/certificateControl) certificateControl.loadCertificate(options)": {
        "prefix": "certificateControl.loadCertificate(options)",
        "body": [
            "${1:certificateControl}.loadCertificate({",
            "\tscriptId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/certificateControl Module",
            "certificateControl.loadCertificate()\n",
            "Method Description:\nLoads a certificate record that has been uploaded to the Certificates list in the UI or created using certificateControl.createCertificate(options).\n",
            "Returns:\ncertificateControl.Certificate\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/certificateControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.loadCertificate(options)\n"
        ]
    },
    "(N/certificateControl) certificateControl.Operation": {
        "prefix": "certificateControl.Operation",
        "body": "certificateControl.Operation.${1|CONNECT,DELETE,FIND,GET,HEAD,POST,PUT,SIGN_STRING,SIGN_XML,VERIFY_STRING,VERIFY_XML|}",
        "description": [
            "N/certificateControl Module",
            "certificateControl.Operation\n",
            "Enum Description:\nEnumeration that holds the values for the operation parameter of .\n",
            "Module:\nN/certificateControl Module\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.Operation\n"
        ]
    },
    "(N/certificateControl) certificateControl.Operator": {
        "prefix": "certificateControl.Operator",
        "body": "certificateControl.Operator.${1|CONTAINS,ENDS_WITH,EQUALS,STARTS_WITH|}",
        "description": [
            "N/certificateControl Module",
            "certificateControl.Operator\n",
            "Enum Description:\nSearch operators to use with the name and description parameters of the certificateControl.findCertificates(options).\n",
            "Module:\nN/certificateControl Module\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.Operator\n"
        ]
    },
    "(N/certificateControl) certificateControl.Type": {
        "prefix": "certificateControl.Type",
        "body": "certificateControl.Type.${1|PFX,P12,PEM|}",
        "description": [
            "N/certificateControl Module",
            "certificateControl.Type\n",
            "Enum Description:\nThe certificate file type. PFX, PEM, and P12 are supported.\n",
            "Module:\nN/certificateControl Module\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificateControl.Type\n"
        ]
    },
    "(N/commerce/recordView) recordView.viewItems(options)": {
        "prefix": "recordView.viewItems(options)",
        "body": [
            "${1:recordView}.viewItems({",
            "\tids: ${2:number[]*},",
            "\tfields: ${3:string | string[]*},",
            "\tfieldOptions: ${4:Array of name, value pairs. Type depends upon parameter:}",
            "})"
        ],
        "description": [
            "N/commerce/recordView Module",
            "recordView.viewItems()\n",
            "Method Description:\nRetrieves one or more items with requested item fields from an Item Record.\n",
            "Returns:\nSee the Returns section.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/commerce/recordView Module\n",
            "Sibling Module Members:\nN/commerce/recordView Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recordView.viewItems(options)\n"
        ]
    },
    "(N/commerce/recordView) recordView.viewWebsite(options)": {
        "prefix": "recordView.viewWebsite(options)",
        "body": [
            "${1:recordView}.viewWebsite({",
            "\tid: ${2:number*},",
            "\tfields: ${3:string | string[]*},",
            "\tfieldOptions: ${4:Array of name, value pairs. Type depends upon parameter.}",
            "})"
        ],
        "description": [
            "N/commerce/recordView Module",
            "recordView.viewWebsite()\n",
            "Method Description:\nRetrieves the website details with requested website fields.\n",
            "Returns:\nSee the Returns section.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/commerce/recordView Module\n",
            "Sibling Module Members:\nN/commerce/recordView Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recordView.viewWebsite(options)\n"
        ]
    },
    "(N/compress) compress.Archiver": {
        "prefix": "compress.Archiver",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=compress.Archiver for more information.",
        "description": [
            "N/compress Module",
            "compress.Archiver\n",
            "Object Description:\nThe functionality for creating an archive file.\nUse compress.createArchiver() to create this object.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/compress Module\n",
            "Methods and Properties:\nArchiver Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=compress.Archiver\n"
        ]
    },
    "(N/compress) Archiver.add(options)": {
        "prefix": "Archiver.add(options)",
        "body": [
            "${1:Archiver}.add({",
            "\tfile: ${2:file.File*},",
            "\tdirectory: ${3:string}",
            "})"
        ],
        "description": [
            "N/compress Module",
            "Archiver.add()\n",
            "Method Description:\nAdds a file to be archived.\nIn the archive, the path to the target file is options.directory or options.file.nam. If the options.directory parameter is not specified, the target file is located in the root directory of the archive.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/compress Module\n",
            "Parent Object:\ncompress.Archiver\n",
            "Sibling Object Members:\nArchiver Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Archiver.add(options)\n"
        ]
    },
    "(N/compress) Archiver.archive(options)": {
        "prefix": "Archiver.archive(options)",
        "body": [
            "${1:Archiver}.archive({",
            "\tname: ${2:string*},",
            "\ttype: ${3:string}",
            "})"
        ],
        "description": [
            "N/compress Module",
            "Archiver.archive()\n",
            "Method Description:\nCreates an archive with the added files and returns it as a temporary file object.\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/compress Module\n",
            "Parent Object:\ncompress.Archiver\n",
            "Sibling Object Members:\nArchiver Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Archiver.archive(options)\n"
        ]
    },
    "(N/compress) compress.gzip(options)": {
        "prefix": "compress.gzip(options)",
        "body": [
            "${1:compress}.gzip({",
            "\tfile: ${2:file.File*},",
            "\tlevel: ${3:number}",
            "})"
        ],
        "description": [
            "N/compress Module",
            "compress.gzip()\n",
            "Method Description:\nCompresses a file by using gzip and returns it as a temporary file object.\n0 is no compression. 9 is the best compression level.\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/compress Module\n",
            "Module Members:\nN/compress Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=compress.gzip(options)\n"
        ]
    },
    "(N/compress) compress.gunzip(options)": {
        "prefix": "compress.gunzip(options)",
        "body": [
            "${1:compress}.gunzip({",
            "\tfile: ${2:file.File*}",
            "})"
        ],
        "description": [
            "N/compress Module",
            "compress.gunzip()\n",
            "Method Description:\nDecompresses a file that was compressed using gzip and returns it as a temporary file object.\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/compress Module\n",
            "Module Members:\nN/compress Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=compress.gunzip(options)\n"
        ]
    },
    "(N/compress) compress.createArchiver()": {
        "prefix": "compress.createArchiver()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=compress.createArchiver() for more information.",
        "description": [
            "N/compress Module",
            "compress.createArchiver()\n",
            "Method Description:\nCreates a compress.Archiver object that can be used for creating file archives, such as ZIP or TAR files.\n",
            "Returns:\ncompress.Archiver\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/compress Module\n",
            "Module Members:\nN/compress Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=compress.createArchiver()\n"
        ]
    },
    "(N/compress) compress.Type": {
        "prefix": "compress.Type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=compress.Type for more information.",
        "description": [
            "N/compress Module",
            "compress.Type\n",
            "Enum Description:\nHolds the string values for the archive types.\n",
            "Module:\nN/compress Module\n",
            "Sibling Module Members:\nN/compress Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=compress.Type\n"
        ]
    },
    "(N/config) config.load(options)": {
        "prefix": "config.load(options)",
        "body": [
            "${1:config}.load({",
            "\ttype: ${2:enum*},",
            "\tisDynamic: ${3:boolean true | false}",
            "})"
        ],
        "description": [
            "N/config Module",
            "config.load()\n",
            "Method Description:\nMethod used to load a record.Record object that encapsulates the specified NetSuite configuration page.\nAfter the configuration page loads, all preference names and IDs are available to get or set. For more information, see Preference Names and IDs.\nYou can use the following Record Object Members to get and set preference names and IDs:\nRecord.getField(options)\nRecord.getFields()\nRecord.getText(options)\nRecord.getValue(options)\nRecord.setText(options)\nRecord.setValue(options)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/config Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=config.load(options)\n"
        ]
    },
    "(N/config) config.Type": {
        "prefix": "config.Type",
        "body": "config.Type.${1|USER_PREFERENCES,COMPANY_INFORMATION,COMPANY_PREFERENCES,ACCOUNTING_PREFERENCES,ACCOUNTING_PERIODS,TAX_PERIODS,FEATURES,TIME_POST,TIME_VOID|}",
        "description": [
            "N/config Module",
            "config.Type\n",
            "Enum Description:\nEnumeration that holds the string values for supported configuration pages.\n",
            "Module:\nN/config Module\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=config.Type\n"
        ]
    },
    "(N/crypto) crypto.Cipher": {
        "prefix": "crypto.Cipher",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Cipher for more information.",
        "description": [
            "N/crypto Module",
            "crypto.Cipher\n",
            "Object Description:\nEncapsulates a cipher.\nFor a complete list of this object’s methods and properties, see Cipher Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Cipher\n"
        ]
    },
    "(N/crypto) Cipher.final(options)": {
        "prefix": "Cipher.final(options)",
        "body": [
            "${1:Cipher}.final({",
            "\toutputEncoding: ${2:enum}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Cipher.final()\n",
            "Method Description:\nMethod used to return the cipher data.\nSets the output encoding for the crypto.CipherPayload object.\n",
            "Returns:\nA crypto.CipherPayload Object\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Cipher.final(options)\n"
        ]
    },
    "(N/crypto) Cipher.update(options)": {
        "prefix": "Cipher.update(options)",
        "body": [
            "${1:Cipher}.update({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:enum}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Cipher.update()\n",
            "Method Description:\nMethod used to update the clear data with the specified encoding.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Cipher.update(options)\n"
        ]
    },
    "(N/crypto) crypto.CipherPayload": {
        "prefix": "crypto.CipherPayload",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=crypto.CipherPayload for more information.",
        "description": [
            "N/crypto Module",
            "crypto.CipherPayload\n",
            "Object Description:\nEncapsulates a cipher payload.\nFor a complete list of this object’s methods and properties, see CipherPayload Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.CipherPayload\n"
        ]
    },
    "(N/crypto) CipherPayload.ciphertext": {
        "prefix": "CipherPayload.ciphertext",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CipherPayload.ciphertext for more information.",
        "description": [
            "N/crypto Module",
            "CipherPayload.ciphertext\n",
            "Property Description:\nThe result of the ciphering process. For example, to take the cipher payload and send it to another system.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CipherPayload.ciphertext\n"
        ]
    },
    "(N/crypto) CipherPayload.iv": {
        "prefix": "CipherPayload.iv",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CipherPayload.iv for more information.",
        "description": [
            "N/crypto Module",
            "CipherPayload.iv\n",
            "Property Description:\nInitialization vector for the cipher payload.\nYou can pass in the iv value to crypto.createDecipher(options)\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CipherPayload.iv\n"
        ]
    },
    "(N/crypto) crypto.Decipher": {
        "prefix": "crypto.Decipher",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Decipher for more information.",
        "description": [
            "N/crypto Module",
            "crypto.Decipher\n",
            "Object Description:\nEncapsulates a decipher. This object has methods that decrypt.\nFor a complete list of this object’s methods and properties, see Decipher Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Decipher\n"
        ]
    },
    "(N/crypto) Decipher.final(options)": {
        "prefix": "Decipher.final(options)",
        "body": [
            "${1:Decipher}.final({",
            "\toutputEncoding: ${2:string}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Decipher.final()\n",
            "Method Description:\nMethod used to return the clear data.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Decipher.final(options)\n"
        ]
    },
    "(N/crypto) Decipher.update(options)": {
        "prefix": "Decipher.update(options)",
        "body": [
            "${1:Decipher}.update({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:string}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Decipher.update()\n",
            "Method Description:\nMethod used to update cipher data with the specified encoding.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Decipher.update(options)\n"
        ]
    },
    "(N/crypto) crypto.Hash": {
        "prefix": "crypto.Hash",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Hash for more information.",
        "description": [
            "N/crypto Module",
            "crypto.Hash\n",
            "Object Description:\nEncapsulates a hash.\nFor a complete list of this object’s methods and properties, see Hash Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Hash\n"
        ]
    },
    "(N/crypto) Hash.digest(options)": {
        "prefix": "Hash.digest(options)",
        "body": [
            "${1:Hash}.digest({",
            "\toutputEncoding: ${2:string}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Hash.digest()\n",
            "Method Description:\nCalculates the digest of the data to be hashed. \n",
            "Returns:\nA hash value as a string\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Hash.digest(options)\n"
        ]
    },
    "(N/crypto) Hash.update(options)": {
        "prefix": "Hash.update(options)",
        "body": [
            "${1:Hash}.update({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:string}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Hash.update()\n",
            "Method Description:\nMethod used to update clear data with the encoding specified.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Hash.update(options)\n"
        ]
    },
    "(N/crypto) crypto.Hmac": {
        "prefix": "crypto.Hmac",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Hmac for more information.",
        "description": [
            "N/crypto Module",
            "crypto.Hmac\n",
            "Object Description:\nEncapsulates an hmac.\nFor a complete list of this object’s methods and properties, see Hmac Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Hmac\n"
        ]
    },
    "(N/crypto) Hmac.digest(options)": {
        "prefix": "Hmac.digest(options)",
        "body": [
            "${1:Hmac}.digest({",
            "\toutputEncoding: ${2:string}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Hmac.digest()\n",
            "Method Description:\nGets the computed digest.\n",
            "Returns:\nAn hmac value as a string\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Hmac.digest(options)\n"
        ]
    },
    "(N/crypto) Hmac.update(options)": {
        "prefix": "Hmac.update(options)",
        "body": [
            "${1:Hmac}.update({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:enum}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "Hmac.update()\n",
            "Method Description:\nMethod used to update the clear data with the encoding specified.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Hmac.update(options)\n"
        ]
    },
    "(N/crypto) crypto.SecretKey": {
        "prefix": "crypto.SecretKey",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=crypto.SecretKey for more information.",
        "description": [
            "N/crypto Module",
            "crypto.SecretKey\n",
            "Object Description:\nEncapsulates the handle to the key. The handler does not store the key value. It points to the key stored within the NetSuite system. The GUID is also required to find the key.\nFor a complete list of this object’s methods and properties, see SecretKey Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.SecretKey\n"
        ]
    },
    "(N/crypto) SecretKey.encoding": {
        "prefix": "SecretKey.encoding",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SecretKey.encoding for more information.",
        "description": [
            "N/crypto Module",
            "SecretKey.encoding\n",
            "Property Description:\nThe encoding used for the clear text value of the secret key.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SecretKey.encoding\n"
        ]
    },
    "(N/crypto) Secretkey.guid": {
        "prefix": "Secretkey.guid",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Secretkey.guid for more information.",
        "description": [
            "N/crypto Module",
            "Secretkey.guid\n",
            "Property Description:\nThe GUID associated with the secret key.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Secretkey.guid\n"
        ]
    },
    "(N/crypto) crypto.createCipher(options)": {
        "prefix": "crypto.createCipher(options)",
        "body": [
            "${1:crypto}.createCipher({",
            "\talgorithm: ${2:string*},",
            "\tkey: ${3:object*},",
            "\tpadding: ${4:string}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "crypto.createCipher()\n",
            "Method Description:\nMethod used to create and return a crypto.EncryptionAlg object.\nThe blockCipherMode is automatically set to CBC.\n",
            "Returns:\nA crypto.EncryptionAlg object\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.createCipher(options)\n"
        ]
    },
    "(N/crypto) crypto.createDecipher(options)": {
        "prefix": "crypto.createDecipher(options)",
        "body": [
            "${1:crypto}.createDecipher({",
            "\talgorithm: ${2:string*},",
            "\tkey: ${3:object*},",
            "\tpadding: ${4:object},",
            "\tiv: ${5:string*}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "crypto.createDecipher()\n",
            "Method Description:\nMethod used to create a crypto.Decipher object.\nThe blockCipherMode is automatically set to CBC.\n",
            "Returns:\nA crypto.Decipher object.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.createDecipher(options)\n"
        ]
    },
    "(N/crypto) crypto.createHash(options)": {
        "prefix": "crypto.createHash(options)",
        "body": [
            "${1:crypto}.createHash({",
            "\talgorithm: ${2:string*}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "crypto.createHash()\n",
            "Method Description:\nMethod used to create a crypto.Hash object.\n",
            "Returns:\nThe crypto.Hash object created using this method.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.createHash(options)\n"
        ]
    },
    "(N/crypto) crypto.createHmac(options)": {
        "prefix": "crypto.createHmac(options)",
        "body": [
            "${1:crypto}.createHmac({",
            "\talgorithm: ${2:string*},",
            "\tkey: ${3:object*}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "crypto.createHmac()\n",
            "Method Description:\nMethod used to create a crypto.Hmac object.\n",
            "Returns:\nA crypto.Hmac object.\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.createHmac(options)\n"
        ]
    },
    "(N/crypto) crypto.createSecretKey(options)": {
        "prefix": "crypto.createSecretKey(options)",
        "body": [
            "${1:crypto}.createSecretKey({",
            "\tguid: ${2:string*},",
            "\tencoding: ${3:enum}",
            "})"
        ],
        "description": [
            "N/crypto Module",
            "crypto.createSecretKey()\n",
            "Method Description:\nMethod used to create a new crypto.SecretKey object.\nThis method can take a GUID. Use Form.addCredentialField(options) to generate a value.\nWhen using the crypto.SecretKey object for an AES algorithm, the length of the text (secret key) that is used to generate the GUID must be 16, 24, or 32 characters.\n",
            "Returns:\nA crypto.SecretKey object\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.createSecretKey(options)\n"
        ]
    },
    "(N/crypto) crypto.EncryptionAlg": {
        "prefix": "crypto.EncryptionAlg",
        "body": "crypto.EncryptionAlg.${1|AES|}",
        "description": [
            "N/crypto Module",
            "crypto.EncryptionAlg\n",
            "Enum Description:\nHolds the string values for supported encryption algorithms. Sets the options.algorithm parameter for crypto.createCipher(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/crypto Module\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.EncryptionAlg\n"
        ]
    },
    "(N/crypto) crypto.HashAlg": {
        "prefix": "crypto.HashAlg",
        "body": "crypto.HashAlg.${1|SHA1,SHA256,SHA512,MD5|}",
        "description": [
            "N/crypto Module",
            "crypto.HashAlg\n",
            "Enum Description:\nHolds the string values for supported hashing algorithms. Sets the value of the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/crypto Module\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.HashAlg\n"
        ]
    },
    "(N/crypto) crypto.Padding": {
        "prefix": "crypto.Padding",
        "body": "crypto.Padding.${1|NoPadding,PKCS5Padding|}",
        "description": [
            "N/crypto Module",
            "crypto.Padding\n",
            "Enum Description:\nHolds the string values for supported cipher padding. Sets the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/crypto Module\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=crypto.Padding\n"
        ]
    },
    "(N/crypto/certificate) certificate.SignedXml": {
        "prefix": "certificate.SignedXml",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=certificate.SignedXml for more information.",
        "description": [
            "N/crypto/certificate Module",
            "certificate.SignedXml\n",
            "Object Description:\nA signed XML string.\nThis object is returned by the certificate.signXml(options) method.\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto/certificate Module\n",
            "Methods and Properties:\nSignedXml Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.SignedXml\n"
        ]
    },
    "(N/crypto/certificate) SignedXml.asFile()": {
        "prefix": "SignedXml.asFile()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SignedXml.asFile() for more information.",
        "description": [
            "N/crypto/certificate Module",
            "SignedXml.asFile()\n",
            "Method Description:\nReturns the signed XML as a file.\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto/certificate Module\n",
            "Parent Object:\ncertificate.SignedXml\n",
            "Sibling Object Members:\nSignedXml Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SignedXml.asFile()\n"
        ]
    },
    "(N/crypto/certificate) SignedXml.asString()": {
        "prefix": "SignedXml.asString()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SignedXml.asString() for more information.",
        "description": [
            "N/crypto/certificate Module",
            "SignedXml.asString()\n",
            "Method Description:\nReturns the signed XML as a string.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto/certificate Module\n",
            "Parent Object:\ncertificate.SignedXml\n",
            "Sibling Object Members:\nSignedXml Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SignedXml.asString()\n"
        ]
    },
    "(N/crypto/certificate) SignedXml.asXml()": {
        "prefix": "SignedXml.asXml()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SignedXml.asXml() for more information.",
        "description": [
            "N/crypto/certificate Module",
            "SignedXml.asXml()\n",
            "Method Description:\nReturns the signed XML as an XML document.\n",
            "Returns:\nxml.Document\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto/certificate Module\n",
            "Parent Object:\ncertificate.SignedXml\n",
            "Sibling Object Members:\nSignedXml Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SignedXml.asXml()\n"
        ]
    },
    "(N/crypto/certificate) certificate.Signer": {
        "prefix": "certificate.Signer",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=certificate.Signer for more information.",
        "description": [
            "N/crypto/certificate Module",
            "certificate.Signer\n",
            "Object Description:\nObject used for signing plain strings.\nThis object is returned by the certificate.createSigner(options) method.\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto/certificate Module\n",
            "Methods and Properties:\nSigner Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.Signer\n"
        ]
    },
    "(N/crypto/certificate) Signer.update(options)": {
        "prefix": "Signer.update(options)",
        "body": [
            "${1:Signer}.update({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:string}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "Signer.update()\n",
            "Method Description:\nUpdates the input string to be signed. The string can be encoded.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto/certificate Module\n",
            "Parent Object:\ncertificate.Signer\n",
            "Sibling Object Members:\nSigner Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Signer.update(options)\n"
        ]
    },
    "(N/crypto/certificate) Signer.sign(options)": {
        "prefix": "Signer.sign(options)",
        "body": [
            "${1:Signer}.sign({",
            "\toutputEncoding: ${2:string}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "Signer.sign()\n",
            "Method Description:\nSigns the string and returns the signature.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto/certificate Module\n",
            "Parent Object:\ncertificate.Signer\n",
            "Sibling Object Members:\nSigner Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Signer.sign(options)\n"
        ]
    },
    "(N/crypto/certificate) certificate.Verifier": {
        "prefix": "certificate.Verifier",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=certificate.Verifier for more information.",
        "description": [
            "N/crypto/certificate Module",
            "certificate.Verifier\n",
            "Object Description:\nObject for verifying plain string signatures.\nThis object is returned by the certificate.createVerifier(options) method.\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/crypto/certificate Module\n",
            "Methods and Properties:\nVerifier Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.Verifier\n"
        ]
    },
    "(N/crypto/certificate) Verifier.update(options)": {
        "prefix": "Verifier.update(options)",
        "body": [
            "${1:Verifier}.update({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:string}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "Verifier.update()\n",
            "Method Description:\nUpdates the string to be verified against a specified certificate.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto/certificate Module\n",
            "Parent Object:\nParameters\n",
            "Sibling Object Members:\nVerifier Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Verifier.update(options)\n"
        ]
    },
    "(N/crypto/certificate) Verifier.verify(options)": {
        "prefix": "Verifier.verify(options)",
        "body": [
            "${1:Verifier}.verify({",
            "\tsignature: ${2:string*},",
            "\tsignatureEncoding: ${3:string}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "Verifier.verify()\n",
            "Method Description:\nVerifies a string against a provided signature using a specified certificate.\nYou can create a verifier object using the certificate.createVerifier(options) method.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/crypto/certificate Module\n",
            "Parent Object:\nParameters\n",
            "Sibling Object Members:\nVerifier Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Verifier.verify(options)\n"
        ]
    },
    "(N/crypto/certificate) certificate.createSigner(options)": {
        "prefix": "certificate.createSigner(options)",
        "body": [
            "${1:certificate}.createSigner({",
            "\tcertId: ${2:string*},",
            "\talgorithm: ${3:string*}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "certificate.createSigner()\n",
            "Method Description:\nCreates the signer object for signing plain strings.\n",
            "Returns:\ncertificate.Signer\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/crypto/certificate Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.createSigner(options)\n"
        ]
    },
    "(N/crypto/certificate) certificate.createVerifier(options)": {
        "prefix": "certificate.createVerifier(options)",
        "body": [
            "${1:certificate}.createVerifier({",
            "\tcertId: ${2:string*},",
            "\talgorithm: ${3:string*}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "certificate.createVerifier()\n",
            "Method Description:\nCreates the verifier object for verifying signatures of plain strings.\n",
            "Returns:\nA Parameters object\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/crypto/certificate Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.createVerifier(options)\n"
        ]
    },
    "(N/crypto/certificate) certificate.verifyXmlSignature(options)": {
        "prefix": "certificate.verifyXmlSignature(options)",
        "body": [
            "${1:certificate}.verifyXmlSignature({",
            "\tsignedXml: ${2:string*},",
            "\trootTag: ${3:string*},",
            "\tcertId: ${4:string}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "certificate.verifyXmlSignature()\n",
            "Method Description:\nVerifies the signature in the signedXml object or string.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/crypto/certificate Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.verifyXmlSignature(options)\n"
        ]
    },
    "(N/crypto/certificate) certificate.signXml(options)": {
        "prefix": "certificate.signXml(options)",
        "body": [
            "${1:certificate}.signXml({",
            "\txmlString: ${2:string*},",
            "\tcertId: ${3:string*},",
            "\talgorithm: ${4:string*},",
            "\trootTag: ${5:string*},",
            "\tinsertionTag: ${6:string}",
            "})"
        ],
        "description": [
            "N/crypto/certificate Module",
            "certificate.signXml()\n",
            "Method Description:\nSigns the inputXml string using the certId.\n",
            "Returns:\ncertificate.SignedXml\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/crypto/certificate Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.signXml(options)\n"
        ]
    },
    "(N/crypto/certificate) certificate.HashAlg": {
        "prefix": "certificate.HashAlg",
        "body": "certificate.HashAlg.${1|SHA1,SHA256,SHA384,SHA512|}",
        "description": [
            "N/crypto/certificate Module",
            "certificate.HashAlg\n",
            "Enum Description:\nThe hash algorithm.\nSupported digest methods are SHA1, SHA256, SHA384, and SHA512 for RSA and ECDSA encryption algorithms and SHA1 and SHA256 for DSA.\n",
            "Type:\nenum\n",
            "Module:\nN/crypto/certificate Module\n",
            "Sibling Module Members:\nN/crypto/certificate Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=certificate.HashAlg\n"
        ]
    },
    "(N/currency) currency.exchangeRate(options)": {
        "prefix": "currency.exchangeRate(options)",
        "body": [
            "${1:currency}.exchangeRate({",
            "\tdate: ${2:Date},",
            "\tsource: ${3:number | string*},",
            "\ttarget: ${4:number | string*}",
            "})"
        ],
        "description": [
            "N/currency Module",
            "currency.exchangeRate()\n",
            "Method Description:\nMethod used to return the exchange rate between two currencies based on a certain date.\nThe source currency is looked up relative to the target currency on the effective date. For example, if use British pounds for the source and US dollars for the target and the method returns '1.52’, this means that if you were to enter an invoice today for a GBP customer in your USD subsidiary, the rate would be 1.52.\nThe exchange rate values are sourced from the Currency Exchange Rate record.\nThe Currency Exchange Rate record itself is not a scriptable record.\nOnly base currencies can be converted. The target must be a base currency in your NetSuite account. If not, inaccurate values are returned. For details, see Setting a Base Currency.\n",
            "Returns:\nThe exchange rate as a decimal number\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/currency Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=currency.exchangeRate(options)\n"
        ]
    },
    "(N/currentRecord) currentRecord.Column": {
        "prefix": "currentRecord.Column",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.Column for more information.",
        "description": [
            "N/currentRecord Module",
            "currentRecord.Column\n",
            "Object Description:\nEncapsulates a column of a sublist on the current record.\nFor a complete list of this object’s properties, see Column Object Members.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.Column\n"
        ]
    },
    "(N/currentRecord) Column.id": {
        "prefix": "Column.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.id for more information.",
        "description": [
            "N/currentRecord Module",
            "Column.id\n",
            "Property Description:\nReturns the internal ID of the column.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.id\n"
        ]
    },
    "(N/currentRecord) Column.isDisabled": {
        "prefix": "Column.isDisabled",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.isDisabled for more information.",
        "description": [
            "N/currentRecord Module",
            "Column.isDisabled\n",
            "Property Description:\nIndicates whether the column is disabled.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/currentRecord Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.isDisabled\n"
        ]
    },
    "(N/currentRecord) Column.isMandatory": {
        "prefix": "Column.isMandatory",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.isMandatory for more information.",
        "description": [
            "N/currentRecord Module",
            "Column.isMandatory\n",
            "Property Description:\nIndicates whether the column is mandatory.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/currentRecord Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.isMandatory\n"
        ]
    },
    "(N/currentRecord) Column.label": {
        "prefix": "Column.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.label for more information.",
        "description": [
            "N/currentRecord Module",
            "Column.label\n",
            "Property Description:\nReturns the internal ID of the column.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.label\n"
        ]
    },
    "(N/currentRecord) Column.sublistId": {
        "prefix": "Column.sublistId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.sublistId for more information.",
        "description": [
            "N/currentRecord Module",
            "Column.sublistId\n",
            "Property Description:\nReturns the internal ID of the standard or custom sublist that contains the column.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.sublistId\n"
        ]
    },
    "(N/currentRecord) Column.type": {
        "prefix": "Column.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.type for more information.",
        "description": [
            "N/currentRecord Module",
            "Column.type\n",
            "Property Description:\nReturns the column type.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.type\n"
        ]
    },
    "(N/currentRecord) currentRecord.CurrentRecord": {
        "prefix": "currentRecord.CurrentRecord",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.CurrentRecord for more information.",
        "description": [
            "N/currentRecord Module",
            "currentRecord.CurrentRecord\n",
            "Object Description:\nEncapsulates the record active on the current page.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.CurrentRecord\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.cancelLine(options)": {
        "prefix": "CurrentRecord.cancelLine(options)",
        "body": [
            "${1:CurrentRecord}.cancelLine({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.cancelLine()\n",
            "Method Description:\nCancels the currently selected line on a sublist.\n",
            "Returns:\nThe currentRecord.CurrentRecord object that called the method.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.cancelLine(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.commitLine(options)": {
        "prefix": "CurrentRecord.commitLine(options)",
        "body": [
            "${1:CurrentRecord}.commitLine({",
            "\tsublistId: ${2:string*},",
            "\tignoreRecalc: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.commitLine()\n",
            "Method Description:\nCommits the currently selected line on a sublist.\n",
            "Returns:\nThe currentRecord.CurrentRecord object that called the method.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.commitLine(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.findMatrixSublistLineWithValue(options)": {
        "prefix": "CurrentRecord.findMatrixSublistLineWithValue(options)",
        "body": [
            "${1:CurrentRecord}.findMatrixSublistLineWithValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tvalue: ${4:number*},",
            "\tcolumn: ${5:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.findMatrixSublistLineWithValue()\n",
            "Method Description:\nReturns the line number of the first instance where a specified value is found in a specified column of the matrix.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.findMatrixSublistLineWithValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.findSublistLineWithValue(options)": {
        "prefix": "CurrentRecord.findSublistLineWithValue(options)",
        "body": [
            "${1:CurrentRecord}.findSublistLineWithValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tvalue: ${4:number | Date | string | array | boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.findSublistLineWithValue()\n",
            "Method Description:\nReturns the line number for the first occurrence of a field value in a sublist.\n",
            "Returns:\nA line number as a number, or -1 if not found.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.findSublistLineWithValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getCurrentMatrixSublistValue(options)": {
        "prefix": "CurrentRecord.getCurrentMatrixSublistValue(options)",
        "body": [
            "${1:CurrentRecord}.getCurrentMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getCurrentMatrixSublistValue()\n",
            "Method Description:\nGets the value for the currently selected line in the matrix.\nGets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getCurrentMatrixSublistValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getCurrentSublistIndex(options)": {
        "prefix": "CurrentRecord.getCurrentSublistIndex(options)",
        "body": [
            "${1:CurrentRecord}.getCurrentSublistIndex({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getCurrentSublistIndex()\n",
            "Method Description:\nReturns the line number of the currently selected line.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getCurrentSublistIndex(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getCurrentSublistSubrecord(options)": {
        "prefix": "CurrentRecord.getCurrentSublistSubrecord(options)",
        "body": [
            "${1:CurrentRecord}.getCurrentSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getCurrentSublistSubrecord()\n",
            "Method Description:\nGets the subrecord for the associated sublist field on the current line.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getCurrentSublistSubrecord(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getCurrentSublistText(options)": {
        "prefix": "CurrentRecord.getCurrentSublistText(options)",
        "body": [
            "${1:CurrentRecord}.getCurrentSublistText({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getCurrentSublistText()\n",
            "Method Description:\nReturns a text representation of the field value in the currently selected line.\n",
            "Returns:\nstring\nFor multiselect fields, returns an array.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getCurrentSublistText(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getCurrentSublistValue(options)": {
        "prefix": "CurrentRecord.getCurrentSublistValue(options)",
        "body": [
            "${1:CurrentRecord}.getCurrentSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getCurrentSublistValue()\n",
            "Method Description:\nReturns the value of a sublist field on the currently selected sublist line.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getCurrentSublistValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getField(options)": {
        "prefix": "CurrentRecord.getField(options)",
        "body": [
            "${1:CurrentRecord}.getField({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getField()\n",
            "Method Description:\nReturns a field object from a record.\n",
            "Returns:\ncurrentRecord.Field\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getField(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getLineCount(options)": {
        "prefix": "CurrentRecord.getLineCount(options)",
        "body": [
            "${1:CurrentRecord}.getLineCount({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getLineCount()\n",
            "Method Description:\nReturns the number of lines in a sublist.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getLineCount(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getMatrixHeaderCount(options)": {
        "prefix": "CurrentRecord.getMatrixHeaderCount(options)",
        "body": [
            "${1:CurrentRecord}.getMatrixHeaderCount({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getMatrixHeaderCount()\n",
            "Method Description:\nReturns the number of columns for the specified matrix.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getMatrixHeaderCount(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getMatrixHeaderField(options)": {
        "prefix": "CurrentRecord.getMatrixHeaderField(options)",
        "body": [
            "${1:CurrentRecord}.getMatrixHeaderField({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getMatrixHeaderField()\n",
            "Method Description:\nGets the field for the specified header in the matrix.\n",
            "Returns:\ncurrentRecord.Field\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getMatrixHeaderField(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getMatrixHeaderValue(options)": {
        "prefix": "CurrentRecord.getMatrixHeaderValue(options)",
        "body": [
            "${1:CurrentRecord}.getMatrixHeaderValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getMatrixHeaderValue()\n",
            "Method Description:\nGets the value for the associated header in the matrix.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getMatrixHeaderValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getMatrixSublistField(options)": {
        "prefix": "CurrentRecord.getMatrixSublistField(options)",
        "body": [
            "${1:CurrentRecord}.getMatrixSublistField({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tline: ${5:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getMatrixSublistField()\n",
            "Method Description:\nGets the field for the specified sublist in the matrix.\n",
            "Returns:\ncurrentRecord.Field\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getMatrixSublistField(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getMatrixSublistValue(options)": {
        "prefix": "CurrentRecord.getMatrixSublistValue(options)",
        "body": [
            "${1:CurrentRecord}.getMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tline: ${5:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getMatrixSublistValue()\n",
            "Method Description:\nGets the value for the associated field in the matrix.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getMatrixSublistValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getSublist(options)": {
        "prefix": "CurrentRecord.getSublist(options)",
        "body": [
            "${1:CurrentRecord}.getSublist({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getSublist()\n",
            "Method Description:\nReturns the specified sublist.\n",
            "Returns:\ncurrentRecord.Sublist\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getSublist(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getSublistField(options)": {
        "prefix": "CurrentRecord.getSublistField(options)",
        "body": [
            "${1:CurrentRecord}.getSublistField({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getSublistField()\n",
            "Method Description:\nReturns a field object from a sublist.\nUse Record.getCurrentSublistField(options) if you are working with the current and non-committed line.\n",
            "Returns:\ncurrentRecord.Field\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getSublistField(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getSublistText(options)": {
        "prefix": "CurrentRecord.getSublistText(options)",
        "body": [
            "${1:CurrentRecord}.getSublistText({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getSublistText()\n",
            "Method Description:\nReturns the value of a sublist field in a text representation.\nGets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nstring\nFor multiselect fields, returns an array.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getSublistText(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getSublistValue(options)": {
        "prefix": "CurrentRecord.getSublistValue(options)",
        "body": [
            "${1:CurrentRecord}.getSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getSublistValue()\n",
            "Method Description:\nReturns the value of a sublist field.\nGets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getSublistValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getSubrecord(options)": {
        "prefix": "CurrentRecord.getSubrecord(options)",
        "body": [
            "${1:CurrentRecord}.getSubrecord({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getSubrecord()\n",
            "Method Description:\nGets the subrecord associated with the field.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getSubrecord(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getText(options)": {
        "prefix": "CurrentRecord.getText(options)",
        "body": [
            "${1:CurrentRecord}.getText({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getText()\n",
            "Method Description:\nReturns the text representation of a field value.\nGets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nstring\nFor multiselect fields, returns an array.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getText(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.getValue(options)": {
        "prefix": "CurrentRecord.getValue(options)",
        "body": [
            "${1:CurrentRecord}.getValue({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.getValue()\n",
            "Method Description:\nReturns the value of a field.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.getValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.hasCurrentSublistSubrecord(options)": {
        "prefix": "CurrentRecord.hasCurrentSublistSubrecord(options)",
        "body": [
            "${1:CurrentRecord}.hasCurrentSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.hasCurrentSublistSubrecord()\n",
            "Method Description:\nReturns a value indicating whether the associated sublist field has a subrecord on the current line.\nThis method can only be used on dynamic records.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.hasCurrentSublistSubrecord(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.hasSublistSubrecord(options)": {
        "prefix": "CurrentRecord.hasSublistSubrecord(options)",
        "body": [
            "${1:CurrentRecord}.hasSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.hasSublistSubrecord()\n",
            "Method Description:\nReturns a value indicating whether the associated sublist field contains a subrecord.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.hasSublistSubrecord(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.hasSubrecord(options)": {
        "prefix": "CurrentRecord.hasSubrecord(options)",
        "body": [
            "${1:CurrentRecord}.hasSubrecord({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.hasSubrecord()\n",
            "Method Description:\nReturns a value indicating whether the field contains a subrecord.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.hasSubrecord(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.insertLine(options)": {
        "prefix": "CurrentRecord.insertLine(options)",
        "body": [
            "${1:CurrentRecord}.insertLine({",
            "\tsublistId: ${2:string*},",
            "\tline: ${3:number*},",
            "\tignoreRecalc: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.insertLine()\n",
            "Method Description:\nInserts a sublist line.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.insertLine(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.removeCurrentSublistSubrecord(options)": {
        "prefix": "CurrentRecord.removeCurrentSublistSubrecord(options)",
        "body": [
            "${1:CurrentRecord}.removeCurrentSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.removeCurrentSublistSubrecord()\n",
            "Method Description:\nRemoves the subrecord for the associated sublist field.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.removeCurrentSublistSubrecord(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.removeLine(options)": {
        "prefix": "CurrentRecord.removeLine(options)",
        "body": [
            "${1:CurrentRecord}.removeLine({",
            "\tsublistId: ${2:string*},",
            "\tline: ${3:number*},",
            "\tignoreRecalc: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.removeLine()\n",
            "Method Description:\nRemoves a sublist line.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.removeLine(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.removeSubrecord(options)": {
        "prefix": "CurrentRecord.removeSubrecord(options)",
        "body": [
            "${1:CurrentRecord}.removeSubrecord({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.removeSubrecord()\n",
            "Method Description:\nRemoves the subrecord for the associated field.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.removeSubrecord(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.selectLine(options)": {
        "prefix": "CurrentRecord.selectLine(options)",
        "body": [
            "${1:CurrentRecord}.selectLine({",
            "\tsublistId: ${2:string*},",
            "\tline: ${3:number*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.selectLine()\n",
            "Method Description:\nSelects an existing line in a sublist.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.selectLine(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.selectNewLine(options)": {
        "prefix": "CurrentRecord.selectNewLine(options)",
        "body": [
            "${1:CurrentRecord}.selectNewLine({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.selectNewLine()\n",
            "Method Description:\nSelects a new line at the end of a sublist.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.selectNewLine(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.setCurrentMatrixSublistValue(options)": {
        "prefix": "CurrentRecord.setCurrentMatrixSublistValue(options)",
        "body": [
            "${1:CurrentRecord}.setCurrentMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tvalue: ${5:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${6:boolean},",
            "\tforceSyncSourcing: ${7:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.setCurrentMatrixSublistValue()\n",
            "Method Description:\nSets the value for the line currently selected in the matrix.\nSets a numeric value for rate and ratehighprecision fields.\nThis method is not available for standard records.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.setCurrentMatrixSublistValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.setCurrentSublistText(options)": {
        "prefix": "CurrentRecord.setCurrentSublistText(options)",
        "body": [
            "${1:CurrentRecord}.setCurrentSublistText({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\ttext: ${4:string*},",
            "\tignoreFieldChange: ${5:boolean},",
            "\tforceSyncSourcing: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.setCurrentSublistText()\n",
            "Method Description:\nSets the value for the field in the currently selected line by a text representation.\nSets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.setCurrentSublistText(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.setCurrentSublistValue(options)": {
        "prefix": "CurrentRecord.setCurrentSublistValue(options)",
        "body": [
            "${1:CurrentRecord}.setCurrentSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tvalue: ${4:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${5:boolean},",
            "\tforceSyncSourcing: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.setCurrentSublistValue()\n",
            "Method Description:\nSets the value for the field in the currently selected line.\nWhen you edit a sublist line with SuiteScript, it triggers an internal validation of the sublist line. If the line validation fails, the script also fails. For example, if your script edits a closed catch up period, the validation fails and prevents SuiteScript from editing the closed catch up period.\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.setCurrentSublistValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.setMatrixHeaderValue(options)": {
        "prefix": "CurrentRecord.setMatrixHeaderValue(options)",
        "body": [
            "${1:CurrentRecord}.setMatrixHeaderValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tvalue: ${5:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${6:boolean},",
            "\tforceSyncSourcing: ${7:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.setMatrixHeaderValue()\n",
            "Method Description:\nSets the value for the associated header in the matrix.\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.setMatrixHeaderValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.setMatrixSublistValue(options)": {
        "prefix": "CurrentRecord.setMatrixSublistValue(options)",
        "body": [
            "${1:CurrentRecord}.setMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tline: ${5:number*},",
            "\tvalue: ${6:number | Date | string | array | boolean*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.setMatrixSublistValue()\n",
            "Method Description:\nSets the value for the associated field in the matrix.\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.setMatrixSublistValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.setText(options)": {
        "prefix": "CurrentRecord.setText(options)",
        "body": [
            "${1:CurrentRecord}.setText({",
            "\tfieldId: ${2:string*},",
            "\ttext: ${3:string*},",
            "\tignoreFieldChange: ${4:boolean},",
            "\tforceSyncSourcing: ${5:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.setText()\n",
            "Method Description:\nSets the value of the field by a text representation.\nSets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.setText(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.setValue(options)": {
        "prefix": "CurrentRecord.setValue(options)",
        "body": [
            "${1:CurrentRecord}.setValue({",
            "\tfieldId: ${2:string*},",
            "\tvalue: ${3:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${4:boolean},",
            "\tforceSyncSourcing: ${5:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.setValue()\n",
            "Method Description:\nSets the value of a field.\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.setValue(options)\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.id": {
        "prefix": "CurrentRecord.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.id for more information.",
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.id\n",
            "Property Description:\nThe internal ID of a specific record.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.id\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.isDynamic": {
        "prefix": "CurrentRecord.isDynamic",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.isDynamic for more information.",
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.isDynamic\n",
            "Property Description:\nIndicates whether the record is in dynamic mode. For more information, see SuiteScript 2.0 – Standard and Dynamic Modes.\nThis value is set when the record is created or accessed.\n",
            "Type:\nboolean (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.isDynamic\n"
        ]
    },
    "(N/currentRecord) CurrentRecord.type": {
        "prefix": "CurrentRecord.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.type for more information.",
        "description": [
            "N/currentRecord Module",
            "CurrentRecord.type\n",
            "Property Description:\nThe current record’s type.\nNote the following:\nOn an instance of a standard record type, this property is represented by a value from the record.Type enum.\nOn an instance of a custom record type, this value is populated by the custom record type’s string ID. For help finding this ID, see Custom Record.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrentRecord.type\n"
        ]
    },
    "(N/currentRecord) currentRecord.Field": {
        "prefix": "currentRecord.Field",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.Field for more information.",
        "description": [
            "N/currentRecord Module",
            "currentRecord.Field\n",
            "Object Description:\nEncapsulates a body or sublist field on the current record.\nUse the following methods to access the Field object:\nCurrentRecord.getField(options)\nCurrentRecord.getSublistField(options)\nFor a complete list of this object’s methods and properties, see N/currentRecord Module.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.Field\n"
        ]
    },
    "(N/currentRecord) Field.getSelectOptions(options)": {
        "prefix": "Field.getSelectOptions(options)",
        "body": [
            "${1:Field}.getSelectOptions({",
            "\tfilter: ${2:string},",
            "\toperator: ${3:string}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "Field.getSelectOptions()\n",
            "Method Description:\nReturns an array of available options on a standard or custom select, multiselect, or radio field as key-value pairs.\nYou can use this method only in dynamic mode. For additional information on dynamic mode, see CurrentRecord.isDynamic.\n",
            "Returns:\narray\nOnly the first 1,000 available options are returned in an array.\nIf there are more than 1,000 available options, an empty array [] is returned.\nThis function returns an array in the following format:\nThis function returns Type Error if the field is not a supported field for this method.\n",
            "Governance:\nNone\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.getSelectOptions(options)\n"
        ]
    },
    "(N/currentRecord) Field.insertSelectOption(options)": {
        "prefix": "Field.insertSelectOption(options)",
        "body": [
            "${1:Field}.insertSelectOption({",
            "\tvalue: ${2:string},",
            "\ttext: ${3:string},",
            "\tisSelected: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "Field.insertSelectOption()\n",
            "Method Description:\nInserts an option into certain types of select and multiselect fields.\nThis method is usable only in select and multiselect fields that were added by a front-end Suitelet or beforeLoad user event script. The IDs for these fields always have a prefix of custpage.\n",
            "Returns:\nVoid\n",
            "Governance:\nNone\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.insertSelectOption(options)\n"
        ]
    },
    "(N/currentRecord) Field.removeSelectOption(options)": {
        "prefix": "Field.removeSelectOption(options)",
        "body": [
            "${1:Field}.removeSelectOption({",
            "\tvalue: ${2:string}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "Field.removeSelectOption()\n",
            "Method Description:\nRemoves a select option from certain types of select and multiselect fields.\nThis method is usable only in select fields that were added by a front-end Suitelet or beforeLoad user event script. The IDs for these fields always have a prefix of custpage.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.removeSelectOption(options)\n"
        ]
    },
    "(N/currentRecord) Field.id": {
        "prefix": "Field.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.id for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.id\n",
            "Property Description:\nReturns the internal ID of a standard or custom body or sublist field.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.id\n"
        ]
    },
    "(N/currentRecord) Field.label": {
        "prefix": "Field.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.label for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.label\n",
            "Property Description:\nReturns the UI label for a standard or custom field body or sublist field.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.label\n"
        ]
    },
    "(N/currentRecord) Field.isMandatory": {
        "prefix": "Field.isMandatory",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isMandatory for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.isMandatory\n",
            "Property Description:\nReturns true if the standard or custom field is mandatory on the record form, or false otherwise.\n",
            "Type:\nboolean\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isMandatory\n"
        ]
    },
    "(N/currentRecord) Field.isDisabled": {
        "prefix": "Field.isDisabled",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isDisabled for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.isDisabled\n",
            "Property Description:\nThis property reflects the display type of a field. A value of true means the field is disabled. A value of false means the field is enabled. Note also:\nIf you are working with a body field, you can use this property to change the field’s display type.\nIf you are working with a sublist field, you can set this property to true or false, but be aware that this action affects the entire sublist column, even though a sublist field is associated with one line.\nFor both body and sublist fields, you can use Field.isDisabled to determine whether the field is disabled or enabled.\n",
            "Type:\nboolean\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isDisabled\n"
        ]
    },
    "(N/currentRecord) Field.isPopup": {
        "prefix": "Field.isPopup",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isPopup for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.isPopup\n",
            "Property Description:\nReturns true if the field is a popup list field, or false otherwise.\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isPopup\n"
        ]
    },
    "(N/currentRecord) Field.isDisplay": {
        "prefix": "Field.isDisplay",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isDisplay for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.isDisplay\n",
            "Property Description:\nReturns true if the field is set to display on the record form, or false otherwise.\nFields can be a part of a record even if they are not displayed on the record form.\nThis property is read-only for sublist fields.\n",
            "Type:\nboolean\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isDisplay\n"
        ]
    },
    "(N/currentRecord) Field.isVisible": {
        "prefix": "Field.isVisible",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isVisible for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.isVisible\n",
            "Property Description:\nReturns true if the field is visible on the record form, or false otherwise.\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isVisible\n"
        ]
    },
    "(N/currentRecord) Field.isReadOnly": {
        "prefix": "Field.isReadOnly",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isReadOnly for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.isReadOnly\n",
            "Property Description:\nReturns true if the field on the record form cannot be edited, or false otherwise.\nFor textarea fields, this property can be read or written to. For all other fields, this property is read-only.\n",
            "Type:\nboolean\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isReadOnly\n"
        ]
    },
    "(N/currentRecord) Field.sublistId": {
        "prefix": "Field.sublistId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.sublistId for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.sublistId\n",
            "Property Description:\nReturns the sublist ID for the specified sublist field.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.sublistId\n"
        ]
    },
    "(N/currentRecord) Field.type": {
        "prefix": "Field.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.type for more information.",
        "description": [
            "N/currentRecord Module",
            "Field.type\n",
            "Property Description:\nReturns the type of a body or sublist field.\nFor example, the value can return text, date, currency, select, checkbox, and other similar values. For more information on possible return values, see format.Type\nThe maximum character limit for select field types is 801.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.type\n"
        ]
    },
    "(N/currentRecord) currentRecord.Sublist": {
        "prefix": "currentRecord.Sublist",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.Sublist for more information.",
        "description": [
            "N/currentRecord Module",
            "currentRecord.Sublist\n",
            "Object Description:\nEncapsulates a sublist on the current record.\nFor a complete list of this object’s methods and properties, see N/currentRecord Module.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.Sublist\n"
        ]
    },
    "(N/currentRecord) Sublist.getColumn(options)": {
        "prefix": "Sublist.getColumn(options)",
        "body": [
            "${1:Sublist}.getColumn({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/currentRecord Module",
            "Sublist.getColumn()\n",
            "Method Description:\nReturns a column in the sublist.\n",
            "Returns:\ncurrentRecord.Column\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.getColumn(options)\n"
        ]
    },
    "(N/currentRecord) Sublist.id": {
        "prefix": "Sublist.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.id for more information.",
        "description": [
            "N/currentRecord Module",
            "Sublist.id\n",
            "Property Description:\nReturns the internal ID of the sublist.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.id\n"
        ]
    },
    "(N/currentRecord) Sublist.isChanged": {
        "prefix": "Sublist.isChanged",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isChanged for more information.",
        "description": [
            "N/currentRecord Module",
            "Sublist.isChanged\n",
            "Property Description:\nIndicates whether the sublist has changed on the current record form.\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isChanged\n"
        ]
    },
    "(N/currentRecord) Sublist.isDisplay": {
        "prefix": "Sublist.isDisplay",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isDisplay for more information.",
        "description": [
            "N/currentRecord Module",
            "Sublist.isDisplay\n",
            "Property Description:\nIndicates whether the sublist is displayed on the current record form.\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isDisplay\n"
        ]
    },
    "(N/currentRecord) Sublist.type": {
        "prefix": "Sublist.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.type for more information.",
        "description": [
            "N/currentRecord Module",
            "Sublist.type\n",
            "Property Description:\nReturns the sublist type.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/currentRecord Module\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.type\n"
        ]
    },
    "(N/currentRecord) currentRecord.get()": {
        "prefix": "currentRecord.get()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.get() for more information.",
        "description": [
            "N/currentRecord Module",
            "currentRecord.get()\n",
            "Method Description:\nRetrieves a currentRecord object that represents the record active on the current page.\n",
            "Returns:\ncurrentRecord.CurrentRecord\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.get()\n"
        ]
    },
    "(N/currentRecord) currentRecord.get.promise()": {
        "prefix": "currentRecord.get.promise()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.get.promise() for more information.",
        "description": [
            "N/currentRecord Module",
            "currentRecord.get.promise()\n",
            "Method Description:\nRetrieves a promise for a currentRecord object that represents the record active on the current page.\nThe parameters and errors thrown for this method are the same as those for currentRecord.get(). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/currentRecord Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=currentRecord.get.promise()\n"
        ]
    },
    "(N/dataset) dataset.Column": {
        "prefix": "dataset.Column",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Column for more information.",
        "description": [
            "N/dataset Module",
            "dataset.Column\n",
            "Object Description:\nEncapsulates the record fields in the dataset. Columns are equivalent to the fields you use when you build a dataset in SuiteAnalytics. For more information on datasets in SuiteAnalytics, see Custom Workbooks and Datasets.\nThis object is created using the dataset.createColumn(options) method.\nFor a complete list of this object’s properties, see Column Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/dataset Module\n",
            "Methods and Properties:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Column\n"
        ]
    },
    "(N/dataset) Column.alias": {
        "prefix": "Column.alias",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.alias for more information.",
        "description": [
            "N/dataset Module",
            "Column.alias\n",
            "Property Description:\nThe alias of the column.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.alias\n"
        ]
    },
    "(N/dataset) Column.fieldId": {
        "prefix": "Column.fieldId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.fieldId for more information.",
        "description": [
            "N/dataset Module",
            "Column.fieldId\n",
            "Property Description:\nThe ID of the record field associated with the column.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.fieldId\n"
        ]
    },
    "(N/dataset) Column.formula": {
        "prefix": "Column.formula",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.formula for more information.",
        "description": [
            "N/dataset Module",
            "Column.formula\n",
            "Property Description:\nThe formula of the column. For more information on formulas in SuiteAnalytics, see Formula Fields.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.formula\n"
        ]
    },
    "(N/dataset) Column.id": {
        "prefix": "Column.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.id for more information.",
        "description": [
            "N/dataset Module",
            "Column.id\n",
            "Property Description:\nThe ID of the column.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.id\n"
        ]
    },
    "(N/dataset) Column.join": {
        "prefix": "Column.join",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.join for more information.",
        "description": [
            "N/dataset Module",
            "Column.join\n",
            "Property Description:\nA column join.\n",
            "Type:\ndataset.Join (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.join\n"
        ]
    },
    "(N/dataset) Column.label": {
        "prefix": "Column.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.label for more information.",
        "description": [
            "N/dataset Module",
            "Column.label\n",
            "Property Description:\nThe label of the column.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.label\n"
        ]
    },
    "(N/dataset) Column.type": {
        "prefix": "Column.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.type for more information.",
        "description": [
            "N/dataset Module",
            "Column.type\n",
            "Property Description:\nThe return type of the formula.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.type\n"
        ]
    },
    "(N/dataset) dataset.Condition": {
        "prefix": "dataset.Condition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Condition for more information.",
        "description": [
            "N/dataset Module",
            "dataset.Condition\n",
            "Object Description:\nThe conditions for the dataset. Conditions are equivalent to criteria you use when you build a dataset in SuiteAnalytics. For more information on criteria used in datasets in SuiteAnalytics, see Dataset Criteria Filters.\nThis object is created using the dataset.createCondition(options) method.\nFor a complete list of this object’s properties, see Condition Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/dataset Module\n",
            "Methods and Properties:\nCondition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Condition\n"
        ]
    },
    "(N/dataset) Condition.children": {
        "prefix": "Condition.children",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.children for more information.",
        "description": [
            "N/dataset Module",
            "Condition.children\n",
            "Property Description:\nThe children of the condition (e.g., subconditions AND’d or OR’d).\n",
            "Type:\ndataset.Condition[] (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.children\n"
        ]
    },
    "(N/dataset) Condition.column": {
        "prefix": "Condition.column",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.column for more information.",
        "description": [
            "N/dataset Module",
            "Condition.column\n",
            "Property Description:\nThe column on which the condition is placed.\n",
            "Type:\ndataset.Column (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.column\n"
        ]
    },
    "(N/dataset) Condition.operator": {
        "prefix": "Condition.operator",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.operator for more information.",
        "description": [
            "N/dataset Module",
            "Condition.operator\n",
            "Property Description:\nThe operator of the condition.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.operator\n"
        ]
    },
    "(N/dataset) Condition.values": {
        "prefix": "Condition.values",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.values for more information.",
        "description": [
            "N/dataset Module",
            "Condition.values\n",
            "Property Description:\nThe values for this condition\n",
            "Type:\nstring[] | number[] | boolean[] | Date[] | Object[] (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.values\n"
        ]
    },
    "(N/dataset) dataset.Dataset": {
        "prefix": "dataset.Dataset",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Dataset for more information.",
        "description": [
            "N/dataset Module",
            "dataset.Dataset\n",
            "Object Description:\nEncapsulates the entire dataset, including columns, conditions, and joins.\nThis object is created using the dataset.create(options) method.\nFor a complete list of this object’s properties, see Dataset Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/dataset Module\n",
            "Methods and Properties:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Dataset\n"
        ]
    },
    "(N/dataset) Dataset.getExpressionFromColumn(options)": {
        "prefix": "Dataset.getExpressionFromColumn(options)",
        "body": [
            "${1:Dataset}.getExpressionFromColumn({",
            "\tcolumnId: ${2:number*},",
            "\talias: ${3:string}",
            "})"
        ],
        "description": [
            "N/dataset Module",
            "Dataset.getExpressionFromColumn()\n",
            "Method Description:\nReturns an expression which can be used in workbook.\n",
            "Returns:\nworkbook.Expression\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.getExpressionFromColumn(options)\n"
        ]
    },
    "(N/dataset) Dataset.run()": {
        "prefix": "Dataset.run()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.run() for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.run()\n",
            "Method Description:\nExecutes the dataset and returns the result set (the same as in N/query Module).\n",
            "Returns:\nquery.ResultSet\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.run()\n"
        ]
    },
    "(N/dataset) Dataset.runPaged()": {
        "prefix": "Dataset.runPaged()",
        "body": [
            "${1:Dataset}.runPaged(){",
            "\tpageSize: ${2:number*}",
            "})"
        ],
        "description": [
            "N/dataset Module",
            "Dataset.runPaged()\n",
            "Method Description:\nExecutes the dataset and returns the result set as paginated data (the same as in N/query Module). The maximum number of results per page is 1000. The minimum number of results per page is 5, except for the last page, which may include fewer than 5 results.\n",
            "Returns:\nquery.PagedData\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.runPaged()\n"
        ]
    },
    "(N/dataset) Dataset.save()": {
        "prefix": "Dataset.save()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.save() for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.save()\n",
            "Method Description:\nSaves a dataset.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.save()\n"
        ]
    },
    "(N/dataset) Dataset.columns": {
        "prefix": "Dataset.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.columns for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.columns\n",
            "Property Description:\nThe columns in the dataset.\n",
            "Type:\ndataset.Column[]\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.columns\n"
        ]
    },
    "(N/dataset) Dataset.condition": {
        "prefix": "Dataset.condition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.condition for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.condition\n",
            "Property Description:\nThe condition (criteria) for the entire dataset.\n",
            "Type:\ndataset.Condition\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.condition\n"
        ]
    },
    "(N/dataset) Dataset.description": {
        "prefix": "Dataset.description",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.description for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.description\n",
            "Property Description:\nThe description of the dataset.\n",
            "Type:\nstring\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.description\n"
        ]
    },
    "(N/dataset) Dataset.id": {
        "prefix": "Dataset.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.id for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.id\n",
            "Property Description:\nThe ID of the dataset.\n",
            "Type:\nstring\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.id\n"
        ]
    },
    "(N/dataset) Dataset.name": {
        "prefix": "Dataset.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.name for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.name\n",
            "Property Description:\nThe name of the dataset.\n",
            "Type:\nstring\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.name\n"
        ]
    },
    "(N/dataset) Dataset.type": {
        "prefix": "Dataset.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.type for more information.",
        "description": [
            "N/dataset Module",
            "Dataset.type\n",
            "Property Description:\nThe internal ID for the base record type for the dataset.\nUse Analytics Browser to find the Internal ID of scriptable records.\n",
            "Type:\nstring\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Dataset\n",
            "Sibling Object Members:\nDataset Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Dataset.type\n"
        ]
    },
    "(N/dataset) dataset.Join": {
        "prefix": "dataset.Join",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Join for more information.",
        "description": [
            "N/dataset Module",
            "dataset.Join\n",
            "Object Description:\nEncapsulates joined records used in the dataset.\nThis object is created using the dataset.createJoin(options) method.\nFor more information on using joins in SuiteAnalytics, see Joining Records Types in a Dataset.\nFor a complete list of this object’s properties, see Join Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/dataset Module\n",
            "Methods and Properties:\nJoin Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.Join\n"
        ]
    },
    "(N/dataset) Join.fieldId": {
        "prefix": "Join.fieldId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Join.fieldId for more information.",
        "description": [
            "N/dataset Module",
            "Join.fieldId\n",
            "Property Description:\nThe ID of the record field on which the join is performed.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Join\n",
            "Sibling Object Members:\nJoin Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Join.fieldId\n"
        ]
    },
    "(N/dataset) Join.join": {
        "prefix": "Join.join",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Join.join for more information.",
        "description": [
            "N/dataset Module",
            "Join.join\n",
            "Property Description:\nThe child join, if the join is a multilevel join.\n",
            "Type:\ndataset.Join (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Join\n",
            "Sibling Object Members:\nJoin Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Join.join\n"
        ]
    },
    "(N/dataset) Join.source": {
        "prefix": "Join.source",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Join.source for more information.",
        "description": [
            "N/dataset Module",
            "Join.source\n",
            "Property Description:\nThe internal ID for the source record type of the join.\nUse Analytics Browser to find the Internal ID of scriptable records.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Join\n",
            "Sibling Object Members:\nJoin Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Join.source\n"
        ]
    },
    "(N/dataset) Join.target": {
        "prefix": "Join.target",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Join.target for more information.",
        "description": [
            "N/dataset Module",
            "Join.target\n",
            "Property Description:\nThe polymorphic target of the join.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/dataset Module\n",
            "Parent Object:\ndataset.Join\n",
            "Sibling Object Members:\nJoin Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Join.target\n"
        ]
    },
    "(N/dataset) dataset.create(options)": {
        "prefix": "dataset.create(options)",
        "body": [
            "${1:dataset}.create({",
            "\tcolumns: ${2:dataset.Column[]},",
            "\tcondition: ${3:dataset.Condition},",
            "\tdescription: ${4:string},",
            "\tid: ${5:string},",
            "\tname: ${6:string},",
            "\ttype: ${7:string*}",
            "})"
        ],
        "description": [
            "N/dataset Module",
            "dataset.create()\n",
            "Method Description:\nCreates a dataset based on a record type. A dataset can include columns and conditions (criteria).\n",
            "Returns:\ndataset.Dataset\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/dataset Module\n",
            "Sibling Module Members:\nN/dataset Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.create(options)\n"
        ]
    },
    "(N/dataset) dataset.createColumn(options)": {
        "prefix": "dataset.createColumn(options)",
        "body": [
            "${1:dataset}.createColumn({",
            "\talias: ${2:string},",
            "\tfieldId: ${3:string},",
            "\tformula: ${4:string},",
            "\tjoin: ${5:dataset.Join},",
            "\tid: ${6:number},",
            "\tlabel: ${7:string},",
            "\ttype: ${8:string}",
            "})"
        ],
        "description": [
            "N/dataset Module",
            "dataset.createColumn()\n",
            "Method Description:\nCreates a dataset column based on a field or on a formula and a type.\n",
            "Returns:\ndataset.Column\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/dataset Module\n",
            "Sibling Module Members:\nN/dataset Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.createColumn(options)\n"
        ]
    },
    "(N/dataset) dataset.createCondition(options)": {
        "prefix": "dataset.createCondition(options)",
        "body": [
            "${1:dataset}.createCondition({",
            "\tchildren: ${2:dataset.Condition[]},",
            "\tcolumn: ${3:dataset.Column},",
            "\toperator: ${4:string*},",
            "\tvalues: ${5:Array<null|Object|number|string|boolean|Date>}",
            "})"
        ],
        "description": [
            "N/dataset Module",
            "dataset.createCondition()\n",
            "Method Description:\nCreates a dataset condition (criteria). A condition is applied to a dataset column and includes an operator.\nFor more information on criteria used in datasets in SuiteAnalytics, see Dataset Criteria Filters.\n",
            "Returns:\ndataset.Condition\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/dataset Module\n",
            "Sibling Module Members:\nN/dataset Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.createCondition(options)\n"
        ]
    },
    "(N/dataset) dataset.createJoin(options)": {
        "prefix": "dataset.createJoin(options)",
        "body": [
            "${1:dataset}.createJoin({",
            "\tfieldId: ${2:string*},",
            "\tjoin: ${3:dataset.Join},",
            "\tsource: ${4:string},",
            "\ttarget: ${5:string}",
            "})"
        ],
        "description": [
            "N/dataset Module",
            "dataset.createJoin()\n",
            "Method Description:\nCreates a dataset join. Multi-level, inverse, and polymorphic joins can be created. Joins can be used when you create a dataset column.\nFor more information on using joins in a dataset in SuiteAnalytics, see the help topic, Joining Records Types in a Dataset.\n",
            "Returns:\ndataset.Join\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/dataset Module\n",
            "Sibling Module Members:\nN/dataset Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.createJoin(options)\n"
        ]
    },
    "(N/dataset) dataset.list()": {
        "prefix": "dataset.list()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=dataset.list() for more information.",
        "description": [
            "N/dataset Module",
            "dataset.list()\n",
            "Method Description:\nLists all existing datasets.\n",
            "Returns:\nObject[], where each Object has properties: ‘id’, ‘name’, ‘record’, and an optional ‘description’.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/dataset Module\n",
            "Sibling Module Members:\nN/dataset Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.list()\n"
        ]
    },
    "(N/dataset) dataset.load(options)": {
        "prefix": "dataset.load(options)",
        "body": [
            "${1:dataset}.load({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/dataset Module",
            "dataset.load()\n",
            "Method Description:\nLoads an existing dataset.\n",
            "Returns:\ndataset.Dataset\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/dataset Module\n",
            "Sibling Module Members:\nN/dataset Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dataset.load(options)\n"
        ]
    },
    "(N/email) email.send(options)": {
        "prefix": "email.send(options)",
        "body": [
            "${1:email}.send({",
            "\tauthor: ${2:number*},",
            "\tbody: ${3:string*},",
            "\trecipients: ${4:number | string | number[] | string[]*},",
            "\tsubject: ${5:string*},",
            "\tattachments: ${6:| file.File[]},",
            "\tbcc: ${7:number[] | string[]},",
            "\tcc: ${8:number[] | string[]},",
            "\tisInternalOnly: ${9:boolean},",
            "\trelatedRecords: ${10:Object},",
            "\treplyTo: ${11:string}",
            "})"
        ],
        "description": [
            "N/email Module",
            "email.send()\n",
            "Method Description:\nSends email to an individual or group of recipients and receives bounceback notifications.\nA maximum of 10 recipients (recipient + cc + bcc) is allowed.\nThe total message size (including attachments) must be 20MB or less. The size of each individual attachment cannot exceed 10MB.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/email Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=email.send(options)\n"
        ]
    },
    "(N/email) email.send.promise(options)": {
        "prefix": "email.send.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=email.send.promise(options) for more information.",
        "description": [
            "N/email Module",
            "email.send.promise()\n",
            "Method Description:\nSends email asynchronously to an individual or group of recipients and receives bounceback notifications.\nThe parameters and errors thrown for this method are the same as those for email.send(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nemail.send(options)\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/email Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=email.send.promise(options)\n"
        ]
    },
    "(N/email) email.sendBulk(options)": {
        "prefix": "email.sendBulk(options)",
        "body": [
            "${1:email}.sendBulk({",
            "\tauthor: ${2:number*},",
            "\tbody: ${3:string*},",
            "\trecipients: ${4:number | string | number[] | string[]*},",
            "\tsubject: ${5:string*},",
            "\tattachments: ${6:file.File []},",
            "\tbcc: ${7:number[] | string[]},",
            "\tcc: ${8:number[] | string[]},",
            "\tisInternalOnly: ${9:boolean},",
            "\trelatedRecords: ${10:Object},",
            "\treplyTo: ${11:string}",
            "})"
        ],
        "description": [
            "N/email Module",
            "email.sendBulk()\n",
            "Method Description:\nSends bulk email (for use when a bounceback notification is not required).\nA maximum of 10 recipients (recipient + cc + bcc) is allowed.\nThe total message size (including attachments) must be 20MB or less. The size of each individual attachment cannot exceed 10MB.\nThis API normally uses a bulk email server to send messages. If you need to increase the successful delivery rate of an email, use email.send(options) so that a transactional email server is used.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/email Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=email.sendBulk(options)\n"
        ]
    },
    "(N/email) email.sendBulk.promise(options)": {
        "prefix": "email.sendBulk.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=email.sendBulk.promise(options) for more information.",
        "description": [
            "N/email Module",
            "email.sendBulk.promise()\n",
            "Method Description:\nSends bulk email asynchronously (for use when a bounceback notification is not required).\nThe parameters and errors thrown for this method are the same as those for email.sendBulk(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nemail.sendBulk(options)\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/email Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=email.sendBulk.promise(options)\n"
        ]
    },
    "(N/email) email.sendCampaignEvent(options)": {
        "prefix": "email.sendCampaignEvent(options)",
        "body": [
            "${1:email}.sendCampaignEvent({",
            "\tcampaignEventId: ${2:number*},",
            "\trecipientId: ${3:number*}",
            "})"
        ],
        "description": [
            "N/email Module",
            "email.sendCampaignEvent()\n",
            "Method Description:\nSends a single “on-demand” campaign email to a specified recipient and return a campaign response ID to track the email. This is used for lead nurturing campaigns (drip marketing email).\nEmail (campaignemail) sublists are not supported. The campaign must use a Lead Nurturing (campaigndrip) sublist.\nThis API normally uses a bulk email server to send messages. If you need to increase the successful delivery rate of an email, use email.send(options) so that a transactional email server is used.\n",
            "Returns:\nA campaign response ID (tracking code) as number\nIf the email fails to send, the value returned is –1.\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/email Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=email.sendCampaignEvent(options)\n"
        ]
    },
    "(N/email) email.sendCampaignEvent.promise(options)": {
        "prefix": "email.sendCampaignEvent.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=email.sendCampaignEvent.promise(options) for more information.",
        "description": [
            "N/email Module",
            "email.sendCampaignEvent.promise()\n",
            "Method Description:\nSends a single “on-demand” campaign email asynchronously to a specified recipient and return a campaign response ID to track the email. This is used for lead nurturing campaigns (drip marketing email). If the email fails to send, the value returned is –1.\nThe parameters and errors thrown for this method are the same as those for email.sendCampaignEvent(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nemail.sendCampaignEvent(options)\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/email Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=email.sendCampaignEvent.promise(options)\n"
        ]
    },
    "(N/encode) encode.convert(options)": {
        "prefix": "encode.convert(options)",
        "body": [
            "${1:encode}.convert({",
            "\tstring: ${2:string*},",
            "\tinputEncoding: ${3:string*},",
            "\toutputEncoding: ${4:string*}",
            "})"
        ],
        "description": [
            "N/encode Module",
            "encode.convert()\n",
            "Method Description:\nConverts a string to another type of encoding.\n",
            "Returns:\nThe re-encoded string\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/encode Module\n",
            "Since:\n2015.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=encode.convert(options)\n"
        ]
    },
    "(N/encode) encode.Encoding": {
        "prefix": "encode.Encoding",
        "body": "encode.Encoding.${1|UTF_8,BASE_16,BASE_32,BASE_64,BASE_64_URL_SAFE,HEX|}",
        "description": [
            "N/encode Module",
            "encode.Encoding\n",
            "Enum Description:\nHolds the string values for the supported character set encoding.\nThis enum is used to set the value of inputEncoding and outputEncoding parameters that are members of the N/crypto Module or N/encode Module.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/encode Module\n",
            "Since:\n2015.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=encode.Encoding\n"
        ]
    },
    "(N/error) error.SuiteScriptError": {
        "prefix": "error.SuiteScriptError",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=error.SuiteScriptError for more information.",
        "description": [
            "N/error Module",
            "error.SuiteScriptError\n",
            "Object Description:\nEncapsulates a custom SuiteScript error for any server script type that is not a user event script.\nUse this object in a try-catch statement to abort script execution.\nCreate a new custom error with the error.create(options) method. The error.create(options) method returns error.SuiteScriptError when it is called in any server script that is not a user event script.\nFor a complete list of this object’s methods and properties, see SuiteScriptError Object Members.\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=error.SuiteScriptError\n"
        ]
    },
    "(N/error) SuiteScriptError.cause": {
        "prefix": "SuiteScriptError.cause",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.cause for more information.",
        "description": [
            "N/error Module",
            "SuiteScriptError.cause\n",
            "Property Description:\nThe cause of the error.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.cause\n"
        ]
    },
    "(N/error) SuiteScriptError.id": {
        "prefix": "SuiteScriptError.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.id for more information.",
        "description": [
            "N/error Module",
            "SuiteScriptError.id\n",
            "Property Description:\nError ID that is automatically generated when a new error is created.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.id\n"
        ]
    },
    "(N/error) SuiteScriptError.message": {
        "prefix": "SuiteScriptError.message",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.message for more information.",
        "description": [
            "N/error Module",
            "SuiteScriptError.message\n",
            "Property Description:\nError message text displayed in the Details column of the Execution Log.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.message\n"
        ]
    },
    "(N/error) SuiteScriptError.name": {
        "prefix": "SuiteScriptError.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.name for more information.",
        "description": [
            "N/error Module",
            "SuiteScriptError.name\n",
            "Property Description:\nUser-defined error code.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.name\n"
        ]
    },
    "(N/error) SuiteScriptError.notifyOff": {
        "prefix": "SuiteScriptError.notifyOff",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.notifyOff for more information.",
        "description": [
            "N/error Module",
            "SuiteScriptError.notifyOff\n",
            "Property Description:\nSuppresses email notification when set to true.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.notifyOff\n"
        ]
    },
    "(N/error) SuiteScriptError.stack": {
        "prefix": "SuiteScriptError.stack",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.stack for more information.",
        "description": [
            "N/error Module",
            "SuiteScriptError.stack\n",
            "Property Description:\nList of method calls that the script is executing when the error is thrown. The most recently executed method is listed at the top of the list.\n",
            "Type:\nArray of strings (read-only)\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.stack\n"
        ]
    },
    "(N/error) SuiteScriptError.type": {
        "prefix": "SuiteScriptError.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.type for more information.",
        "description": [
            "N/error Module",
            "SuiteScriptError.type\n",
            "Property Description:\nError types. Use values defined in error.Type.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll server scripts that are not user event scripts.\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteScriptError.type\n"
        ]
    },
    "(N/error) error.UserEventError": {
        "prefix": "error.UserEventError",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=error.UserEventError for more information.",
        "description": [
            "N/error Module",
            "error.UserEventError\n",
            "Object Description:\nEncapsulates a custom SuiteScript error for a user event script.\nUse this object in a try-catch statement to abort script execution.\nCreate a new custom error with the error.create(options) method. The error.create(options) method returns error.UserEventError when it is called in a user event script.\nWhen error.create(options) is called in a server script that is not a user event script, it returns error.SuiteScriptError.\nFor a complete list of this object’s methods and properties, see UserEventError Object Members.\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=error.UserEventError\n"
        ]
    },
    "(N/error) UserEventError.cause": {
        "prefix": "UserEventError.cause",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.cause for more information.",
        "description": [
            "N/error Module",
            "UserEventError.cause\n",
            "Property Description:\nThe cause of the error.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.cause\n"
        ]
    },
    "(N/error) UserEventError.eventType": {
        "prefix": "UserEventError.eventType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.eventType for more information.",
        "description": [
            "N/error Module",
            "UserEventError.eventType\n",
            "Property Description:\nUser event type (beforeLoad, beforeSubmit, or afterSubmit)\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.eventType\n"
        ]
    },
    "(N/error) UserEventError.id": {
        "prefix": "UserEventError.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.id for more information.",
        "description": [
            "N/error Module",
            "UserEventError.id\n",
            "Property Description:\nError ID that is automatically generated when a new error is created.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.id\n"
        ]
    },
    "(N/error) UserEventError.message": {
        "prefix": "UserEventError.message",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.message for more information.",
        "description": [
            "N/error Module",
            "UserEventError.message\n",
            "Property Description:\nError message text displayed in the Details column of the Execution Log.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.message\n"
        ]
    },
    "(N/error) UserEventError.name": {
        "prefix": "UserEventError.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.name for more information.",
        "description": [
            "N/error Module",
            "UserEventError.name\n",
            "Property Description:\nUser-defined error code.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.name\n"
        ]
    },
    "(N/error) UserEventError.notifyOff": {
        "prefix": "UserEventError.notifyOff",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.notifyOff for more information.",
        "description": [
            "N/error Module",
            "UserEventError.notifyOff\n",
            "Property Description:\nSuppresses email notification when set to true.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.notifyOff\n"
        ]
    },
    "(N/error) UserEventError.recordId": {
        "prefix": "UserEventError.recordId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.recordId for more information.",
        "description": [
            "N/error Module",
            "UserEventError.recordId\n",
            "Property Description:\nInternal ID of the submitted record that triggered the script. This property only holds a value when the error is thrown by an afterSubmit user event script.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.recordId\n"
        ]
    },
    "(N/error) UserEventError.stack": {
        "prefix": "UserEventError.stack",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.stack for more information.",
        "description": [
            "N/error Module",
            "UserEventError.stack\n",
            "Property Description:\nList of method calls that the script is executing when the error is thrown. The most recently executed method is listed at the top of the list.\n",
            "Type:\nArray of strings (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.stack\n"
        ]
    },
    "(N/error) UserEventError.type": {
        "prefix": "UserEventError.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.type for more information.",
        "description": [
            "N/error Module",
            "UserEventError.type\n",
            "Property Description:\nError types. Use values defined in error.Type.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nUser event scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=UserEventError.type\n"
        ]
    },
    "(N/error) error.create(options)": {
        "prefix": "error.create(options)",
        "body": [
            "${1:error}.create({",
            "\tmessage: ${2:string*},",
            "\tname: ${3:string*},",
            "\tnotifyOff: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/error Module",
            "error.create()\n",
            "Method Description:\nCreates a new error.SuiteScriptError object.\nUse the error.SuiteScriptError or error.UserEventError object in a try-catch statement to abort script execution.\nNote this method creates a new error, but does not throw the error. Your script code will need to include logic to throw the error when appropriate.\n",
            "Returns:\nAn error.SuiteScriptError object.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/error Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=error.create(options)\n"
        ]
    },
    "(N/error) error.Type": {
        "prefix": "error.Type",
        "body": "error.Type.${1|A_SCRIPT_IS_ATTEMPTING_TO_EDIT_THE_1_SUBLIST_THIS_SUBLIST_IS_CURRENTLY_IN_READONLY_MODE_AND_CANNOT_\n\nBE_EDITED_CALL_YOUR_NETSUITE_ADMINISTRATOR_TO_DISABLE_THIS_SCRIPT_IF_YOU_NEED_TO_SUBMIT_THIS_RECORD,AT_LEAST_ONE_EXPRESSION_IS_NEEDED,BUTTONS_MUST_INCLUDE_BOTH_A_LABEL_AND_VALUE,CAN_REFERENCE_ONLY_PERSISTED_DATASET,CANNOT_CREATE_RECORD_DRAFT_OF_EXISTING_RECORD,CANNOT_CREATE_RECORD_INSTANCE,CANNOT_DETERMINE_TYPE_FOR_ALIAS,CANNOT_DETERMINE_VALUE_FOR_ALIAS,CANNOT_RESUBMIT_SUBMITTED_ASYNC_QUERY_TASK,CANNOT_RESUBMIT_SUBMITTED_ASYNC_SEARCH_TASK,CANNOT_RESUBMIT_SUBMITTED_ASYNC_SUITEQL_TASK,COLOR_VALUE_MUST_BE_6_HEXADECIMAL_DIGITS_OF_THE_FORM_RRGGBB__EXAMPLE_FF0000_FOR_RED,CREDIT_CARD_NUMBER_IS_NOT_VALID__PLEASE_CHECK_THAT_ALL_DIGITS_WERE_ENTERED_CORRECTLY,CREDIT_CARD_NUMBER_MUST_CONTAIN_ONLY_DIGITS,CREDIT_CARD_NUMBERS_MUST_CONTAIN_BETWEEN_13_AND_20_DIGITS,DATASET_NAME_IS_MISSING,EACH_VIEW_MUST_HAVE_A_NAME,EACH_VIEW_MUST_HAVE_AN_ID,EMPTY_KEY_NOT_ALLOWED,FAILED_AN_UNEXPECTED_ERROR_OCCURRED,FIELD_1_ALREADY_CONTAINS_A_SUBRECORD_YOU_CANNOT_CALL_CREATESUBRECORD,FIELD_1_CANNOT_BE_EMPTY,FIELD_1_IS_NOT_A_SUBRECORD_FIELD,FIELD_MUST_CONTAIN_A_VALUE,FORM_VALIDATION_FAILED_YOU_CANNOT_CREATE_THIS_SUBRECORD,FORM_VALIDATION_FAILED_YOU_CANNOT_SUBMIT_THIS_RECORD,HISTORY_IS_ONLY_AVAILABLE_FOR_THE_LAST_30_DAYS,ID_CANNOT_HAVE_MORE_THAN_N_CHARACTERS,IDENTIFIERS_CAN_CONTAIN_ONLY_DIGITS_ALPHABETIC_CHARACTERS_OR_WITH_NO_SPACES,INVALID_AGGREGATE_TYPE,INVALID_AGGREGATION,INVALID_ALGORITHM,INVALID_ASPECT_TYPE,INVALID_CERTIFICATE_TYPE,INVALID_CHART_TYPE,INVALID_COLUMN_FOR_SORTING,INVALID_CONFIGURATION_UNABLE_TO_CHANGE_REQUIRE_CONFIGURATION_FOR_1,INVALID_CONFIGURATION_UNABLE_TO_CHANGE_REQUIRE_CONFIGURATION_WITHOUT_A_CONTEXT,INVALID_CUSTOM_VIEW_VALUE,INVALID_DATASET_ID,INVALID_DATE_ID,INVALID_DATE_VALUE_MUST_BE_1,INVALID_DATE_VALUE_MUST_BE_ON_OR_AFTER_1CUTOFF_DATE,INVALID_DIRECTION_FOR_SORTING,INVALID_EMAILS_FOUND,INVALID_EXPRESSION,INVALID_FIELD_CONTEXT,INVALID_FIELD_ID,INVALID_FIELD_INDEX,INVALID_FIELD_VALUE,INVALID_FILTER_FIELD_FOR_CURRENT_VIEW,INVALID_FLD_VALUE,INVALID_FORMULA_TYPE,INVALID_HTTP_METHOD,INVALID_ID_PREFIX,INVALID_KEY_TYPE,INVALID_LOCALE,INVALID_NUMBER_MUST_BE_BETWEEN_1_AND_2,INVALID_NUMBER_MUST_BE_GREATE_THAN_1,INVALID_NUMBER_MUST_BE_LOWER_THAN_1,INVALID_NUMBER_OR_PERCENTAGE,INVALID_OPERATION,INVALID_OPERATOR,INVALID_OR_UNSUPPORTED_RECORD_TYPE_1,INVALID_PAGE_INDEX,INVALID_PAGE_RANGE,INVALID_PERIOD_ADJUSTMENT,INVALID_PERIOD_CODE,INVALID_PERIOD_TYPE,INVALID_RCRD_TYPE,INVALID_RETURN_TYPE_EXPECTED_1,INVALID_SEARCH_OPERATOR,INVALID_SEARCH_TYPE,INVALID_SIGNATURE,INVALID_SIGNATURE_TAG,INVALID_SORT,INVALID_SORT_LOCALE,INVALID_STACKING_TYPE,INVALID_SUBRECORD_MERGE,INVALID_SUBRECORD_REFERENCE,INVALID_SUITEAPP_APPLICATION_ID,INVALID_TASK_TYPE,INVALID_TOTAL_LINE,INVALID_URL_SPACES_ARE_NOT_ALLOWED_IN_THE_URL,INVALID_URL_URL_MUST_START_WITH_HTTP_HTTPS_FTP_OR_FILE,INVALID_WORKBOOK_ID,MUTUALLY_EXCLUSIVE_ARGUMENTS,NAME_CANNOT_BE_EMPTY,NAME_CANNOT_HAVE_MORE_THAN_N_CHARACTERS,NEITHER_ARGUMENT_DEFINED,NO_ASPECTS_DEFINED,NO_CHILDREN_DEFINED,NO_COLUMN_DEFINED,NO_DIMENSION_ITEM_DEFINED,NO_ELEMENTS_DEFINED,NO_SORT_BY_DEFINED,NON_KATAKANA_DATA_FOUND,NOT_SUPPORTED_ON_CURRENT_SUBRECORD,NOTICE_THE_CREDIT_CARD_APPEARS_TO_BE_INCORRECT,OPERATION_IS_NOT_ALLOWED,OPERATOR_ARITY_MISMATCH,PASSWORD_CANNOT_HAVE_MORE_THAN_N_CHARACTERS,PHONE_NUMBER_SHOULD_HAVE_SEVEN_DIGITS_OR_MORE,PLEASE_ENTER_A_VALID_FROM_START_DATE_IN_MMYYYY_FORMAT,PLEASE_ENTER_AN_EXPIRATION_DATE_IN_MMYYYY_FORMAT,PLEASE_INCLUDE_THE_AREA_CODE_FOR_PHONE_NUMBER,PROPERTY_VALUE_CONFLICT,READ_ONLY_PROPERTY,RELATIONSHIP_ALREADY_USED,SCRIPT_EXECUTION_USAGE_LIMIT_EXCEEDED,SELECT_OPTION_ALREADY_PRESENT,SELECT_OPTION_NOT_FOUND,SIGNATURE_VERIFICATION_FAILED,SSS_ARGUMENT_DISCREPANCY,SSS_DUPLICATE_ALIAS,SSS_INVALID_ACTION_ID,SSS_INVALID_API_USAGE,SSS_INVALID_COUNTRY_ID,SSS_INVALID_CURRENCY_ID,SSS_INVALID_FORMAT_TYPE,SSS_INVALID_GETSELECTOPTION_FILTER_OPERATOR,SSS_INVALID_MACRO_ID,SSS_INVALID_READ_SIZE,SSS_INVALID_SEARCH_RESULT_INDEX,SSS_INVALID_SEGMENT_SEPARATOR,SSS_INVALID_SRCH_OPERATOR,SSS_INVALID_SUBLIST,SSS_INVALID_SUBLIST_OPERATION,SSS_INVALID_TYPE_ARG,SSS_INVALID_UI_OBJECT_TYPE,SSS_INVALID_URL,SSS_METHOD_IS_ONLY_ALLOWED_FOR_MATRIX_FIELD,SSS_METHOD_IS_ONLY_ALLOWED_FOR_MULTISELECT_FIELD,SSS_METHOD_IS_ONLY_FOR_SELECT_FIELD,SSS_MISSING_ALIAS,SSS_MISSING_REQD_ARGUMENT,SSS_NOT_YET_SUPPORTED,SSS_RECORD_DOES_NOT_SATISFY_CONDITION,SSS_RECORD_TYPE_MISMATCH,SSS_SEARCH_FOR_EACH_LIMIT_EXCEEDED,SSS_SEARCH_RESULT_LIMIT_EXCEEDED,SSS_SUBLIST_DOESNT_SUPPORT_MOVING_LINES,SSS_TAG_CANNOT_BE_EMPTY,SSS_TAX_REGISTRATION_REQUIRED,SSS_UNSUPPORTED_METHOD,TABLE_DOES_NOT_EXIST,THAT_RECORD_IS_NOT_EDITABLE,THE_FIELD_1_CONTAINED_MORE_THAN_THE_MAXIMUM_NUMBER_2_OF_CHARACTERS_ALLOWED,THE_OPTIONS_ARE_MUTUALLY_EXCLUSIVE_1_2_ARG2,TOO_MANY_RESULTS,TRANSLATION_HANDLE_IS_IN_AN_ILLEGAL_STATE,UNHANDLED_ERRORS_ON_RESTORE,UNKNOWN_CONTEXT_TYPE,UNKNOWN_PARAM,VALUE_1_OUTSIDE_OF_VALID_MINMAX_RANGE_FOR_FIELD_2,WORKBOOK_NAME_IS_MISSING,WRONG_PARAMETER_TYPE,WS_INVALID_REFERENCE_KEY_1,WS_NO_PERMISSIONS_TO_SET_VALUE,YOU_HAVE_ATTEMPTED_AN_UNSUPPORTED_ACTION|}",
        "description": [
            "N/error Module",
            "error.Type\n",
            "Enum Description:\nHolds the string values for error types. You can use these error types and write your own corresponding error messages. This may be useful if you are developing a SuiteScript library.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/error Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=error.Type\n"
        ]
    },
    "(N/file) file.File": {
        "prefix": "file.File",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=file.File for more information.",
        "description": [
            "N/file Module",
            "file.File\n",
            "Object Description:\nEncapsulates a file within NetSuite.\nThis object only encapsulates a file’s metadata. Content is only loaded into memory (and returned as a string) when you call the File.getContents(). Content from CSV or text files can be accessed line by line using File.appendLine(options) or File.lines.iterator().\nBinary content must be base64 encoded.\nCreate a new file.File Object (up to 10MB in size) with the file.create(options) method.\nAfter you create a new file.File, you can:\nupload it to the NetSuite File Cabinet with the File.save() method.\nattach it to an email or fax without saving it to the File Cabinet.\nIf you want to save the file to the NetSuite File Cabinet, you must set a NetSuite File Cabinet folder with the File.folder property. You must do this before you call File.save().\nReturns reader object File.getReader() and iterator of segments File.getSegments(options).\nFor a complete list of this object’s methods and properties, see File Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=file.File\n"
        ]
    },
    "(N/file) File.getContents()": {
        "prefix": "File.getContents()",
        "body": [
            "${1:File}.getContents(){",
            "\tSSS_FILE_CONTENT_SIZE_EXCEEDED: ${2:The file content you are attempting to access exceeds the maximum allowed size of 10 MB.}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.getContents()\n",
            "Method Description:\nMethod used to return the content of the file.\nContent held in memory is limited to 10MB.\nYou can access CSV or text files (including files over 10MB) using File.appendLine(options) or File.lines.iterator().\n",
            "Returns:\nThe file content as a string\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.getContents()\n"
        ]
    },
    "(N/file) File.getReader()": {
        "prefix": "File.getReader()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.getReader() for more information.",
        "description": [
            "N/file Module",
            "File.getReader()\n",
            "Method Description:\nMethod used to return the reader object for performing special read operations\n",
            "Returns:\nfile.Reader\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.getReader()\n"
        ]
    },
    "(N/file) File.getSegments(options)": {
        "prefix": "File.getSegments(options)",
        "body": [
            "${1:File}.getSegments({",
            "\tseparator: ${2:string*}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.getSegments()\n",
            "Method Description:\nMethod used to return the iterator of segments delimited by a separator.\nSeparator is included in each segment.\nEmpty separator is not allowed.\n",
            "Returns:\nIterator\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.getSegments(options)\n"
        ]
    },
    "(N/file) File.appendLine(options)": {
        "prefix": "File.appendLine(options)",
        "body": [
            "${1:File}.appendLine({",
            "\tvalue: ${2:string*}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.appendLine()\n",
            "Method Description:\nMethod used to insert a line to the end of a file.\nThis method can be used on text or .csv files.\nContent held in memory is limited to 10MB. Therefore, each line must be less than 10MB.\n",
            "Returns:\nfile.File Object\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.appendLine(options)\n"
        ]
    },
    "(N/file) File.lines.iterator()": {
        "prefix": "File.lines.iterator()",
        "body": [
            "${1:File}.lines.iterator(){",
            "\tlineContext: ${2:iterator*}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.lines.iterator()\n",
            "Method Description:\nMethod used to pass the next line as an argument to a developer-defined function. You can call this method multiple times to loop over the file contents as a stream.\nReturn false to stop the loop. Return true to continue the loop. By default, false is returned when the end of the file is reached.\nThis method can be used on text or .csv files.\nContent held in memory is limited to 10MB. Therefore, each line must be less than 10MB.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.lines.iterator()\n"
        ]
    },
    "(N/file) File.resetStream()": {
        "prefix": "File.resetStream()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.resetStream() for more information.",
        "description": [
            "N/file Module",
            "File.resetStream()\n",
            "Method Description:\nMethod used to reset the file contents. Serves as an undo action on any unsaved content written with File.appendLine(options) or File.lines.iterator().\nUse this method to reset the reading and writing streams that may have been opened by File.appendLine(options) or File.lines.iterator().\nThe line pointer (or read iterator) is also set to its previous state.\nThis method can be used on text or .csv files.\nTo use this method, each line must be less than 10MB.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.resetStream()\n"
        ]
    },
    "(N/file) File.save()": {
        "prefix": "File.save()",
        "body": [
            "${1:File}.save(){",
            "\tINVALID_KEY_OR_REF: ${2:Invalid folder reference key <passed folder ID>.},",
            "\tSSS_MISSING_REQD_ARGUMENT: ${3:Please enter value(s) for: Folder}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.save()\n",
            "Method Description:\nMethod used to:\nUpload a new file to the NetSuite File Cabinet.\nSave an updated file to the NetSuite File Cabinet.\nThe File.save() method streams files of any size, provided that the file to save or upload meets File Cabinet limits.\nIf you want to save the file to the NetSuite File Cabinet, you must set a NetSuite File Cabinet folder with the File.folder property. You must do this before you call File.save().\n",
            "Returns:\nThe internal ID of the file as a number.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.save()\n"
        ]
    },
    "(N/file) File.description": {
        "prefix": "File.description",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.description for more information.",
        "description": [
            "N/file Module",
            "File.description\n",
            "Property Description:\nThe description of a file. In the UI, the value of description displays in the Description field on the file record.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.description\n"
        ]
    },
    "(N/file) File.encoding": {
        "prefix": "File.encoding",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.encoding for more information.",
        "description": [
            "N/file Module",
            "File.encoding\n",
            "Property Description:\nThe character encoding on a file. Value is set with the file.Encoding enum.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.encoding\n"
        ]
    },
    "(N/file) File.fileType": {
        "prefix": "File.fileType",
        "body": [
            "${1:File}.fileType{",
            "\tREAD_ONLY_PROPERTY: ${2:}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.fileType\n",
            "Property Description:\nThe file type of a file.\nThis property is read-only. You must set the file type by passing in a file.Type enum value to file.create(options).\n",
            "Type:\nenum\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.fileType\n"
        ]
    },
    "(N/file) File.folder": {
        "prefix": "File.folder",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.folder for more information.",
        "description": [
            "N/file Module",
            "File.folder\n",
            "Property Description:\nThe internal ID of a file’s folder within the NetSuite File Cabinet.\nBefore you upload a file to the NetSuite File Cabinet with File.save(), you must set its File Cabinet folder with the folder property.\n",
            "Type:\nnumber | string\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.folder\n"
        ]
    },
    "(N/file) File.id": {
        "prefix": "File.id",
        "body": [
            "${1:File}.id{",
            "\tREAD_ONLY_PROPERTY: ${2:}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.id\n",
            "Property Description:\nThe internal ID of the file within the NetSuite File Cabinet. This value is automatically generated by NetSuite.\nThis property is read-only.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.id\n"
        ]
    },
    "(N/file) File.isInactive": {
        "prefix": "File.isInactive",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.isInactive for more information.",
        "description": [
            "N/file Module",
            "File.isInactive\n",
            "Property Description:\nThe inactive status of a file. If set to true, the file is inactive.\nThe default value is false.\nWhen a file is inactive, it does not display in the UI unless you select Show Inactives on the File Cabinet page.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.isInactive\n"
        ]
    },
    "(N/file) File.isOnline": {
        "prefix": "File.isOnline",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.isOnline for more information.",
        "description": [
            "N/file Module",
            "File.isOnline\n",
            "Property Description:\nThe Available without Login status of a file. If set to true, users can download the file outside of a current NetSuite login session.\nThe default value is false.\nThis property holds the value of the Available without Login setting found on the file record. It does not reflect the value of the Available Without Login setting found on the Suitelet script deployment record.\nThe Available without Login setting is primarily used for SuiteCommerce websites. When this setting is enabled, websites can access media files in the NetSuite File Cabinet without a current NetSuite login session.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.isOnline\n"
        ]
    },
    "(N/file) File.isText": {
        "prefix": "File.isText",
        "body": [
            "${1:File}.isText{",
            "\tREAD_ONLY_PROPERTY: ${2:}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.isText\n",
            "Property Description:\nIndicates whether a file type is text-based.\nThis property is read-only.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.isText\n"
        ]
    },
    "(N/file) File.name": {
        "prefix": "File.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=File.name for more information.",
        "description": [
            "N/file Module",
            "File.name\n",
            "Property Description:\nThe name of a file.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.name\n"
        ]
    },
    "(N/file) File.path": {
        "prefix": "File.path",
        "body": [
            "${1:File}.path{",
            "\tREAD_ONLY_PROPERTY: ${2:}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.path\n",
            "Property Description:\nThe relative path to a file in the NetSuite File Cabinet.\nIf the folder is not set with the file.create(options) method, this property holds the file name until the File.folder property is defined.\nThis property is read-only.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.path\n"
        ]
    },
    "(N/file) File.size": {
        "prefix": "File.size",
        "body": [
            "${1:File}.size{",
            "\tREAD_ONLY_PROPERTY: ${2:}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.size\n",
            "Property Description:\nThe size of a file in bytes.\nThis property is read-only.\nYou can use this value to determine if the file is within size limits for File.getContents(). Size will reflect any lines you have streamed into a file. For example, the original file size plus lines appended.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.size\n"
        ]
    },
    "(N/file) File.url": {
        "prefix": "File.url",
        "body": [
            "${1:File}.url{",
            "\tREAD_ONLY_PROPERTY: ${2:}",
            "})"
        ],
        "description": [
            "N/file Module",
            "File.url\n",
            "Property Description:\nThe URL of a file.\nThis property is read-only.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=File.url\n"
        ]
    },
    "(N/file) file.create(options)": {
        "prefix": "file.create(options)",
        "body": [
            "${1:file}.create({",
            "\tname: ${2:string*},",
            "\tfileType: ${3:enum*},",
            "\tcontents: ${4:string},",
            "\tdescription: ${5:string},",
            "\tfolder: ${6:number},",
            "\tencoding: ${7:string},",
            "\tisInactive: ${8:boolean},",
            "\tisOnline: ${9:boolean}",
            "})"
        ],
        "description": [
            "N/file Module",
            "file.create()\n",
            "Method Description:\nMethod used to create a new file in the NetSuite File Cabinet.\nContent held in memory is limited to 10MB.\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=file.create(options)\n"
        ]
    },
    "(N/file) file.delete(options)": {
        "prefix": "file.delete(options)",
        "body": [
            "${1:file}.delete({",
            "\tid: ${2:number | string*}",
            "})"
        ],
        "description": [
            "N/file Module",
            "file.delete()\n",
            "Method Description:\nMethod used to delete an existing file from the NetSuite File Cabinet.\n",
            "Returns:\nThe internal ID of the deleted file\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=file.delete(options)\n"
        ]
    },
    "(N/file) file.load(options)": {
        "prefix": "file.load(options)",
        "body": [
            "${1:file}.load({",
            "\tid: ${2:number | string*}",
            "})"
        ],
        "description": [
            "N/file Module",
            "file.load()\n",
            "Method Description:\nLoads an existing file from the NetSuite File Cabinet.\nThe file size limit for this method is 2GB.\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=file.load(options)\n"
        ]
    },
    "(N/file) file.Encoding": {
        "prefix": "file.Encoding",
        "body": "file.Encoding.${1|UTF_8,WINDOWS_1252,ISO_8859_1,GB18030,SHIFT_JIS,MAC_ROMAN,GB2312,BIG5|}",
        "description": [
            "N/file Module",
            "file.Encoding\n",
            "Enum Description:\nEnumeration that holds the string values for supported character encoding.\nThis enum is used to set the value of the File.encoding property.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=file.Encoding\n"
        ]
    },
    "(N/file) file.Type": {
        "prefix": "file.Type",
        "body": "file.Type.${1|APPCACHE,AUTOCAD,BMPIMAGE,CERTIFICATE,CONFIG,CSV,EXCEL,FLASH,FREEMARKER,GIFIMAGE,GZIP,HTMLDOC,ICON,JAVASCRIPT,JPGIMAGE,JSON,MESSAGERFC,MP3,MPEGMOVIE,MSPROJECT,PDF,PJPGIMAGE,PLAINTEXT,PNGIMAGE,POSTSCRIPT,POWERPOINT,QUICKTIME,RTF,SCSS,SMS,STYLESHEET,SVG,TAR,TIFFIMAGE,VISIO,WEBAPPPAGE,WEBAPPSCRIPT,WORD,XMLDOC,XSD,ZIP|}",
        "description": [
            "N/file Module",
            "file.Type\n",
            "Enum Description:\nEnumeration that holds the string values for supported file types. This enum is used to set the value of the File.fileType property.\nNote that the File.fileType property is read-only. It’s value must be set with file.create(options).\nSee file Module Code Sample for an example.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=file.Type\n"
        ]
    },
    "(N/file) file.Reader": {
        "prefix": "file.Reader",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=file.Reader for more information.",
        "description": [
            "N/file Module",
            "file.Reader\n",
            "Object Description:\nUse for special read operations. Reads from a file until a specified delimiter is reached.\nReads an arbitrary number of characters from a file.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/file Module\n",
            "Methods and Properties:\nReader Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=file.Reader\n"
        ]
    },
    "(N/file) Reader.readUntil(options)": {
        "prefix": "Reader.readUntil(options)",
        "body": [
            "${1:Reader}.readUntil({",
            "\ttag: ${2:string*}",
            "})"
        ],
        "description": [
            "N/file Module",
            "Reader.readUntil()\n",
            "Method Description:\nReturns string from current position to the next occurrence of options.tag.\nReturns the rest of the string if tag is not found.\nReturns null if reading is already finished.\nAll types of characters are supported. If there's a character that does not exist untl the end of the file, the rest of the file is returned.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Reader.readUntil(options)\n"
        ]
    },
    "(N/file) Reader.readChars(options)": {
        "prefix": "Reader.readChars(options)",
        "body": [
            "${1:Reader}.readChars({",
            "\tnumber: ${2:number*}",
            "})"
        ],
        "description": [
            "N/file Module",
            "Reader.readChars()\n",
            "Method Description:\nReturns the next options.number characters from the current position.\nReturns less than the number if there is not enough characters to read in the file.\nReturns null if reading is already finished.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/file Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Reader.readChars(options)\n"
        ]
    },
    "(N/format) format.format(options)": {
        "prefix": "format.format(options)",
        "body": [
            "${1:format}.format({",
            "\tvalue: ${2:Date | string | number*},",
            "\ttype: ${3:string*}",
            "})"
        ],
        "description": [
            "N/format Module",
            "format.format()\n",
            "Method Description:\nFormats a value from the raw value to its appropriate preference format.\nThis method is overloaded when you format a datetime or datetimetz value.\n",
            "Returns:\nIf a datetime or datetimetz value is specified, the string in date format is returned in the user’s local app time zone.\nIf an invalid value is given, the original value passed to options.value is returned.\nFor client side scripts, the string returned is based on the user’s system time. For server-side scripts, the string returned is based on the system time of the server your NetSuite system is running on.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types\n",
            "Governance:\nNone\n",
            "Module:\nN/format Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.format(options)\n"
        ]
    },
    "(N/format) format.parse(options)": {
        "prefix": "format.parse(options)",
        "body": [
            "${1:format}.parse({",
            "\tvalue: ${2:string*},",
            "\ttype: ${3:string*}",
            "})"
        ],
        "description": [
            "N/format Module",
            "format.parse()\n",
            "Method Description:\nParses a value from the appropriate preference format to its raw value. The appropriate preference format is the one selected in the Date Format field at Home > Set Preferences.\nFor a datetime or datetimetz value, use this method to convert a Date Object into a string based on the specified timezone.\nThis method is overloaded when you format a datetime or datetimetz value.\n",
            "Returns:\nDatetime or datetimetz values are returned as a Date Object.\nIf the value given is not valid or parsable, the original value passed to options.value is returned.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types\n",
            "Governance:\nNone\n",
            "Module:\nN/format Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.parse(options)\n"
        ]
    },
    "(N/format) format.Type": {
        "prefix": "format.Type",
        "body": "format.Type.${1|ADDRESS,CCEXPDATE,CCNUMBER,CCVALIDFROM,CHECKBOX,COLOR,CURRENCY,CURRENCY2,DATE,DATETIME,DATETIMETZ,DOCUMENT,DYNAMICPRECISION,EMAIL,EMAILS,FLOAT,FULLPHONE,FUNCTION,FURIGANA,IDENTIFIER,IDENTIFIERANYCASE,INTEGER,MMYYDATE,NONNEGCURRENCY,NONNEGFLOAT,PACKAGE,PERCENT,PHONE,POSCURRENCY,POSFLOAT,POSINTEGER,QUOTEDFUNCTION,RADIO,RATE,RATEHIGHPRECISION,SELECT,TEXT,TEXTAREA,TIME,TIMEOFDAY,TIMETRACK,URL|}",
        "description": [
            "N/format Module",
            "format.Type\n",
            "Enum Description:\nEnumeration that holds the string values for the supported field types. This enum is used to set the value of the options.type parameter when calling format.format(options) or format.parse(options).\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types\n",
            "Module:\nN/format Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.Type\n"
        ]
    },
    "(N/format) format.Timezone": {
        "prefix": "format.Timezone",
        "body": [
            "${1:format}.Timezone{",
            "\t1: ${2:ETC_GMT_PLUS_12: 'Etc/GMT+12'},",
            "\t2: ${3:PACIFIC_SAMOA: 'Pacific/Samoa'},",
            "\t3: ${4:PACIFIC_HONOLULU: 'Pacific/Honolulu'},",
            "\t4: ${5:AMERICA_ANCHORAGE: 'America/Anchorage'},",
            "\t5: ${6:AMERICA_LOS_ANGELES: 'America/Los_Angeles'},",
            "\t6: ${7:AMERICA_TIJUANA: 'America/Tijuana'},",
            "\t7: ${8:AMERICA_DENVER: 'America/Denver'},",
            "\t8: ${9:AMERICA_PHOENIX: 'America/Phoenix'},",
            "\t9: ${10:AMERICA_CHIHUAHUA: 'America/Chihuahua'},",
            "\t10: ${11:AMERICA_CHICAGO: 'America/Chicago'},",
            "\t11: ${12:AMERICA_REGINA: 'America/Regina'},",
            "\t12: ${13:AMERICA_GUATEMALA: 'America/Guatemala'},",
            "\t13: ${14:AMERICA_MEXICO_CITY: 'America/Mexico_City’},",
            "\t14: ${15:AMERICA_NEW_YORK: 'America/New_York'},",
            "\t15: ${16:US_EAST_INDIANA: 'US/East-Indiana'},",
            "\t16: ${17:AMERICA_BOGOTA: 'America/Bogota'},",
            "\t17: ${18:AMERICA_CARACAS: 'America/Caracas'},",
            "\t18: ${19:AMERICA_HALIFAX: 'America/Halifax'},",
            "\t19: ${20:AMERICA_LA_PAZ: 'America/La_Paz'},",
            "\t20: ${21:AMERICA_MANAUS: 'America/Manaus'},",
            "\t21: ${22:AMERICA_SANTIAGO: 'America/Santiago'},",
            "\t22: ${23:AMERICA_ST_JOHNS: 'America/St_Johns'},",
            "\t23: ${24:AMERICA_SAO_PAULO: 'America/Sao_Paulo'},",
            "\t24: ${25:AMERICA_BUENOS_AIRES: 'America/Buenos_Aires'},",
            "\t25: ${26:ETC_GMT_PLUS_3: 'Etc/GMT+3'},",
            "\t26: ${27:AMERICA_GODTHAB: 'America/Godthab'},",
            "\t27: ${28:AMERICA_MONTEVIDEO: 'America/Montevideo'},",
            "\t28: ${29:AMERICA_NORONHA: 'America/Noronha'},",
            "\t29: ${30:ETC_GMT_PLUS_1: 'Etc/GMT+1'},",
            "\t30: ${31:ATLANTIC_AZORES: 'Atlantic/Azores'},",
            "\t31: ${32:EUROPE_LONDON: 'Europe/London', GMT: 'GMT'},",
            "\t32: ${33:GMT: 'GMT'},",
            "\t33: ${34:ATLANTIC_REYKJAVIK: 'Atlantic/Reykjavik'},",
            "\t34: ${35:EUROPE_WARSAW: 'Europe/Warsaw'},",
            "\t35: ${36:EUROPE_PARIS: 'Europe/Paris'},",
            "\t36: ${37:ETC_GMT_MINUS_1: 'Etc/GMT-1'},",
            "\t37: ${38:EUROPE_AMSTERDAM: 'Europe/Amsterdam'},",
            "\t38: ${39:EUROPE_BUDAPEST: 'Europe/Budapest'},",
            "\t39: ${40:AFRICA_CAIRO: 'Africa/Cairo'},",
            "\t40: ${41:EUROPE_ISTANBUL: 'Europe/Istanbul'},",
            "\t41: ${42:ASIA_JERUSALEM: 'Asia/Jerusalem'},",
            "\t42: ${43:ASIA_AMMAN: 'Asia/Amman'},",
            "\t43: ${44:ASIA_BEIRUT: 'Asia/Beirut'},",
            "\t44: ${45:AFRICA_JOHANNESBURG: 'Africa/Johannesburg'},",
            "\t45: ${46:EUROPE_KIEV: 'Europe/Kiev'},",
            "\t46: ${47:EUROPE_MINSK: 'Europe/Minsk'},",
            "\t47: ${48:AFRICA_WINDHOEK: 'Africa/Windhoek'},",
            "\t48: ${49:ASIA_RIYADH: 'Asia/Riyadh'},",
            "\t49: ${50:EUROPE_MOSCOW: 'Europe/Moscow'},",
            "\t50: ${51:ASIA_BAGHDAD: 'Asia/Baghdad'},",
            "\t51: ${52:AFRICA_NAIROBI: 'Africa/Nairobi'},",
            "\t52: ${53:ASIA_TEHRAN: 'Asia/Tehran'},",
            "\t53: ${54:ASIA_MUSCAT: 'Asia/Muscat'},",
            "\t54: ${55:ASIA_BAKU: 'Asia/Baku'},",
            "\t55: ${56:ASIA_YEREVAN: 'Asia/Yerevan'},",
            "\t56: ${57:ETC_GMT_MINUS_3: 'Etc/GMT-3'},",
            "\t57: ${58:ASIA_KABUL: 'Asia/Kabul'},",
            "\t58: ${59:ASIA_KARACHI: 'Asia/Karachi'},",
            "\t59: ${60:ASIA_YEKATERINBURG: 'Asia/Yekaterinburg'},",
            "\t60: ${61:ASIA_TASHKENT: 'Asia/Tashkent'},",
            "\t61: ${62:ASIA_CALCUTTA: 'Asia/Calcutta'},",
            "\t62: ${63:ASIA_KATMANDU: 'Asia/Katmandu'},",
            "\t63: ${64:ASIA_ALMATY: 'Asia/Almaty'},",
            "\t64: ${65:ASIA_DHAKA: 'Asia/Dhaka'},",
            "\t65: ${66:ASIA_RANGOON: 'Asia/Rangoon'},",
            "\t66: ${67:ASIA_BANGKOK: 'Asia/Bangkok'},",
            "\t67: ${68:ASIA_KRASNOYARSK: 'Asia/Krasnoyarsk'},",
            "\t68: ${69:ASIA_HONG_KONG: 'Asia/Hong_Kong'},",
            "\t69: ${70:ASIA_KUALA_LUMPUR: 'Asia/Kuala_Lumpur'},",
            "\t70: ${71:ASIA_TAIPEI: 'Asia/Taipei'},",
            "\t71: ${72:AUSTRALIA_PERTH: 'Australia/Perth'},",
            "\t72: ${73:ASIA_IRKUTSK: 'Asia/Irkutsk'},",
            "\t73: ${74:ASIA_MANILA: 'Asia/Manila'},",
            "\t74: ${75:ASIA_SEOUL: 'Asia/Seoul'},",
            "\t75: ${76:ASIA_TOKYO: 'Asia/Tokyo'},",
            "\t76: ${77:ASIA_YAKUTSK: 'Asia/Yakutsk'},",
            "\t77: ${78:AUSTRALIA_DARWIN: 'Australia/Darwin'},",
            "\t78: ${79:AUSTRALIA_ADELAIDE: 'Australia/Adelaide'},",
            "\t79: ${80:AUSTRALIA_SYDNEY: 'Australia/Sydney'},",
            "\t80: ${81:AUSTRALIA_BRISBANE: 'Australia/Brisbane'},",
            "\t81: ${82:AUSTRALIA_HOBART: 'Australia/Hobart'},",
            "\t82: ${83:PACIFIC_GUAM: 'Pacific/Guam'},",
            "\t83: ${84:ASIA_VLADIVOSTOK: 'Asia/Vladivostok'},",
            "\t84: ${85:ASIA_MAGADAN: 'Asia/Magadan'},",
            "\t85: ${86:PACIFIC_KWAJALEIN: 'Pacific/Kwajalein'},",
            "\t86: ${87:PACIFIC_AUCKLAND: 'Pacific/Auckland'},",
            "\t87: ${88:PACIFIC_TONGATAPU: 'Pacific/Tongatapu'}",
            "})"
        ],
        "description": [
            "N/format Module",
            "format.Timezone\n",
            "Enum Description:\nEnumeration that holds the string values for supported time zone formats. This enum is used to set the value of the options.timezone parameter when calling format.format(options) or format.parse(options).\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types\n",
            "Module:\nN/format Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.Timezone\n"
        ]
    },
    "(N/format/i18n) format.CurrencyFormatter": {
        "prefix": "format.CurrencyFormatter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=format.CurrencyFormatter for more information.",
        "description": [
            "N/format/i18n Module",
            "format.CurrencyFormatter\n",
            "Object Description:\nThe object that formats the number to currency string.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.CurrencyFormatter\n"
        ]
    },
    "(N/format/i18n) CurrencyFormatter.currency": {
        "prefix": "CurrencyFormatter.currency",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CurrencyFormatter.currency for more information.",
        "description": [
            "N/format/i18n Module",
            "CurrencyFormatter.currency\n",
            "Property Description:\nDescribes the currency code.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.CurrencyFormatter\n",
            "Sibling Object Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrencyFormatter.currency\n"
        ]
    },
    "(N/format/i18n) CurrencyFormatter.symbol": {
        "prefix": "CurrencyFormatter.symbol",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CurrencyFormatter.symbol for more information.",
        "description": [
            "N/format/i18n Module",
            "CurrencyFormatter.symbol\n",
            "Property Description:\nDescribes the symbol of the currency code.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.CurrencyFormatter\n",
            "Sibling Object Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrencyFormatter.symbol\n"
        ]
    },
    "(N/format/i18n) CurrencyFormatter.numberFormatter": {
        "prefix": "CurrencyFormatter.numberFormatter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CurrencyFormatter.numberFormatter for more information.",
        "description": [
            "N/format/i18n Module",
            "CurrencyFormatter.numberFormatter\n",
            "Property Description:\nContains the format.NumberFormatter object derived from format.CurrencyFormatter with the same number formatting parameters without currency symbol.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.CurrencyFormatter\n",
            "Sibling Object Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrencyFormatter.numberFormatter\n"
        ]
    },
    "(N/format/i18n) CurrencyFormatter.format(options)": {
        "prefix": "CurrencyFormatter.format(options)",
        "body": [
            "${1:CurrencyFormatter}.format({",
            "\tnumber: ${2:number*}",
            "})"
        ],
        "description": [
            "N/format/i18n Module",
            "CurrencyFormatter.format()\n",
            "Method Description:\nFormats the number to the currency string.\n",
            "Returns:\nString\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CurrencyFormatter.format(options)\n"
        ]
    },
    "(N/format/i18n) format.NumberFormatter": {
        "prefix": "format.NumberFormatter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=format.NumberFormatter for more information.",
        "description": [
            "N/format/i18n Module",
            "format.NumberFormatter\n",
            "Object Description:\nThe object that formats number to string.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.NumberFormatter\n"
        ]
    },
    "(N/format/i18n) NumberFormatter.groupSeparator": {
        "prefix": "NumberFormatter.groupSeparator",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.groupSeparator for more information.",
        "description": [
            "N/format/i18n Module",
            "NumberFormatter.groupSeparator\n",
            "Property Description:\nIndicates the group separator.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.CurrencyFormatter\n",
            "Sibling Object Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.groupSeparator\n"
        ]
    },
    "(N/format/i18n) NumberFormatter.decimalSeparator": {
        "prefix": "NumberFormatter.decimalSeparator",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.decimalSeparator for more information.",
        "description": [
            "N/format/i18n Module",
            "NumberFormatter.decimalSeparator\n",
            "Property Description:\nIndicates the decimal separator.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.CurrencyFormatter\n",
            "Sibling Object Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.decimalSeparator\n"
        ]
    },
    "(N/format/i18n) NumberFormatter.precision": {
        "prefix": "NumberFormatter.precision",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.precision for more information.",
        "description": [
            "N/format/i18n Module",
            "NumberFormatter.precision\n",
            "Property Description:\nIndicates the precision.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.CurrencyFormatter\n",
            "Sibling Object Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.precision\n"
        ]
    },
    "(N/format/i18n) NumberFormatter.negativeNumberFormat": {
        "prefix": "NumberFormatter.negativeNumberFormat",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.negativeNumberFormat for more information.",
        "description": [
            "N/format/i18n Module",
            "NumberFormatter.negativeNumberFormat\n",
            "Property Description:\nIndicates the negative number format.\n",
            "Type:\nenum\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.CurrencyFormatter\n",
            "Sibling Object Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.negativeNumberFormat\n"
        ]
    },
    "(N/format/i18n) NumberFormatter.format(options)": {
        "prefix": "NumberFormatter.format(options)",
        "body": [
            "${1:NumberFormatter}.format({",
            "\tnumber: ${2:number*}",
            "})"
        ],
        "description": [
            "N/format/i18n Module",
            "NumberFormatter.format()\n",
            "Method Description:\nFormat number to the number string.\n",
            "Returns:\nString\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=NumberFormatter.format(options)\n"
        ]
    },
    "(N/format/i18n) format.PhoneNumberFormatter": {
        "prefix": "format.PhoneNumberFormatter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=format.PhoneNumberFormatter for more information.",
        "description": [
            "N/format/i18n Module",
            "format.PhoneNumberFormatter\n",
            "Object Description:\nThe object that formats the phone number to string.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nPhone Number Formatter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.PhoneNumberFormatter\n"
        ]
    },
    "(N/format/i18n) format.PhoneNumberParser": {
        "prefix": "format.PhoneNumberParser",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=format.PhoneNumberParser for more information.",
        "description": [
            "N/format/i18n Module",
            "format.PhoneNumberParser\n",
            "Object Description:\nThe object that parses the string with the phone number to an object.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nPhone Number Parser Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.PhoneNumberParser\n"
        ]
    },
    "(N/format/i18n) PhoneNumberFormatter.format(options)": {
        "prefix": "PhoneNumberFormatter.format(options)",
        "body": [
            "${1:PhoneNumberFormatter}.format({",
            "\tnumber: ${2:Object*}",
            "})"
        ],
        "description": [
            "N/format/i18n Module",
            "PhoneNumberFormatter.format()\n",
            "Method Description:\nFormats phone number object to string.\n",
            "Returns:\nString\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.PhoneNumberFormatter\n",
            "Methods and Properties:\nPhone Number Formatter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PhoneNumberFormatter.format(options)\n"
        ]
    },
    "(N/format/i18n) PhoneNumberParser.parse(options)": {
        "prefix": "PhoneNumberParser.parse(options)",
        "body": [
            "${1:PhoneNumberParser}.parse({",
            "\tnumber: ${2:string*}",
            "})"
        ],
        "description": [
            "N/format/i18n Module",
            "PhoneNumberParser.parse()\n",
            "Method Description:\nParses the string containing the phone number and returns the phone number object.\nIf the input string contains the country code, it parses the given phone number. If the input string does not contain the country code, the country given to PhoneNumberParser as constructor parameter is used.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/format/i18n Module\n",
            "Parent Object:\nformat.PhoneNumberParser\n",
            "Methods and Properties:\nPhone Number Parser Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PhoneNumberParser.parse(options)\n"
        ]
    },
    "(N/format/i18n) format.PhoneNumberFormatType": {
        "prefix": "format.PhoneNumberFormatType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=format.PhoneNumberFormatType for more information.",
        "description": [
            "N/format/i18n Module",
            "format.PhoneNumberFormatType\n",
            "Enum Description:\nHolds the values for the phone number format.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Type:\nenum\n",
            "Module:\nN/format/i18n Module\n",
            "Sibling Module Members:\nPhone Number Formatter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.PhoneNumberFormatType\n"
        ]
    },
    "(N/format/i18n) format.Country": {
        "prefix": "format.Country",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=format.Country for more information.",
        "description": [
            "N/format/i18n Module",
            "format.Country\n",
            "Enum Description:\nHolds the values for the country.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Type:\nenum\n",
            "Module:\nN/format/i18n Module\n",
            "Sibling Module Members:\nPhone Number Formatter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.Country\n"
        ]
    },
    "(N/format/i18n) format.spellOut(options)": {
        "prefix": "format.spellOut(options)",
        "body": [
            "${1:format}.spellOut({",
            "\tnumber: ${2:number*},",
            "\tlocale: ${3:string*}",
            "})"
        ],
        "description": [
            "N/format/i18n Module",
            "format.spellOut()\n",
            "Method Description:\nSpells out positive and negative number as a string in a specific language\nFor more information, see Codes for the Representation of Names of Languages.\n",
            "Returns:\nString\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nN/format/i18n Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.spellOut(options)\n"
        ]
    },
    "(N/format/i18n) format.getCurrencyFormatter(options)": {
        "prefix": "format.getCurrencyFormatter(options)",
        "body": [
            "${1:format}.getCurrencyFormatter({",
            "\tcurrency: ${2:string*}",
            "})"
        ],
        "description": [
            "N/format/i18n Module",
            "format.getCurrencyFormatter()\n",
            "Method Description:\nCreate format.CurrencyFormatter object to format numbers into currency strings.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.getCurrencyFormatter(options)\n"
        ]
    },
    "(N/format/i18n) format.getNumberFormatter(options)": {
        "prefix": "format.getNumberFormatter(options)",
        "body": [
            "${1:format}.getNumberFormatter({",
            "\tgroupSeparator: ${2:string},",
            "\tdecimalSeparator: ${3:string},",
            "\tprecision: ${4:number},",
            "\tnegativeNumberFormat: ${5:enum}",
            "})"
        ],
        "description": [
            "N/format/i18n Module",
            "format.getNumberFormatter()\n",
            "Method Description:\nCreate format.NumberFormatter object to format numbers into strings.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/format/i18n Module\n",
            "Methods and Properties:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.getNumberFormatter(options)\n"
        ]
    },
    "(N/format/i18n) format.NegativeNumberFormat": {
        "prefix": "format.NegativeNumberFormat",
        "body": "format.NegativeNumberFormat.${1|BRACKETS,MINUS|}",
        "description": [
            "N/format/i18n Module",
            "format.NegativeNumberFormat\n",
            "Enum Description:\nHolds the values for the negative number format.\n",
            "Type:\nenum\n",
            "Module:\nN/format/i18n Module\n",
            "Sibling Module Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.NegativeNumberFormat\n"
        ]
    },
    "(N/format/i18n) format.Currency": {
        "prefix": "format.Currency",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=format.Currency for more information.",
        "description": [
            "N/format/i18n Module",
            "format.Currency\n",
            "Enum Description:\nHolds the values for the currency code.\n",
            "Type:\nenum\n",
            "Module:\nN/format/i18n Module\n",
            "Sibling Module Members:\nN/format/i18n Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=format.Currency\n"
        ]
    },
    "(N/http) http.ClientResponse": {
        "prefix": "http.ClientResponse",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.ClientResponse for more information.",
        "description": [
            "N/http Module",
            "http.ClientResponse\n",
            "Object Description:\nThe response from the server to an HTTP request (e.g., http.get(options)) from a client (i.e., browser).\nThis is the return type for http.delete(options), http.get(options), http.post(options), http.put(options), http.request(options), and corresponding promise methods) when those methods are called from a client (i.e., browser)\nThis object is read-only.\nFor a complete list of this object’s properties, see ClientResponse Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.ClientResponse\n"
        ]
    },
    "(N/http) ClientResponse.body": {
        "prefix": "ClientResponse.body",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.body for more information.",
        "description": [
            "N/http Module",
            "ClientResponse.body\n",
            "Property Description:\nThe client response body.\n.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ClientResponse\n",
            "Sibling Object Members:\nClientResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.body\n"
        ]
    },
    "(N/http) ClientResponse.code": {
        "prefix": "ClientResponse.code",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.code for more information.",
        "description": [
            "N/http Module",
            "ClientResponse.code\n",
            "Property Description:\nThe client HTTP response or status code.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ClientResponse\n",
            "Sibling Object Members:\nClientResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.code\n"
        ]
    },
    "(N/http) ClientResponse.headers": {
        "prefix": "ClientResponse.headers",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.headers for more information.",
        "description": [
            "N/http Module",
            "ClientResponse.headers\n",
            "Property Description:\nThe response header or headers.\nFor more information, see HTTP Header Information.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ClientResponse\n",
            "Sibling Object Members:\nClientResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.headers\n"
        ]
    },
    "(N/http) http.ServerRequest": {
        "prefix": "http.ServerRequest",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.ServerRequest for more information.",
        "description": [
            "N/http Module",
            "http.ServerRequest\n",
            "Object Description:\nThe HTTP request information set to an HTTP server. For example, a request received by a Suitelet or RESTlet.\nThis object is read-only.\nFor a complete list of this object’s methods and properties, see ServerRequest Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.ServerRequest\n"
        ]
    },
    "(N/http) ServerRequest.getLineCount(options)": {
        "prefix": "ServerRequest.getLineCount(options)",
        "body": [
            "${1:ServerRequest}.getLineCount({",
            "\tgroup: ${2:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerRequest.getLineCount()\n",
            "Method Description:\nReturns the number of lines in a sublist.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.getLineCount(options)\n"
        ]
    },
    "(N/http) ServerRequest.getSublistValue(options)": {
        "prefix": "ServerRequest.getSublistValue(options)",
        "body": [
            "${1:ServerRequest}.getSublistValue({",
            "\tgroup: ${2:string*},",
            "\tline: ${3:string*},",
            "\tname: ${4:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerRequest.getSublistValue()\n",
            "Method Description:\nReturns the value of a sublist line item.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.getSublistValue(options)\n"
        ]
    },
    "(N/http) ServerRequest.body": {
        "prefix": "ServerRequest.body",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.body for more information.",
        "description": [
            "N/http Module",
            "ServerRequest.body\n",
            "Property Description:\nThe server request body.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.body\n"
        ]
    },
    "(N/http) ServerRequest.files": {
        "prefix": "ServerRequest.files",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.files for more information.",
        "description": [
            "N/http Module",
            "ServerRequest.files\n",
            "Property Description:\nThe server request files.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.files\n"
        ]
    },
    "(N/http) ServerRequest.headers": {
        "prefix": "ServerRequest.headers",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.headers for more information.",
        "description": [
            "N/http Module",
            "ServerRequest.headers\n",
            "Property Description:\nThe header information included in the http call. This object represents a series of name:value pairs. Each pair represents a request header name and its value.\nTypically, this object encapsulates two iterations of each header name: one in lower case and another in title case. This behavior is designed so that you can use either lower case or title case when you reference a header. However, the existence of title-case iterations of header names is not guaranteed. For best results, refer to header names using all lower-case letters (and hyphens, when applicable).\nThe request headers and their values are subject to change. If you use these headers in your scripts, you are responsible for testing them to make sure that they contain the information you need. For example, when making an HTTP call to a Suitelet, some headers might be filtered out. Filtering can occur if the headers affect how NetSuite processes the request internally. These filtered headers are not available to the Suitelet, so you should test to see whether a header was filtered out. If so, use a different header instead.\nFor more information, see HTTP Header Information.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.headers\n"
        ]
    },
    "(N/http) ServerRequest.clientIpAddress": {
        "prefix": "ServerRequest.clientIpAddress",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.clientIpAddress for more information.",
        "description": [
            "N/http Module",
            "ServerRequest.clientIpAddress\n",
            "Property Description:\nThe remote client IP address.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.clientIpAddress\n"
        ]
    },
    "(N/http) ServerRequest.method": {
        "prefix": "ServerRequest.method",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.method for more information.",
        "description": [
            "N/http Module",
            "ServerRequest.method\n",
            "Property Description:\nThe server request HTTP method.\n",
            "Type:\nhttp.Method (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.method\n"
        ]
    },
    "(N/http) ServerRequest.parameters": {
        "prefix": "ServerRequest.parameters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.parameters for more information.",
        "description": [
            "N/http Module",
            "ServerRequest.parameters\n",
            "Property Description:\nThe server request parameters, as name:value pairs. Note that if the server request is a Get request, parameters are sent as part of the URL. If the server request is a Post request, parameters are sent within the request body.\nParameters cannot be arrays. Use JSON.stringify/JSON.parse instead to handle arrays.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.parameters\n"
        ]
    },
    "(N/http) ServerRequest.url": {
        "prefix": "ServerRequest.url",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.url for more information.",
        "description": [
            "N/http Module",
            "ServerRequest.url\n",
            "Property Description:\nThe server request URL.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.url\n"
        ]
    },
    "(N/http) http.ServerResponse": {
        "prefix": "http.ServerResponse",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.ServerResponse for more information.",
        "description": [
            "N/http Module",
            "http.ServerResponse\n",
            "Object Description:\nThe response from an HTTP server (e.g., Suitelet or RESTlet) to an HTTP request from a server, such as a user event script.\nFor a complete list of this object’s methods and properties, see ServerResponse Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.ServerResponse\n"
        ]
    },
    "(N/http) ServerResponse.addHeader(options)": {
        "prefix": "ServerResponse.addHeader(options)",
        "body": [
            "${1:ServerResponse}.addHeader({",
            "\tname: ${2:string*},",
            "\tvalue: ${3:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.addHeader()\n",
            "Method Description:\nAdds a header to the response.\nIf the same header has already been set, this method adds another line for that header. For example:\nFor more information, see HTTP Header Information.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.addHeader(options)\n"
        ]
    },
    "(N/http) ServerResponse.getHeader(options)": {
        "prefix": "ServerResponse.getHeader(options)",
        "body": [
            "${1:ServerResponse}.getHeader({",
            "\tname: ${2:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.getHeader()\n",
            "Method Description:\nReturns the value or values of a response header. If multiple values are assigned to the header name, the values are returned as an Array.\nFor more information, see HTTP Header Information.\n",
            "Returns:\nstring | string[]\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.getHeader(options)\n"
        ]
    },
    "(N/http) ServerResponse.renderPdf(options)": {
        "prefix": "ServerResponse.renderPdf(options)",
        "body": [
            "${1:ServerResponse}.renderPdf({",
            "\txmlString: ${2:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.renderPdf()\n",
            "Method Description:\nGenerates and renders a PDF directly to the response.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.renderPdf(options)\n"
        ]
    },
    "(N/http) ServerResponse.sendRedirect(options)": {
        "prefix": "ServerResponse.sendRedirect(options)",
        "body": [
            "${1:ServerResponse}.sendRedirect({",
            "\tidentifier: ${2:number | string*},",
            "\ttype: ${3:http.RedirectType*},",
            "\teditMode: ${4:boolean},",
            "\tid: ${5:number | string},",
            "\tparameters: ${6:Object}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.sendRedirect()\n",
            "Method Description:\nSets the redirect URL by resolving to a NetSuite resource.\nFor example, you could use this method to redirect to a new sales order page for a particular entity.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.sendRedirect(options)\n"
        ]
    },
    "(N/http) ServerResponse.setCdnCacheable(options)": {
        "prefix": "ServerResponse.setCdnCacheable(options)",
        "body": [
            "${1:ServerResponse}.setCdnCacheable({",
            "\ttype: ${2:enum*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.setCdnCacheable()\n",
            "Method Description:\nSets CDN caching for a period of time.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.setCdnCacheable(options)\n"
        ]
    },
    "(N/http) ServerResponse.setHeader(options)": {
        "prefix": "ServerResponse.setHeader(options)",
        "body": [
            "${1:ServerResponse}.setHeader({",
            "\tname: ${2:string*},",
            "\tvalue: ${3:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.setHeader()\n",
            "Method Description:\nSets the value of a response header.\nFor more information, see HTTP Header Information.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.setHeader(options)\n"
        ]
    },
    "(N/http) ServerResponse.write(options)": {
        "prefix": "ServerResponse.write(options)",
        "body": [
            "${1:ServerResponse}.write({",
            "\toutput: ${2:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.write()\n",
            "Method Description:\nWrites information (text, xml, html) to the response.\nThis method accepts only strings. To pass in a file, you can use ServerResponse.writeFile(options).\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.write(options)\n"
        ]
    },
    "(N/http) ServerResponse.writeFile(options)": {
        "prefix": "ServerResponse.writeFile(options)",
        "body": [
            "${1:ServerResponse}.writeFile({",
            "\tfile: ${2:file.File*},",
            "\tisInline: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.writeFile()\n",
            "Method Description:\nWrites a file to the response.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.writeFile(options)\n"
        ]
    },
    "(N/http) ServerResponse.writeLine(options)": {
        "prefix": "ServerResponse.writeLine(options)",
        "body": [
            "${1:ServerResponse}.writeLine({",
            "\toutput: ${2:string*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.writeLine()\n",
            "Method Description:\nWrites line information (text, xml, html) to the response.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.writeLine(options)\n"
        ]
    },
    "(N/http) ServerResponse.writePage(options)": {
        "prefix": "ServerResponse.writePage(options)",
        "body": [
            "${1:ServerResponse}.writePage({",
            "\tpageObject: ${2:serverWidget.Assistant | serverWidget.Form | serverWidget.List*}",
            "})"
        ],
        "description": [
            "N/http Module",
            "ServerResponse.writePage()\n",
            "Method Description:\nGenerates a page.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.writePage(options)\n"
        ]
    },
    "(N/http) ServerResponse.headers": {
        "prefix": "ServerResponse.headers",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.headers for more information.",
        "description": [
            "N/http Module",
            "ServerResponse.headers\n",
            "Property Description:\nThe server response headers.\nFor more information, see HTTP Header Information.\n",
            "Type:\nObject (read-only)\nIf multiple values are assigned to one header name, the values are returned as an array. For example:\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "Parent Object:\nhttp.ServerResponse\n",
            "Sibling Object Members:\nServerResponse Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.headers\n"
        ]
    },
    "(N/http) http.get(options)": {
        "prefix": "http.get(options)",
        "body": [
            "${1:http}.get({",
            "\turl: ${2:string*},",
            "\theaders: ${3:Object}",
            "})"
        ],
        "description": [
            "N/http Module",
            "http.get()\n",
            "Method Description:\nSends an HTTP GET request.\n",
            "Returns:\nhttp.ClientResponse or http.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.get(options)\n"
        ]
    },
    "(N/http) http.get.promise(options)": {
        "prefix": "http.get.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.get.promise(options) for more information.",
        "description": [
            "N/http Module",
            "http.get.promise()\n",
            "Method Description:\nSends an HTTP GET request asynchronously.\nThe parameters and errors thrown for this method are the same as those for http.get(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttp.get(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.get.promise(options)\n"
        ]
    },
    "(N/http) http.delete(options)": {
        "prefix": "http.delete(options)",
        "body": [
            "${1:http}.delete({",
            "\turl: ${2:string*},",
            "\theaders: ${3:Object}",
            "})"
        ],
        "description": [
            "N/http Module",
            "http.delete()\n",
            "Method Description:\nSends an HTTP DELETE request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nhttp.ClientResponse or http.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.delete(options)\n"
        ]
    },
    "(N/http) http.delete.promise(options)": {
        "prefix": "http.delete.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.delete.promise(options) for more information.",
        "description": [
            "N/http Module",
            "http.delete.promise()\n",
            "Method Description:\nSends an HTTP DELETE request asynchronously.\nThe parameters and errors thrown for this method are the same as those for http.delete(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttp.delete(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.delete.promise(options)\n"
        ]
    },
    "(N/http) http.post(options)": {
        "prefix": "http.post(options)",
        "body": [
            "${1:http}.post({",
            "\tbody: ${2:string | Object*},",
            "\turl: ${3:string*},",
            "\theaders: ${4:Object}",
            "})"
        ],
        "description": [
            "N/http Module",
            "http.post()\n",
            "Method Description:\nSends an HTTP POST request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nhttp.ClientResponse or http.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.post(options)\n"
        ]
    },
    "(N/http) http.post.promise(options)": {
        "prefix": "http.post.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.post.promise(options) for more information.",
        "description": [
            "N/http Module",
            "http.post.promise()\n",
            "Method Description:\nSends an HTTP POST request asynchronously.\nThe parameters and errors thrown for this method are the same as those for http.post(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttp.post(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.post.promise(options)\n"
        ]
    },
    "(N/http) http.put(options)": {
        "prefix": "http.put(options)",
        "body": [
            "${1:http}.put({",
            "\tbody: ${2:string | Object*},",
            "\turl: ${3:string*},",
            "\theaders: ${4:Object}",
            "})"
        ],
        "description": [
            "N/http Module",
            "http.put()\n",
            "Method Description:\nSends an HTTP PUT request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nhttp.ClientResponse or http.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.put(options)\n"
        ]
    },
    "(N/http) http.put.promise(options)": {
        "prefix": "http.put.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.put.promise(options) for more information.",
        "description": [
            "N/http Module",
            "http.put.promise()\n",
            "Method Description:\nSends an HTTP PUT request asynchronously.\nThe parameters and errors thrown for this method are the same as those for http.put(options). For additional information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttp.put(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.put.promise(options)\n"
        ]
    },
    "(N/http) http.request(options)": {
        "prefix": "http.request(options)",
        "body": [
            "${1:http}.request({",
            "\tmethod: ${2:enum*},",
            "\turl: ${3:string*},",
            "\tbody: ${4:string | Object},",
            "\theaders: ${5:Object}",
            "})"
        ],
        "description": [
            "N/http Module",
            "http.request()\n",
            "Method Description:\nSends an HTTP request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nhttp.ClientResponse or http.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.request(options)\n"
        ]
    },
    "(N/http) http.request.promise(options)": {
        "prefix": "http.request.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=http.request.promise(options) for more information.",
        "description": [
            "N/http Module",
            "http.request.promise()\n",
            "Method Description:\nSends an HTTP request asynchronously.\nThe parameters and errors thrown for this method are the same as those for http.request(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttp.request(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/http Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.request.promise(options)\n"
        ]
    },
    "(N/http) http.CacheDuration": {
        "prefix": "http.CacheDuration",
        "body": "http.CacheDuration.${1|LONG|}",
        "description": [
            "N/http Module",
            "http.CacheDuration\n",
            "Enum Description:\nHolds the string values for supported cache durations. This enum is used to set the value of the ServerResponse.setCdnCacheable(options) property.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.CacheDuration\n"
        ]
    },
    "(N/http) http.Method": {
        "prefix": "http.Method",
        "body": "http.Method.${1|DELETE,GET,HEAD,PUT,POST|}",
        "description": [
            "N/http Module",
            "http.Method\n",
            "Enum Description:\nHolds the string values for supported HTTP requests. This enum is used to set the value of http.request(options) and ServerRequest.method.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.Method\n"
        ]
    },
    "(N/http) http.RedirectType": {
        "prefix": "http.RedirectType",
        "body": "http.RedirectType.${1|MEDIA_ITEM,RECORD,RESTLET,SUITELET,TASK_LINK|}",
        "description": [
            "N/http Module",
            "http.RedirectType\n",
            "Enum Description:\nHolds the string values for supported NetSuite resources that you can redirect to. This enum is used to set the value of the type argument for ServerResponse.sendRedirect(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/http Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=http.RedirectType\n"
        ]
    },
    "(N/https) https.SecureString": {
        "prefix": "https.SecureString",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.SecureString for more information.",
        "description": [
            "N/https Module",
            "https.SecureString\n",
            "Object Description:\nEncapsulates data that may be sent to a third-party via an HTTPS call, such as a fragment of sensitive data.\nAn https.SecureString is returned by https.createSecureString(options).\nFor a complete list of this object’s methods, see SecureString Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.SecureString\n"
        ]
    },
    "(N/https) SecureString.appendSecureString(options)": {
        "prefix": "SecureString.appendSecureString(options)",
        "body": [
            "${1:SecureString}.appendSecureString({",
            "\tsecureString: ${2:https.SecureString*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "SecureString.appendSecureString()\n",
            "Method Description:\nAppends one https.SecureString to another https.SecureString.\n",
            "Returns:\nhttps.SecureString\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SecureString.appendSecureString(options)\n"
        ]
    },
    "(N/https) SecureString.appendString(options)": {
        "prefix": "SecureString.appendString(options)",
        "body": [
            "${1:SecureString}.appendString({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:https.Encoding*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "SecureString.appendString()\n",
            "Method Description:\nAppends a string to an https.SecureString.\n",
            "Returns:\nhttps.SecureString\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SecureString.appendString(options)\n"
        ]
    },
    "(N/https) SecureString.convertEncoding(options)": {
        "prefix": "SecureString.convertEncoding(options)",
        "body": [
            "${1:SecureString}.convertEncoding({",
            "\ttoEncoding: ${2:https.Encoding*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "SecureString.convertEncoding()\n",
            "Method Description:\nChanges the encoding of a https.SecureString.\n",
            "Returns:\nhttps.SecureString\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SecureString.convertEncoding(options)\n"
        ]
    },
    "(N/https) SecureString.hash(options)": {
        "prefix": "SecureString.hash(options)",
        "body": [
            "${1:SecureString}.hash({",
            "\talgorithm: ${2:https.HashAlg*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "SecureString.hash()\n",
            "Method Description:\nCreates a hash for a https.SecureString. The https.HashAlg enum is used to set the hash algorithm.\n",
            "Returns:\nhttps.SecureString\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SecureString.hash(options)\n"
        ]
    },
    "(N/https) SecureString.hmac(options)": {
        "prefix": "SecureString.hmac(options)",
        "body": [
            "${1:SecureString}.hmac({",
            "\talgorithm: ${2:https.HashAlg*},",
            "\tkey: ${3:crypto.SecretKey*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "SecureString.hmac()\n",
            "Method Description:\nCreates an hmac for a https.SecureString. The https.HashAlg enum is used to set the hash algorithm.\n",
            "Returns:\nhttps.SecureString\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SecureString.hmac(options)\n"
        ]
    },
    "(N/https) https.ClientResponse": {
        "prefix": "https.ClientResponse",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.ClientResponse for more information.",
        "description": [
            "N/https Module",
            "https.ClientResponse\n",
            "Object Description:\nEncapsulates the response to an HTTPS client request.\nThis object is read-only.\nFor a complete list of this object’s properties, see ClientResponse Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.ClientResponse\n"
        ]
    },
    "(N/https) ClientResponse.body": {
        "prefix": "ClientResponse.body",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.body for more information.",
        "description": [
            "N/https Module",
            "ClientResponse.body\n",
            "Property Description:\nThe client response body.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.body\n"
        ]
    },
    "(N/https) ClientResponse.code": {
        "prefix": "ClientResponse.code",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.code for more information.",
        "description": [
            "N/https Module",
            "ClientResponse.code\n",
            "Property Description:\nThe client HTTP response or status code.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.code\n"
        ]
    },
    "(N/https) ClientResponse.headers": {
        "prefix": "ClientResponse.headers",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.headers for more information.",
        "description": [
            "N/https Module",
            "ClientResponse.headers\n",
            "Property Description:\nThe response header or headers.\nFor more information, see HTTPS Header Information.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ClientResponse.headers\n"
        ]
    },
    "(N/https) https.ServerRequest": {
        "prefix": "https.ServerRequest",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.ServerRequest for more information.",
        "description": [
            "N/https Module",
            "https.ServerRequest\n",
            "Object Description:\nThe HTTPS request information set to an HTTPS server. For example, a request received by a Suitelet or RESTlet.\nThis object is read-only.\nFor a complete list of this object’s methods and properties, see ServerRequest Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.ServerRequest\n"
        ]
    },
    "(N/https) ServerRequest.getLineCount(options)": {
        "prefix": "ServerRequest.getLineCount(options)",
        "body": [
            "${1:ServerRequest}.getLineCount({",
            "\tgroup: ${2:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerRequest.getLineCount()\n",
            "Method Description:\nReturns the number of lines in a sublist.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.getLineCount(options)\n"
        ]
    },
    "(N/https) ServerRequest.getSublistValue(options)": {
        "prefix": "ServerRequest.getSublistValue(options)",
        "body": [
            "${1:ServerRequest}.getSublistValue({",
            "\tgroup: ${2:string*},",
            "\tline: ${3:string*},",
            "\tname: ${4:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerRequest.getSublistValue()\n",
            "Method Description:\nReturns the value of a sublist line item.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.getSublistValue(options)\n"
        ]
    },
    "(N/https) ServerRequest.body": {
        "prefix": "ServerRequest.body",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.body for more information.",
        "description": [
            "N/https Module",
            "ServerRequest.body\n",
            "Property Description:\nThe server request body.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.body\n"
        ]
    },
    "(N/https) ServerRequest.files": {
        "prefix": "ServerRequest.files",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.files for more information.",
        "description": [
            "N/https Module",
            "ServerRequest.files\n",
            "Property Description:\nThe server request files.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.files\n"
        ]
    },
    "(N/https) ServerRequest.headers": {
        "prefix": "ServerRequest.headers",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.headers for more information.",
        "description": [
            "N/https Module",
            "ServerRequest.headers\n",
            "Property Description:\nThis object represents a series of name:value pairs. Each pair represents a server request header name and its value.\nTypically, this object encapsulates two iterations of each header name: one in lower case and another in title case. This behavior is designed so that you can use either lower case or title case when you reference a header. However, the existence of title-case iterations of header names is not guaranteed. For best results, refer to header names using all lower-case letters (and hyphens, when applicable).\nThe server request headers and their values are subject to change. If you use these headers in your scripts, you are responsible for testing them to make sure that they contain the information you need. For example, when making an HTTP call to a Suitelet, some headers might be filtered out. Filtering can occur if the headers affect how NetSuite processes the request internally. These filtered headers are not available to the Suitelet, so you should test to see whether a header was filtered out. If so, use a different header instead.\nFor more information, see HTTPS Header Information.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.headers\n"
        ]
    },
    "(N/https) ServerRequest.method": {
        "prefix": "ServerRequest.method",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.method for more information.",
        "description": [
            "N/https Module",
            "ServerRequest.method\n",
            "Property Description:\nThe server request HTTPS method.\n",
            "Type:\nenum (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.method\n"
        ]
    },
    "(N/https) ServerRequest.parameters": {
        "prefix": "ServerRequest.parameters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.parameters for more information.",
        "description": [
            "N/https Module",
            "ServerRequest.parameters\n",
            "Property Description:\nThe server request parameters, as name:value pairs. Note that if the server request is a Get request, parameters are sent as part of the URL. If the server request is a Post request, parameters are sent within the request body.\nParameters cannot be arrays. Use JSON.stringify/JSON.parse instead to handle arrays.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Parent Object:\nhttps.ServerRequest\n",
            "Sibling Object Members:\nServerRequest Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.parameters\n"
        ]
    },
    "(N/https) ServerRequest.url": {
        "prefix": "ServerRequest.url",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.url for more information.",
        "description": [
            "N/https Module",
            "ServerRequest.url\n",
            "Property Description:\nThe server request URL.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerRequest.url\n"
        ]
    },
    "(N/https) https.ServerResponse": {
        "prefix": "https.ServerResponse",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.ServerResponse for more information.",
        "description": [
            "N/https Module",
            "https.ServerResponse\n",
            "Object Description:\nThe response from an HTTPS server (e.g., Suitelet or RESTlet) to an HTTPS request from a server, such as a user event script.\nFor a complete list of this object’s methods and properties, see ServerResponse Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.ServerResponse\n"
        ]
    },
    "(N/https) ServerResponse.addHeader(options)": {
        "prefix": "ServerResponse.addHeader(options)",
        "body": [
            "${1:ServerResponse}.addHeader({",
            "\tname: ${2:string*},",
            "\tvalue: ${3:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.addHeader()\n",
            "Method Description:\nAdds a header to the response.\nIf the same header has already been set, this method adds another line for that header. For example:\nFor more information, see HTTPS Header Information.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.addHeader(options)\n"
        ]
    },
    "(N/https) ServerResponse.getHeader(options)": {
        "prefix": "ServerResponse.getHeader(options)",
        "body": [
            "${1:ServerResponse}.getHeader({",
            "\tname: ${2:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.getHeader()\n",
            "Method Description:\nReturns the value or values of a response header. If multiple values are assigned to the header name, the values are returned as an Array.\nFor more information, see HTTPS Header Information.\n",
            "Returns:\nstring | string[]\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.getHeader(options)\n"
        ]
    },
    "(N/https) ServerResponse.renderPdf(options)": {
        "prefix": "ServerResponse.renderPdf(options)",
        "body": [
            "${1:ServerResponse}.renderPdf({",
            "\txmlString: ${2:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.renderPdf()\n",
            "Method Description:\nGenerates and renders a PDF directly to the response.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.renderPdf(options)\n"
        ]
    },
    "(N/https) ServerResponse.sendRedirect(options)": {
        "prefix": "ServerResponse.sendRedirect(options)",
        "body": [
            "${1:ServerResponse}.sendRedirect({",
            "\tidentifier: ${2:number | string*},",
            "\ttype: ${3:string*},",
            "\teditMode: ${4:boolean},",
            "\tid: ${5:string},",
            "\tparameters: ${6:object}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.sendRedirect()\n",
            "Method Description:\nCreates a redirect URL that resolves to a NetSuite resource. For example, you could use this method to redirect to a new sales order page for a particular entity.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.sendRedirect(options)\n"
        ]
    },
    "(N/https) ServerResponse.setCdnCacheable(options)": {
        "prefix": "ServerResponse.setCdnCacheable(options)",
        "body": [
            "${1:ServerResponse}.setCdnCacheable({",
            "\ttype: ${2:https.CacheDuration.*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.setCdnCacheable()\n",
            "Method Description:\nSets CDN caching for a period of time.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.setCdnCacheable(options)\n"
        ]
    },
    "(N/https) ServerResponse.setHeader(options)": {
        "prefix": "ServerResponse.setHeader(options)",
        "body": [
            "${1:ServerResponse}.setHeader({",
            "\tname: ${2:string*},",
            "\tvalue: ${3:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.setHeader()\n",
            "Method Description:\nSets the value of a response header.\nFor more information, see HTTPS Header Information.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.setHeader(options)\n"
        ]
    },
    "(N/https) ServerResponse.write(options)": {
        "prefix": "ServerResponse.write(options)",
        "body": [
            "${1:ServerResponse}.write({",
            "\toutput: ${2:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.write()\n",
            "Method Description:\nWrites information (text, xml, html) to the response.\nThis method accepts only strings. To pass in a file, you can use ServerResponse.writeFile(options).\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.write(options)\n"
        ]
    },
    "(N/https) ServerResponse.writeFile(options)": {
        "prefix": "ServerResponse.writeFile(options)",
        "body": [
            "${1:ServerResponse}.writeFile({",
            "\tfile: ${2:file.File*},",
            "\tisInline: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.writeFile()\n",
            "Method Description:\nWrites a file to the response.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.writeFile(options)\n"
        ]
    },
    "(N/https) ServerResponse.writeLine(options)": {
        "prefix": "ServerResponse.writeLine(options)",
        "body": [
            "${1:ServerResponse}.writeLine({",
            "\toutput: ${2:string*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.writeLine()\n",
            "Method Description:\nWrites line information (text, xml, html) to the response.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.writeLine(options)\n"
        ]
    },
    "(N/https) ServerResponse.writePage(options)": {
        "prefix": "ServerResponse.writePage(options)",
        "body": [
            "${1:ServerResponse}.writePage({",
            "\tpageObject: ${2:serverWidget.Assistant | serverWidget.Form | serverWidget.List*}",
            "})"
        ],
        "description": [
            "N/https Module",
            "ServerResponse.writePage()\n",
            "Method Description:\nGenerates a page.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.writePage(options)\n"
        ]
    },
    "(N/https) ServerResponse.headers": {
        "prefix": "ServerResponse.headers",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.headers for more information.",
        "description": [
            "N/https Module",
            "ServerResponse.headers\n",
            "Property Description:\nThe server response headers.\nFor more information, see HTTPS Header Information.\n",
            "Type:\nObject (read-only)\nNote that If multiple values are assigned to one header name, the values are returned as an array. For example:\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ServerResponse.headers\n"
        ]
    },
    "(N/https) https.createSecureKey(options)": {
        "prefix": "https.createSecureKey(options)",
        "body": [
            "${1:https}.createSecureKey({",
            "\tguid: ${2:string*},",
            "\tencoding: ${3:https.Encoding}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.createSecureKey()\n",
            "Method Description:\nCreates and returns a crypto.SecretKey Object. This method can take a GUID. Use Form.addCredentialField(options) to generate a value.\nYou can put the key in your secure string. SuiteScript decrypts the value (key) and sends it to the server\n",
            "Returns:\ncrypto.SecretKey\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.createSecureKey(options)\n"
        ]
    },
    "(N/https) https.createSecureKey.promise(options)": {
        "prefix": "https.createSecureKey.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.createSecureKey.promise(options) for more information.",
        "description": [
            "N/https Module",
            "https.createSecureKey.promise()\n",
            "Method Description:\nCreates and returns a crypto.SecretKey Object asynchronously.\nThe parameters and errors thrown for this method are the same as those for https.createSecureKey(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttps.createSecureKey(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.createSecureKey.promise(options)\n"
        ]
    },
    "(N/https) https.createSecureString(options)": {
        "prefix": "https.createSecureString(options)",
        "body": [
            "${1:https}.createSecureString({",
            "\tinput: ${2:string*},",
            "\tinputEncoding: ${3:https.Encoding}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.createSecureString()\n",
            "Method Description:\nCreates and returns an https.SecureString.\n",
            "Returns:\nhttps.SecureString\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.createSecureString(options)\n"
        ]
    },
    "(N/https) https.createSecureString.promise(options)": {
        "prefix": "https.createSecureString.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.createSecureString.promise(options) for more information.",
        "description": [
            "N/https Module",
            "https.createSecureString.promise()\n",
            "Method Description:\nCreates and returns an https.SecureString asynchronously.\nThe parameters and errors thrown for this method are the same as those for https.createSecureString(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttps.createSecureString(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.createSecureString.promise(options)\n"
        ]
    },
    "(N/https) https.get(options)": {
        "prefix": "https.get(options)",
        "body": [
            "${1:https}.get({",
            "\turl: ${2:string*},",
            "\theaders: ${3:Object}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.get()\n",
            "Method Description:\nSends an HTTPS GET request.\n",
            "Returns:\nhttps.ClientResponse or https.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.get(options)\n"
        ]
    },
    "(N/https) https.get.promise(options)": {
        "prefix": "https.get.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.get.promise(options) for more information.",
        "description": [
            "N/https Module",
            "https.get.promise()\n",
            "Method Description:\nSends an HTTPS GET request asynchronously.\nThe parameters and errors thrown for this method are the same as those for https.get(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttps.get(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.get.promise(options)\n"
        ]
    },
    "(N/https) https.delete(options)": {
        "prefix": "https.delete(options)",
        "body": [
            "${1:https}.delete({",
            "\turl: ${2:string*},",
            "\theaders: ${3:Object}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.delete()\n",
            "Method Description:\nSends an HTTPS DELETE request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\nThis method does not include an options.body parameter. Postdata is not required when the HTTPS method is a DELETE request.\n",
            "Returns:\nhttps.ClientResponse or https.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.delete(options)\n"
        ]
    },
    "(N/https) https.delete.promise(options)": {
        "prefix": "https.delete.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.delete.promise(options) for more information.",
        "description": [
            "N/https Module",
            "https.delete.promise()\n",
            "Method Description:\nSends an HTTP DELETE request asynchronously.\nThe parameters and errors thrown for this method are the same as those for https.delete(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttps.delete(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.delete.promise(options)\n"
        ]
    },
    "(N/https) https.post(options)": {
        "prefix": "https.post(options)",
        "body": [
            "${1:https}.post({",
            "\tbody: ${2:string | Object*},",
            "\turl: ${3:string*},",
            "\tcredentials: ${4:string[]},",
            "\theaders: ${5:Object}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.post()\n",
            "Method Description:\nSends an HTTPS POST request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nhttps.ClientResponse or https.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.post(options)\n"
        ]
    },
    "(N/https) https.post.promise(options)": {
        "prefix": "https.post.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.post.promise(options) for more information.",
        "description": [
            "N/https Module",
            "https.post.promise()\n",
            "Method Description:\nSends an HTTPS POST request asynchronously.\nThe parameters and errors thrown for this method are the same as those for https.post(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttps.post(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.post.promise(options)\n"
        ]
    },
    "(N/https) https.put(options)": {
        "prefix": "https.put(options)",
        "body": [
            "${1:https}.put({",
            "\tbody: ${2:string | Object*},",
            "\turl: ${3:string*},",
            "\tcredentials: ${4:string[]},",
            "\theaders: ${5:Object}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.put()\n",
            "Method Description:\nSends an HTTPS PUT request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nhttps.ClientResponse or https.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.put(options)\n"
        ]
    },
    "(N/https) https.put.promise(options)": {
        "prefix": "https.put.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.put.promise(options) for more information.",
        "description": [
            "N/https Module",
            "https.put.promise()\n",
            "Method Description:\nSends an HTTPS PUT request asynchronously.\nThe parameters and errors thrown for this method are the same as those for https.put(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttps.put(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.put.promise(options)\n"
        ]
    },
    "(N/https) https.request(options)": {
        "prefix": "https.request(options)",
        "body": [
            "${1:https}.request({",
            "\tmethod: ${2:enum*},",
            "\turl: ${3:string*},",
            "\tbody: ${4:string | Object},",
            "\tcredentials: ${5:string[]},",
            "\theaders: ${6:Object}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.request()\n",
            "Method Description:\nSends an HTTPS request.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nhttps.ClientResponse or https.ServerResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.request(options)\n"
        ]
    },
    "(N/https) https.request.promise(options)": {
        "prefix": "https.request.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=https.request.promise(options) for more information.",
        "description": [
            "N/https Module",
            "https.request.promise()\n",
            "Method Description:\nSends an HTTPS request asynchronously.\nThe parameters and errors thrown for this method are the same as those for https.request(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nhttps.request(options)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.request.promise(options)\n"
        ]
    },
    "(N/https) https.requestRestlet(options)": {
        "prefix": "https.requestRestlet(options)",
        "body": [
            "${1:https}.requestRestlet({",
            "\tbody: ${2:string | Object},",
            "\tdeploymentId: ${3:string*},",
            "\tscriptId: ${4:string | number*},",
            "\theaders: ${5:Object},",
            "\tmethod: ${6:string},",
            "\turlParams: ${7:Object}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.requestRestlet()\n",
            "Method Description:\nSends an HTTPS request to a RESTlet and returns the response. Authentication headers are automatically added.\nThe RESTlet will run with the same privileges as the calling script.\n",
            "Returns:\nhttps.ClientResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.requestRestlet(options)\n"
        ]
    },
    "(N/https) https.requestSuiteTalkRest(options)": {
        "prefix": "https.requestSuiteTalkRest(options)",
        "body": [
            "${1:https}.requestSuiteTalkRest({",
            "\tbody: ${2:string | Object},",
            "\turl: ${3:string*},",
            "\theaders: ${4:Object},",
            "\tmethod: ${5:string}",
            "})"
        ],
        "description": [
            "N/https Module",
            "https.requestSuiteTalkRest()\n",
            "Method Description:\nSends an HTTPS request to a SuiteTalk REST endpoint and returns the response. Authentication headers are automatically added.\n",
            "Returns:\nhttps.ClientResponse\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https Module\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.requestSuiteTalkRest(options)\n"
        ]
    },
    "(N/https) https.CacheDuration": {
        "prefix": "https.CacheDuration",
        "body": "https.CacheDuration.${1|LONG|}",
        "description": [
            "N/https Module",
            "https.CacheDuration\n",
            "Enum Description:\nHolds the string values for supported cache durations. This enum is used to set the value of the ServerResponse.setCdnCacheable(options) property.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.CacheDuration\n"
        ]
    },
    "(N/https) https.Encoding": {
        "prefix": "https.Encoding",
        "body": "https.Encoding.${1|UTF_8,BASE_16,BASE_32,BASE_64,BASE_64_URL_SAFE,HEX|}",
        "description": [
            "N/https Module",
            "https.Encoding\n",
            "Enum Description:\nHolds the string values for supported encoding values.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.Encoding\n"
        ]
    },
    "(N/https) https.HashAlg": {
        "prefix": "https.HashAlg",
        "body": "https.HashAlg.${1|SHA1,SHA256,SHA512,MD5|}",
        "description": [
            "N/https Module",
            "https.HashAlg\n",
            "Enum Description:\nHolds the string values for supported hashing algorithms.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.HashAlg\n"
        ]
    },
    "(N/https) https.Method": {
        "prefix": "https.Method",
        "body": "https.Method.${1|DELETE,GET,HEAD,PUT,POST|}",
        "description": [
            "N/https Module",
            "https.Method\n",
            "Enum Description:\nHolds the string values for supported HTTPS requests. This enum is used to set the value of https.request(options) and ServerRequest.method.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.Method\n"
        ]
    },
    "(N/https) https.RedirectType": {
        "prefix": "https.RedirectType",
        "body": "https.RedirectType.${1|MEDIA_ITEM,RECORD,RESTLET,SUITELET,TASK_LINK|}",
        "description": [
            "N/https Module",
            "https.RedirectType\n",
            "Enum Description:\nHolds the string values for supported NetSuite resources that you can redirect to. This enum is used to set the value of the type argument for ServerResponse.sendRedirect(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/https Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=https.RedirectType\n"
        ]
    },
    "(N/https/clientCertificate) clientCertificate.post(options)": {
        "prefix": "clientCertificate.post(options)",
        "body": "clientCertificate.post(options).${1||}",
        "description": [
            "N/https/clientCertificate Module",
            "clientCertificate.post()\n",
            "Method Description:\nMethod used to send a SSL secured POST request to a remote service and return the response.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nAn https.ClientResponse Object\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https/clientCertificate Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=clientCertificate.post(options)\n"
        ]
    },
    "(N/https/clientCertificate) clientCertificate.get(options)": {
        "prefix": "clientCertificate.get(options)",
        "body": "clientCertificate.get(options).${1||}",
        "description": [
            "N/https/clientCertificate Module",
            "clientCertificate.get()\n",
            "Method Description:\nMethod used to send a SSL secured GET request to a remote service and return the response.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nAn https.ClientResponse Object\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https/clientCertificate Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=clientCertificate.get(options)\n"
        ]
    },
    "(N/https/clientCertificate) clientCertificate.put(options)": {
        "prefix": "clientCertificate.put(options)",
        "body": "clientCertificate.put(options).${1||}",
        "description": [
            "N/https/clientCertificate Module",
            "clientCertificate.put()\n",
            "Method Description:\nMethod used to send a SSL secured request to a remote service and return the response.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nAn https.ClientResponse Object\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https/clientCertificate Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=clientCertificate.put(options)\n"
        ]
    },
    "(N/https/clientCertificate) clientCertificate.delete(options)": {
        "prefix": "clientCertificate.delete(options)",
        "body": "clientCertificate.delete(options).${1||}",
        "description": [
            "N/https/clientCertificate Module",
            "clientCertificate.delete()\n",
            "Method Description:\nMethod used to send a SSL secured request to a remote service and return the response.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nAn https.ClientResponse Object\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https/clientCertificate Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=clientCertificate.delete(options)\n"
        ]
    },
    "(N/https/clientCertificate) clientCertificate.request(options)": {
        "prefix": "clientCertificate.request(options)",
        "body": "clientCertificate.request(options).${1||}",
        "description": [
            "N/https/clientCertificate Module",
            "clientCertificate.request()\n",
            "Method Description:\nMethod used to send a SSL secured request to a remote service and return the response.\nIf negotiating a connection to the destination server exceeds 5 seconds, a connection timeout occurs. If transferring a payload to the server exceeds 45 seconds, a request timeout occurs.\n",
            "Returns:\nAn https.ClientResponse Object\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/https/clientCertificate Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=clientCertificate.request(options)\n"
        ]
    },
    "(N/keyControl) keyControl.Key": {
        "prefix": "keyControl.Key",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.Key for more information.",
        "description": [
            "N/keyControl Module",
            "keyControl.Key\n",
            "Object Description:\nRepresents the key.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/keyControl Module\n",
            "Methods and Properties:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.Key\n"
        ]
    },
    "(N/keyControl) Key.file": {
        "prefix": "Key.file",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Key.file for more information.",
        "description": [
            "N/keyControl Module",
            "Key.file\n",
            "Property Description:\nThe file object of the key.\n",
            "Type:\nfile.File\n",
            "Module:\nN/keyControl Module\n",
            "Parent Object:\nkeyControl.Key\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Methods and Properties:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Key.file\n"
        ]
    },
    "(N/keyControl) Key.password": {
        "prefix": "Key.password",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Key.password for more information.",
        "description": [
            "N/keyControl Module",
            "Key.password\n",
            "Property Description:\nThe password of the key.\nGUID or secret token for working with passwords is accepted.\n",
            "Type:\nString (write-only)\n",
            "Module:\nN/keyControl Module\n",
            "Parent Object:\nkeyControl.Key\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Methods and Properties:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Key.password\n"
        ]
    },
    "(N/keyControl) Key.scriptId": {
        "prefix": "Key.scriptId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Key.scriptId for more information.",
        "description": [
            "N/keyControl Module",
            "Key.scriptId\n",
            "Property Description:\nThe script ID of the key.\nUsing Key.save() and keyControl.findKeys(options) returns the script ID.\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/keyControl Module\n",
            "Methods and Properties:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Key.scriptId\n"
        ]
    },
    "(N/keyControl) Key.name": {
        "prefix": "Key.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Key.name for more information.",
        "description": [
            "N/keyControl Module",
            "Key.name\n",
            "Property Description:\nThe name of the key.\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/keyControl Module\n",
            "Methods and Properties:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Key.name\n"
        ]
    },
    "(N/keyControl) Key.description": {
        "prefix": "Key.description",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Key.description for more information.",
        "description": [
            "N/keyControl Module",
            "Key.description\n",
            "Property Description:\nThe description of the key.\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/keyControl Module\n",
            "Methods and Properties:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Key.description\n"
        ]
    },
    "(N/keyControl) Key.restrictions": {
        "prefix": "Key.restrictions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Key.restrictions for more information.",
        "description": [
            "N/keyControl Module",
            "Key.restrictions\n",
            "Property Description:\nAn array of employee IDs. Only these employees can access the key.\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/keyControl Module\n",
            "Methods and Properties:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Key.restrictions\n"
        ]
    },
    "(Key Object Members) Key.save()": {
        "prefix": "Key.save()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Key.save() for more information.",
        "description": [
            "Key Object Members",
            "Key.save()\n",
            "Method Description:\nSaves the key.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nKey Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Key.save()\n"
        ]
    },
    "(N/keyControl) keyControl.createKey(options)": {
        "prefix": "keyControl.createKey(options)",
        "body": [
            "${1:keyControl}.createKey({",
            "\tfile: ${2:file},",
            "\tpassword: ${3:string},",
            "\tscriptId: ${4:string},",
            "\tdescription: ${5:string},",
            "\trestrictions: ${6:number[] or string[]},",
            "\tname: ${7:string}",
            "})"
        ],
        "description": [
            "N/keyControl Module",
            "keyControl.createKey()\n",
            "Method Description:\nCreates a key record on the Private Keys page using a file from the File Cabinet.\n",
            "Returns:\nkeyControl.Key\n",
            "Supported Script Types:\nServer scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/keyControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.createKey(options)\n"
        ]
    },
    "(N/keyControl) keyControl.findKeys(options)": {
        "prefix": "keyControl.findKeys(options)",
        "body": [
            "${1:keyControl}.findKeys({",
            "\trestriction: ${2:number},",
            "\tname: ${3:string or object},",
            "\tdescription: ${4:string or object}",
            "})"
        ],
        "description": [
            "N/keyControl Module",
            "keyControl.findKeys()\n",
            "Method Description:\nReturns a list of keys that are available to the user.\n",
            "Returns:\nMetadata about the keys\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/keyControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.findKeys(options)\n"
        ]
    },
    "(N/keyControl) keyControl.deleteKey(options)": {
        "prefix": "keyControl.deleteKey(options)",
        "body": [
            "${1:keyControl}.deleteKey({",
            "\tscriptId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/keyControl Module",
            "keyControl.deleteKey()\n",
            "Method Description:\nDeletes a key.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/keyControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.deleteKey(options)\n"
        ]
    },
    "(N/keyControl) keyControl.loadKey(options)": {
        "prefix": "keyControl.loadKey(options)",
        "body": [
            "${1:keyControl}.loadKey({",
            "\tscriptId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/keyControl Module",
            "keyControl.loadKey()\n",
            "Method Description:\nLoads a key.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nServer-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/keyControl Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.loadKey(options)\n"
        ]
    },
    "(N/keyControl) keyControl.Operator": {
        "prefix": "keyControl.Operator",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.Operator for more information.",
        "description": [
            "N/keyControl Module",
            "keyControl.Operator\n",
            "Enum Description:\nHolds the values for the key operators of keyControl.findKeys(options).\n",
            "Module:\nN/keyControl Module\n",
            "Supported Script Types:\nAll server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=keyControl.Operator\n"
        ]
    },
    "(N/log) log.audit(options)": {
        "prefix": "log.audit(options)",
        "body": [
            "${1:log}.audit({",
            "\ttitle: ${2:string*},",
            "\tdetails: ${3:any}",
            "})"
        ],
        "description": [
            "N/log Module",
            "log.audit()\n",
            "Method Description:\nLogs an Audit message.\nAudit messages appear on the Execution Log tab if the Log Level on the script deployment is set to Audit or Debug.\nUse this method for scripts in production.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nAmount of logging in any 60 minute period is limited. See N/log Module Guidelines.\n",
            "Module:\nN/log Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=log.audit(options)\n"
        ]
    },
    "(N/log) log.debug(options)": {
        "prefix": "log.debug(options)",
        "body": [
            "${1:log}.debug({",
            "\ttitle: ${2:string*},",
            "\tdetails: ${3:any}",
            "})"
        ],
        "description": [
            "N/log Module",
            "log.debug()\n",
            "Method Description:\nLogs a Debug message.\nDebug messages appear on the Execution tab only if the Log Level on the script deployment is set to Debug.\nUse this method for scripts in development.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nAmount of logging in any 60 minute period is limited. See N/log Module Guidelines.\n",
            "Module:\nN/log Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=log.debug(options)\n"
        ]
    },
    "(N/log) log.emergency(options)": {
        "prefix": "log.emergency(options)",
        "body": [
            "${1:log}.emergency({",
            "\ttitle: ${2:string*},",
            "\tdetails: ${3:any}",
            "})"
        ],
        "description": [
            "N/log Module",
            "log.emergency()\n",
            "Method Description:\nLogs an Emergency message.\nEmergency messages appear on the Execution tab only if the Log Level on the script deployment is set to Audit, Debug, Error, or Emergency. In other words, emergency messages always appear.\nUse this method for scripts in production.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nAmount of logging in any 60 minute period is limited. See N/log Module Guidelines.\n",
            "Module:\nN/log Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=log.emergency(options)\n"
        ]
    },
    "(N/log) log.error(options)": {
        "prefix": "log.error(options)",
        "body": [
            "${1:log}.error({",
            "\ttitle: ${2:string*},",
            "\tdetails: ${3:any}",
            "})"
        ],
        "description": [
            "N/log Module",
            "log.error()\n",
            "Method Description:\nLogs an Error message.\nError messages appear on the Execution tab only if the Log Level on the script deployment is set to Audit, Debug, or Error.\nUse this method for scripts in production.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nAmount of logging in any 60 minute period is limited. See N/log Module Guidelines.\n",
            "Module:\nN/log Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=log.error(options)\n"
        ]
    },
    "(N/piremoval) piremoval.PiRemovalTask": {
        "prefix": "piremoval.PiRemovalTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.PiRemovalTask for more information.",
        "description": [
            "N/piremoval Module",
            "piremoval.PiRemovalTask\n",
            "Object Description:\nEncapsulates a task to remove personal information (PI). This object includes lists of the record, field, and workflow IDs to remove personal information from, as well as history replacement information.\nUse piremoval.createTask(options) to create a piremoval.PiRemovalTask object, or use piremoval.loadTask(options) to load a PI removal task as a piremoval.PiRemovalTask object. To save the object, use PiRemovalTask.save(). To execute the PI removal, use PiRemovalTask.run().\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/piremoval Module\n",
            "Methods and Properties:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.PiRemovalTask\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.deleteTask()": {
        "prefix": "PiRemovalTask.deleteTask()",
        "body": [
            "${1:PiRemovalTask}.deleteTask(){",
            "\tUNEXPECTED_ERROR: ${2:Cannot delete PiRemoval job that was not saved.}",
            "})"
        ],
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.deleteTask()\n",
            "Method Description:\nDeletes the PI Removal task.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.deleteTask()\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.run()": {
        "prefix": "PiRemovalTask.run()",
        "body": [
            "${1:PiRemovalTask}.run(){",
            "\tUNEXPECTED_ERROR: ${2:Cannot run unsaved PiRemoval job.}",
            "})"
        ],
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.run()\n",
            "Method Description:\nRuns the PI removal task.\nAll validation for the task (for example, ensuring that the specified record IDs are valid) occurs when the task is saved using PiRemovalTask.save(), not when the task is run using PiRemovalTask.run().\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.run()\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.save()": {
        "prefix": "PiRemovalTask.save()",
        "body": [
            "${1:PiRemovalTask}.save(){",
            "\t_1_CANNOT_BE_EMPTY: ${2:Record Type cannot be empty.},",
            "\t_1_JOB_WAS_NOT_FOUND: {",
            "\t_1_JOB_WAS_NOT_FOUND: {",
            "\t_1_JOB_WAS_NOT_FOUND: {",
            "\t_1_JOB_WAS_NOT_FOUND: ${6:Workflow ID ‘ID’ was not found.}",
            "})"
        ],
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.save()\n",
            "Method Description:\nSaves the PI removal task.\nAll validation for the task (for example, ensuring that the specified record IDs are valid) occurs when the task is saved using this method.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.save()\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.fieldIds": {
        "prefix": "PiRemovalTask.fieldIds",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.fieldIds for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.fieldIds\n",
            "Property Description:\nIDs of the fields whose PI is removed.\nIf no field IDs are entered, no information changes are performed. If the field IDs are null or invalid, the following exception occurs:\nWrong parameter type: options.fieldIds is expected as array.\n",
            "Type:\nstring[] (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.fieldIds\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.historyOnly": {
        "prefix": "PiRemovalTask.historyOnly",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.historyOnly for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.historyOnly\n",
            "Property Description:\nIndicates whether the PI removal task removes system note information only, not field values or workflow history. If true, the task removes information from system notes only. If false, the task removes information from system notes, workflow history, and field values. The default value is false.\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.historyOnly\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.historyReplacement": {
        "prefix": "PiRemovalTask.historyReplacement",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.historyReplacement for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.historyReplacement\n",
            "Property Description:\nThe text used in system notes to replace the original value.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.historyReplacement\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.id": {
        "prefix": "PiRemovalTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.id for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.id\n",
            "Property Description:\nID that uniquely identifies the PI removal task.\nThis ID is assigned to the PI removal task when PiRemovalTask.save() is called to save the task. You cannot specify your own task ID.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.id\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.recordIds": {
        "prefix": "PiRemovalTask.recordIds",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.recordIds for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.recordIds\n",
            "Property Description:\nID of records whose PI is removed.\nIf no record IDs are entered, no information changes are performed. If the record IDs are null or invalid, the following exception occurs:\nWrong parameter type: options.recordIds is expected as array.\n",
            "Type:\nnumber[] (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.recordIds\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.recordType": {
        "prefix": "PiRemovalTask.recordType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.recordType for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.recordType\n",
            "Property Description:\nType of record whose PI is removed. All records referenced in the piremoval.PiRemovalTask object must be the same type.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.recordType\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.status": {
        "prefix": "PiRemovalTask.status",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.status for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.status\n",
            "Property Description:\nStatus of the PI removal task.\n",
            "Type:\npiremoval.PiRemovalTaskStatus\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.status\n"
        ]
    },
    "(N/piremoval) PiRemovalTask.workflowIds": {
        "prefix": "PiRemovalTask.workflowIds",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.workflowIds for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTask.workflowIds\n",
            "Property Description:\nIDs of workflows where PI is removed from the workflow history.\nIf no workflow IDs are entered, no information changes are performed. If the workflow IDs are null or invalid, the following exception occurs:\nWrong parameter type: options.workflowIds is expected as array.\n",
            "Type:\nnumber[] (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTask\n",
            "Sibling Object Members:\nPiRemovalTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTask.workflowIds\n"
        ]
    },
    "(N/piremoval) piremoval.PiRemovalTaskLogItem": {
        "prefix": "piremoval.PiRemovalTaskLogItem",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.PiRemovalTaskLogItem for more information.",
        "description": [
            "N/piremoval Module",
            "piremoval.PiRemovalTaskLogItem\n",
            "Object Description:\nThis object represents log items that are associated with a piremoval.PiRemovalTaskStatus object. The logs are generated separately when a task is created, started, and completed. A piremoval.PiRemovalTaskLogItem object represents a single log entry that you get from the piremoval.PiRemovalTaskStatus object using the PiRemovalTaskStatus.logList property. The log items are sorted by date.\nThe structure of this object is described in PiRemovalTaskLogItem Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/piremoval Module\n",
            "Methods and Properties:\nPiRemovalTaskLogItem Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.PiRemovalTaskLogItem\n"
        ]
    },
    "(N/piremoval) PiRemovalTaskLogItem.exception": {
        "prefix": "PiRemovalTaskLogItem.exception",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.exception for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTaskLogItem.exception\n",
            "Property Description:\nException message for the log item, typically an unexpected error from NetSuite.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTaskLogItem\n",
            "Sibling Object Members:\nPiRemovalTaskLogItem Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.exception\n"
        ]
    },
    "(N/piremoval) PiRemovalTaskLogItem.message": {
        "prefix": "PiRemovalTaskLogItem.message",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.message for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTaskLogItem.message\n",
            "Property Description:\nLog item text message.\nThe message specifies if the record type is not set, or if one of record, field, or workflow IDs do not exist.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTaskLogItem\n",
            "Sibling Object Members:\nPiRemovalTaskLogItem Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.message\n"
        ]
    },
    "(N/piremoval) PiRemovalTaskLogItem.status": {
        "prefix": "PiRemovalTaskLogItem.status",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.status for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTaskLogItem.status\n",
            "Property Description:\nEncapsulates the status of a log item.\nPossible status values include:\nPENDING\nPROCESSING\nCOMPLETE\nFAILED\nFor more information, see task.TaskStatus.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTaskLogItem\n",
            "Sibling Object Members:\nPiRemovalTaskLogItem Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.status\n"
        ]
    },
    "(N/piremoval) PiRemovalTaskLogItem.type": {
        "prefix": "PiRemovalTaskLogItem.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.type for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTaskLogItem.type\n",
            "Property Description:\nIndicates the change described by this log item. Possible values include:\nFieldValue - field value\nSystemNote - system note\nWorkflow - workflow history\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTaskLogItem\n",
            "Sibling Object Members:\nPiRemovalTaskLogItem Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskLogItem.type\n"
        ]
    },
    "(N/piremoval) piremoval.PiRemovalTaskStatus": {
        "prefix": "piremoval.PiRemovalTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.PiRemovalTaskStatus for more information.",
        "description": [
            "N/piremoval Module",
            "piremoval.PiRemovalTaskStatus\n",
            "Object Description:\nEncapsulates the status of a personal information removal task returned by piremoval.getTaskStatus(options).\nPossible status values include:\nPENDING\nPROCESSING\nCOMPLETE\nFAILED\nFor more information, see task.TaskStatus.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/piremoval Module\n",
            "Methods and Properties:\nPiRemovalTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.PiRemovalTaskStatus\n"
        ]
    },
    "(N/piremoval) PiRemovalTaskStatus.logList": {
        "prefix": "PiRemovalTaskStatus.logList",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskStatus.logList for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTaskStatus.logList\n",
            "Property Description:\nGets list of logs for the PiRemovalTask job.\n",
            "Type:\npiremoval.PiRemovalTaskLogItem[]\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTaskStatus\n",
            "Sibling Object Members:\nPiRemovalTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskStatus.logList\n"
        ]
    },
    "(N/piremoval) PiRemovalTaskStatus.status": {
        "prefix": "PiRemovalTaskStatus.status",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskStatus.status for more information.",
        "description": [
            "N/piremoval Module",
            "PiRemovalTaskStatus.status\n",
            "Property Description:\nEncapsulates the status of a personal information removal task returned by piremoval.getTaskStatus(options).\nPossible status values include:\nPENDING\nPROCESSING\nCOMPLETE\nFAILED\nFor more information, see task.TaskStatus.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/piremoval Module\n",
            "Parent Object:\npiremoval.PiRemovalTaskStatus\n",
            "Sibling Object Members:\nPiRemovalTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PiRemovalTaskStatus.status\n"
        ]
    },
    "(N/piremoval) piremoval.createTask(options)": {
        "prefix": "piremoval.createTask(options)",
        "body": [
            "${1:piremoval}.createTask({",
            "\tfieldIds: ${2:number[]},",
            "\thistoryOnly: ${3:boolean},",
            "\thistoryReplacement: ${4:string},",
            "\trecordIds: ${5:number[]},",
            "\trecordType: ${6:string},",
            "\tworkflowIds: ${7:number[]}",
            "})"
        ],
        "description": [
            "N/piremoval Module",
            "piremoval.createTask()\n",
            "Method Description:\nCreates a new personal information removal task.\n",
            "Returns:\npiremoval.PiRemovalTask\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/piremoval Module\n",
            "Sibling Object Members:\nN/piremoval Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.createTask(options)\n"
        ]
    },
    "(N/piremoval) piremoval.deleteTask(options)": {
        "prefix": "piremoval.deleteTask(options)",
        "body": [
            "${1:piremoval}.deleteTask({",
            "\tid: ${2:number*}",
            "})"
        ],
        "description": [
            "N/piremoval Module",
            "piremoval.deleteTask()\n",
            "Method Description:\nDeletes a personal information removal task.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/piremoval Module\n",
            "Sibling Object Members:\nN/piremoval Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.deleteTask(options)\n"
        ]
    },
    "(N/piremoval) piremoval.getTaskStatus(options)": {
        "prefix": "piremoval.getTaskStatus(options)",
        "body": [
            "${1:piremoval}.getTaskStatus({",
            "\tid: ${2:number*}",
            "})"
        ],
        "description": [
            "N/piremoval Module",
            "piremoval.getTaskStatus()\n",
            "Method Description:\nRetrieves the status of a personal information removal task.\n",
            "Returns:\npiremoval.PiRemovalTaskStatus\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/piremoval Module\n",
            "Sibling Object Members:\nN/piremoval Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.getTaskStatus(options)\n"
        ]
    },
    "(N/piremoval) piremoval.loadTask(options)": {
        "prefix": "piremoval.loadTask(options)",
        "body": [
            "${1:piremoval}.loadTask({",
            "\tid: ${2:number*}",
            "})"
        ],
        "description": [
            "N/piremoval Module",
            "piremoval.loadTask()\n",
            "Method Description:\nRetrieves an existing personal information removal task.\n",
            "Returns:\npiremoval.PiRemovalTask\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/piremoval Module\n",
            "Sibling Object Members:\nN/piremoval Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=piremoval.loadTask(options)\n"
        ]
    },
    "(N/config) plugin.findImplementations(options)": {
        "prefix": "plugin.findImplementations(options)",
        "body": [
            "${1:plugin}.findImplementations({",
            "\ttype: ${2:string*},",
            "\tincludeDefault: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/config Module",
            "plugin.findImplementations()\n",
            "Method Description:\nReturns the script IDs of custom plug-in type implementations.\nReturns an empty list when there is no custom plug-in type with the script ID available for the executing script.\n",
            "Returns:\nA string[] containing a list of custom plug-in implementation script IDs.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/config Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=plugin.findImplementations(options)\n"
        ]
    },
    "(N/config) plugin.loadImplementation(options)": {
        "prefix": "plugin.loadImplementation(options)",
        "body": [
            "${1:plugin}.loadImplementation({",
            "\ttype: ${2:string*},",
            "\timplementation: ${3:string}",
            "})"
        ],
        "description": [
            "N/config Module",
            "plugin.loadImplementation()\n",
            "Method Description:\nInstantiates an implementation of the custom plugin type.\nReturns the implementation which is currently selected in the UI (Manage Plug-ins page) when no implementation ID is explicitly provided.\n",
            "Returns:\nAn Object implementing the custom plug-in type.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/config Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=plugin.loadImplementation(options)\n"
        ]
    },
    "(N/portlet) portlet.resize()": {
        "prefix": "portlet.resize()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=portlet.resize() for more information.",
        "description": [
            "N/portlet Module",
            "portlet.resize()\n",
            "Method Description:\nResizes a form portlet type immediately.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/portlet Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=portlet.resize()\n"
        ]
    },
    "(N/portlet) portlet.refresh()": {
        "prefix": "portlet.refresh()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=portlet.refresh() for more information.",
        "description": [
            "N/portlet Module",
            "portlet.refresh()\n",
            "Method Description:\nRefreshes a form portlet type immediately.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/portlet Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=portlet.refresh()\n"
        ]
    },
    "(N/query) query.Column": {
        "prefix": "query.Column",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Column for more information.",
        "description": [
            "N/query Module",
            "query.Column\n",
            "Object Description:\nA query result column.\nThe query.Column object is the equivalent of the search.Column object in the N/search Module. The query.Column object describes the field types (columns) that are displayed from the query results.\nTo create columns:\nUse Query.createColumn(options) to create a column on the initial query definition created with query.create(options).\nUse Component.createColumn(options) to create a column on a join relationship created with Query.autoJoin(options) or Component.autoJoin(options).\nAssign all created columns as array values to Query.columns. For an example, see Syntax.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nColumn Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Column\n"
        ]
    },
    "(N/query) Column.aggregate": {
        "prefix": "Column.aggregate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.aggregate for more information.",
        "description": [
            "N/query Module",
            "Column.aggregate\n",
            "Property Description:\nAn aggregate function that is performed on the query result column. An aggregate function performs a calculation on the column values and returns a single value.\nThis property is set when Query.createColumn(options) or Component.createColumn(options) is executed.\nFor a list of supported aggregate functions, see the query.Aggregate enum.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.aggregate\n"
        ]
    },
    "(N/query) Column.alias": {
        "prefix": "Column.alias",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.alias for more information.",
        "description": [
            "N/query Module",
            "Column.alias\n",
            "Property Description:\nAn alias for this column. An alias is an alternate name for a column, and the alias is used in mapped results.\nIn general, the alias is an optional property. If you want to use mapped results in your script, the alias is required. To use mapped results, you must specify an alias in the following situations:\nYou must specify an alias for a column when the column uses a formula.\nYou must specify an alias when two columns in a joined query use the same field ID. For example, many record types include the entity field ID. If you join two record types that use the entity field ID, and you use the entity field ID to create result columns for both record types, you must specify an alias for one of the columns. This alias distinguishes the two columns that have the same field ID.\nThis property is set when Query.createColumn(options) or Component.createColumn(options) is executed.\n",
            "Type:\nstring\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.alias\n"
        ]
    },
    "(N/query) Column.component": {
        "prefix": "Column.component",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.component for more information.",
        "description": [
            "N/query Module",
            "Column.component\n",
            "Property Description:\nA reference to the query.Component object to which this query result column belongs.\nThis property is set when Query.createColumn(options) or Component.createColumn(options) is executed.\n",
            "Type:\nquery.Component (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.component\n"
        ]
    },
    "(N/query) Column.context": {
        "prefix": "Column.context",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.context for more information.",
        "description": [
            "N/query Module",
            "Column.context\n",
            "Property Description:\nThe field context for values in the query result column.\nThis property is set when Query.createColumn(options) or Component.createColumn(options) is executed. The field context determines how field values are displayed in a column. For example, you can specify that a column should display raw data (such as internal IDs), consolidated or converted amounts (such as currency totals), or user-friendly values (such as names).\nThis property is an Object that includes the name of the context (which is a value in the query.FieldContext enum) and any parameters that apply to that context. In this release, only the query.FieldContext.CONVERTED context uses parameters. For information about these parameters, see Query.createColumn(options) or Component.createColumn(options).\n",
            "Type:\nObject (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.context\n"
        ]
    },
    "(N/query) Column.fieldId": {
        "prefix": "Column.fieldId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.fieldId for more information.",
        "description": [
            "N/query Module",
            "Column.fieldId\n",
            "Property Description:\nThe name of the query result column.\nThis property is set during the execution of Query.createColumn(options) or Component.createColumn(options). This property and the Column.formula property cannot be set at the same time.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.fieldId\n"
        ]
    },
    "(N/query) Column.formula": {
        "prefix": "Column.formula",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.formula for more information.",
        "description": [
            "N/query Module",
            "Column.formula\n",
            "Property Description:\nA formula used to create the query result column.\nThis property is set during the execution of Query.createColumn(options) or Component.createColumn(options). This property and the Column.fieldId property cannot be set at the same time.\nFor more information on formulas, see Formulas in Search and SQL Expressions.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.formula\n"
        ]
    },
    "(N/query) Column.groupBy": {
        "prefix": "Column.groupBy",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.groupBy for more information.",
        "description": [
            "N/query Module",
            "Column.groupBy\n",
            "Property Description:\nWhether the query results are grouped by this query result column.\nThis property is set during the execution of Query.createColumn(options) or Component.createColumn(options).\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.groupBy\n"
        ]
    },
    "(N/query) Column.label": {
        "prefix": "Column.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.label for more information.",
        "description": [
            "N/query Module",
            "Column.label\n",
            "Property Description:\nThe label for the column.\nA label is important if the query object is used as the data source for printing (for example, in the TemplateRenderer.addQuery(options) method in the N/render module).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.label\n"
        ]
    },
    "(N/query) Column.type": {
        "prefix": "Column.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.type for more information.",
        "description": [
            "N/query Module",
            "Column.type\n",
            "Property Description:\nThe return type of the formula used to create the query result column.\nThis property is set during the execution of Query.createColumn(options) or Component.createColumn(options). If a formula is specified when these methods are called, this property contains the return type of the formula. If a formula is not specified, this property is null.\nFor more information on formulas, see Formulas in Search and SQL Expressions.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Column\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.type\n"
        ]
    },
    "(N/query) query.Component": {
        "prefix": "query.Component",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Component for more information.",
        "description": [
            "N/query Module",
            "query.Component\n",
            "Object Description:\nOne component of the query definition. Each new component is created as a child to the previous component. All components exist as children to the query definition (query.Query).\nYou can think of a component as a building block; each new component builds on the previous component created. The last component created encapsulates the relationship between it and all of its parent components.\nThe query definition always contains at least one component. Queries with joins contain multiple components. The query definition (query.Query) contains a child query.Component object for each of the following:\nThe initial query definition: The initial query.Component object is called the root component. It encapsulates the initial query type passed to query.create(options). The root component is automatically created with the query.Query object and is a child of the query.Query object. The Query.root property contains a reference to the root component.\nThe first join: The second query.Component object is created with Query.autoJoin(options). It encapsulates the relationship between the initial query definition and the second query type. This relationship is determined by the join ID passed to Query.autoJoin(options) . The second query.Component object is a child of the root component.\nEach subsequent join: The third query.Component object is created with Component.autoJoin(options). All subsequent joins and their respective query.Component objects are also created with Component.autoJoin(options) . Each of these query.Component objects encapsulates the relationship between all previous query types and the new query type. This relationship is determined by the join ID passed to Component.autoJoin(options).\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Component\n"
        ]
    },
    "(N/query) Component.autoJoin(options)": {
        "prefix": "Component.autoJoin(options)",
        "body": [
            "${1:Component}.autoJoin({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Component.autoJoin()\n",
            "Method Description:\nCreates a join relationship.\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use Query.autoJoin(options) to create your first join (query.Component). Then use Component.autoJoin(options) to create each subsequent join (query.Component).\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.autoJoin(options)\n"
        ]
    },
    "(N/query) Component.createColumn(options)": {
        "prefix": "Component.createColumn(options)",
        "body": [
            "${1:Component}.createColumn({",
            "\tfieldId: ${2:string},",
            "\tformula: ${3:string},",
            "\ttype: ${4:string},",
            "\taggregate: ${5:string},",
            "\tgroupBy: ${6:boolean},",
            "\tlabel: ${7:string},",
            "\tcontext: {",
            "\t\tname: ${9:string},",
            "\t\tparams: ${10:Object},",
            "\t\tparams: ${11:number},",
            "\t",
            "})"
        ],
        "description": [
            "N/query Module",
            "Component.createColumn()\n",
            "Method Description:\nCreates a query result column based on the query.Component object.\nThe query.Column object is the equivalent of the search.Column object in the N/search Module. The query.Column object describes the field types (columns) that are displayed from the query results.\nTo create columns:\nUse Component.createColumn(options) to create columns on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options). Use this method in one of two ways:\nPass in an argument for the parameter options.fieldId.\nPass in an argument for the parameter options.formula. If you use this option, you can also use the optional parameter options.type.\nIf needed, use Query.createColumn(options) to create columns on the initial query definition created with query.create(options).\nAssign all created columns as array values to Query.columns. For an example, see Syntax.\nWhen you create a column, you can specify a field context. The field context determines how field values are displayed in the column. For example, you can specify that a column should display raw data (such as internal IDs), consolidated or converted amounts (such as currency totals), or user-friendly values (such as names). You can specify a field context in two ways:\nUse a context from the query.FieldContext enum directly as the value of the options.context parameter. For example:\nThis example is the simplest way to specify a field context that does not accept additional parameters. Because the options.context parameter is an Object, this example is equivalent to the following:\nUse a context from the query.FieldContext enum as the value of the options.context.name parameter, and specify additional parameters using the options.context.params parameter. For example:\nIn this release, only the query.FieldContext.CONVERTED context uses additional parameters. The supported parameters are currencyId and date. For the date parameter, you can pass a JavaScript Date object or query.RelativeDate object.\n",
            "Returns:\nquery.Column\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.createColumn(options)\n"
        ]
    },
    "(N/query) Component.createCondition(options)": {
        "prefix": "Component.createCondition(options)",
        "body": [
            "${1:Component}.createCondition({",
            "\tfieldId: ${2:string},",
            "\toperator: ${3:string*},",
            "\tvalues: ${4:string[] | number[] | boolean[] | Date[] | query.RelativeDate[] | query.Period[]},",
            "\tformula: ${5:string},",
            "\ttype: ${6:string},",
            "\taggregate: ${7:string}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Component.createCondition()\n",
            "Method Description:\nCreates a condition (query filter) based on the query.Component object.\nA condition narrows the query results. The query.Condition object acts in the same capacity as the search.Filter object in the N/search Module. The primary difference is that query.Condition objects can contain other query.Condition objects.\nTo create conditions:\nUse Component.createCondition(options) to create conditions on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options). Use this method in one of two ways:\nPass in arguments for the parameters options.fieldId, options.operator, and options.values. The combination of these arguments translates to <filter column><operator><field value> (for example, ‘city’ equals ‘Boston’).\nPass in an argument for the parameter options.formula. If you use this option, you can also use the optional parameter options.type.\nIf needed, use Query.createCondition(options) to create conditions on the initial query definition created with query.create(options).\nIf you have multiple conditions, use them to create a new nested condition with the methods Query.and(conditions), Query.or(conditions), and Query.not(condition).\nAssign your simple or nested condition to Query.condition. For an example, see Syntax.\n",
            "Returns:\nquery.Condition\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.createCondition(options)\n"
        ]
    },
    "(N/query) Component.createSort(options)": {
        "prefix": "Component.createSort(options)",
        "body": [
            "${1:Component}.createSort({",
            "\tcolumn: ${2:query.Column*},",
            "\tascending: ${3:boolean},",
            "\tcaseSensitive: ${4:boolean},",
            "\tlocale: ${5:string},",
            "\tnullsLast: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Component.createSort()\n",
            "Method Description:\nCreates a sort based on the query.Component object. The query.Sort object describes a sort that is placed on a particular query result column or condition.\nTo create a sort:\nUse Component.createSort(options) to create a sort based on a join relationship created with Query.autoJoin(options) or Component.autoJoin(options).\nUse Query.createSort(options) to create a sort based on the initial query definition created with query.create(options).\nAssign all created sorts as array values to Query.sort. For an example, see Syntax.\n",
            "Returns:\nquery.Sort\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.createSort(options)\n"
        ]
    },
    "(N/query) Component.join(options)": {
        "prefix": "Component.join(options)",
        "body": [
            "${1:Component}.join({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Component.join()\n",
            "Method Description:\nCreates a join relationship. This method is an alias to Component.autoJoin(options).\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use Query.autoJoin(options) to create your first join (query.Component). Then use Component.join(options) to create each subsequent join (query.Component).\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.join(options)\n"
        ]
    },
    "(N/query) Component.joinFrom(options)": {
        "prefix": "Component.joinFrom(options)",
        "body": [
            "${1:Component}.joinFrom({",
            "\tfieldId: ${2:string*},",
            "\tsource: ${3:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Component.joinFrom()\n",
            "Method Description:\nCreates an explicit directional join relationship from another component to this component (an inverse join). This method sets the Component.source property on the returned query.Component object.\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use this method to create explicit directional joins from other components to this component.\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.joinFrom(options)\n"
        ]
    },
    "(N/query) Component.joinTo(options)": {
        "prefix": "Component.joinTo(options)",
        "body": [
            "${1:Component}.joinTo({",
            "\tfieldId: ${2:string*},",
            "\ttarget: ${3:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Component.joinTo()\n",
            "Method Description:\nCreates an explicit directional join relationship to another component from this component (a polymorphic join). This method sets the Component.target property on the returned query.Component object.\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use this method to create explicit directional joins to other components from this component.\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.joinTo(options)\n"
        ]
    },
    "(N/query) Component.child": {
        "prefix": "Component.child",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Component.child for more information.",
        "description": [
            "N/query Module",
            "Component.child\n",
            "Property Description:\nA reference to children of this component. The value of this property is an object of key/value pairs. Each key is the name of a child component. Each respective value refers to the corresponding query.Component object.\nThe object values are set during the execution of Query.autoJoin(options) and Component.autoJoin(options). The order of the key/value pairs reflects the parent/child hierarchy.\n",
            "Type:\nObject (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.child\n"
        ]
    },
    "(N/query) Component.parent": {
        "prefix": "Component.parent",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Component.parent for more information.",
        "description": [
            "N/query Module",
            "Component.parent\n",
            "Property Description:\nA reference to the parent query.Component object of this component.\nThis property is set during the execution of Query.autoJoin(options) or Component.autoJoin(options).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.parent\n"
        ]
    },
    "(N/query) Component.source": {
        "prefix": "Component.source",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Component.source for more information.",
        "description": [
            "N/query Module",
            "Component.source\n",
            "Property Description:\nThe query type of the component joined to this component. This property can also be described as the inverse relationship of this component.\nThis property is set during the execution of Query.joinFrom(options) and Component.joinFrom(options).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.source\n"
        ]
    },
    "(N/query) Component.target": {
        "prefix": "Component.target",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Component.target for more information.",
        "description": [
            "N/query Module",
            "Component.target\n",
            "Property Description:\nThe query type of this component. This property can also be described as the polymorphic relationship of this component.\nThis property is set during the execution of Query.joinTo(options) and Component.joinTo(options).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.target\n"
        ]
    },
    "(N/query) Component.type": {
        "prefix": "Component.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Component.type for more information.",
        "description": [
            "N/query Module",
            "Component.type\n",
            "Property Description:\nThe query type of this component.\nThis property is set during the execution of Query.autoJoin(options) and Component.autoJoin(options).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Component\n",
            "Sibling Object Members:\nComponent Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Component.type\n"
        ]
    },
    "(N/query) query.Condition": {
        "prefix": "query.Condition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Condition for more information.",
        "description": [
            "N/query Module",
            "query.Condition\n",
            "Object Description:\nA condition that narrows the query results. The query.Condition object acts in the same capacity as the search.Filter object in the N/search Module. The primary difference is that query.Condition objects can contain other query.Condition objects.\nTo create conditions:\nUse Query.createCondition(options) to create conditions for the initial query definition created with query.create(options).\nUse Component.createCondition(options) to create conditions for the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nIf you have multiple conditions, use them to create a new nested condition with the methods Query.and(conditions), Query.or(conditions), and Query.not(condition).\nAssign your simple or nested condition to Query.condition. For an example, see Syntax.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Condition\n"
        ]
    },
    "(N/query) Condition.aggregate": {
        "prefix": "Condition.aggregate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.aggregate for more information.",
        "description": [
            "N/query Module",
            "Condition.aggregate\n",
            "Property Description:\nAn aggregate function that is performed on the condition. An aggregate function performs a calculation on the condition values and returns a single value.\nThis property is set during the execution of Query.createCondition(options) or Component.createCondition(options).\nThis property is not applicable to parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.aggregate\n"
        ]
    },
    "(N/query) Condition.children": {
        "prefix": "Condition.children",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.children for more information.",
        "description": [
            "N/query Module",
            "Condition.children\n",
            "Property Description:\nAn array of child conditions used to create the parent condition.\nThis property is applicable to only parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nquery.Condition[] (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.children\n"
        ]
    },
    "(N/query) Condition.component": {
        "prefix": "Condition.component",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.component for more information.",
        "description": [
            "N/query Module",
            "Condition.component\n",
            "Property Description:\nThe component used to created the condition\nThis property is set during the execution of Query.createCondition(options) and Component.createCondition(options).\nThis property is not applicable to parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nquery.Component (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.component\n"
        ]
    },
    "(N/query) Condition.fieldId": {
        "prefix": "Condition.fieldId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.fieldId for more information.",
        "description": [
            "N/query Module",
            "Condition.fieldId\n",
            "Property Description:\nThe name of the condition.\nThis property is set during the execution of Query.createCondition(options) and Component.createCondition(options).\nThis property is not applicable to parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.fieldId\n"
        ]
    },
    "(N/query) Condition.formula": {
        "prefix": "Condition.formula",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.formula for more information.",
        "description": [
            "N/query Module",
            "Condition.formula\n",
            "Property Description:\nThe formula used to create the condition.\nThis property is set during the execution of Query.createCondition(options) and Component.createCondition(options).\nFor more information on formulas, see Formulas in Search and SQL Expressions.\nThis property is not applicable to parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.formula\n"
        ]
    },
    "(N/query) Condition.operator": {
        "prefix": "Condition.operator",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.operator for more information.",
        "description": [
            "N/query Module",
            "Condition.operator\n",
            "Property Description:\nThe name of the operator used to create the condition.\nThis property is set during the execution of Query.createCondition(options) and Component.createCondition(options).\nThis property is not applicable to parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.operator\n"
        ]
    },
    "(N/query) Condition.type": {
        "prefix": "Condition.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.type for more information.",
        "description": [
            "N/query Module",
            "Condition.type\n",
            "Property Description:\nThe return type of the formula used to create the condition.\nThis property is set during the execution of Query.createCondition(options) or Component.createCondition(options).\nFor more information on formulas, see Formulas in Search and SQL Expressions.\nThis property is not applicable to parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.type\n"
        ]
    },
    "(N/query) Condition.values": {
        "prefix": "Condition.values",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Condition.values for more information.",
        "description": [
            "N/query Module",
            "Condition.values\n",
            "Property Description:\nAn array of values used by an operator to create the condition.\nThis property is set by passing in values for options.fieldId, options.operator and options.values during the execution of Query.createCondition(options) or Component.createCondition(options).\nThis property is not applicable to parent conditions created with the execution of Query.and(conditions), Query.or(conditions), or Query.not(condition).\n",
            "Type:\nstring[] | number[] | boolean[] | Date[] | query.RelativeDate[] | query.Period (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Condition\n",
            "Sibling Object Members:\nCondition Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Condition.values\n"
        ]
    },
    "(N/query) query.Page": {
        "prefix": "query.Page",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Page for more information.",
        "description": [
            "N/query Module",
            "query.Page\n",
            "Object Description:\nOne page of the paged query results.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nPage Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Page\n"
        ]
    },
    "(N/query) Page.data": {
        "prefix": "Page.data",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.data for more information.",
        "description": [
            "N/query Module",
            "Page.data\n",
            "Property Description:\nThe query results contained in this page.\n",
            "Type:\nquery.ResultSet (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Page\n",
            "Sibling Object Members:\nPage Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.data\n"
        ]
    },
    "(N/query) Page.isFirst": {
        "prefix": "Page.isFirst",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.isFirst for more information.",
        "description": [
            "N/query Module",
            "Page.isFirst\n",
            "Property Description:\nWhether the page is the first of the paged query results.\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Page\n",
            "Sibling Object Members:\nPage Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.isFirst\n"
        ]
    },
    "(N/query) Page.isLast": {
        "prefix": "Page.isLast",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.isLast for more information.",
        "description": [
            "N/query Module",
            "Page.isLast\n",
            "Property Description:\nWhether the page is the last of the paged query results.\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Page\n",
            "Sibling Object Members:\nPage Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.isLast\n"
        ]
    },
    "(N/query) Page.pageRange": {
        "prefix": "Page.pageRange",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.pageRange for more information.",
        "description": [
            "N/query Module",
            "Page.pageRange\n",
            "Property Description:\nThe range of query results for this page.\n",
            "Type:\nquery.PageRange (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Page\n",
            "Sibling Object Members:\nPage Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.pageRange\n"
        ]
    },
    "(N/query) Page.pagedData": {
        "prefix": "Page.pagedData",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.pagedData for more information.",
        "description": [
            "N/query Module",
            "Page.pagedData\n",
            "Property Description:\nThe set of paged query results that this page is from.\n",
            "Type:\nquery.PagedData (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Page\n",
            "Sibling Object Members:\nPage Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.pagedData\n"
        ]
    },
    "(N/query) query.PagedData": {
        "prefix": "query.PagedData",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.PagedData for more information.",
        "description": [
            "N/query Module",
            "query.PagedData\n",
            "Object Description:\nA set of paged query results. This object also contains information about the set of paged results it encapsulates.\nUse Query.runPaged() or Query.runPaged.promise() to create this object.\nFor paged queries, the maximum number of result rows per page is 1000. The minimum number of result rows per page is 5, except for the last page in the result set (because the last page may include fewer than 5 results).\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nPagedData Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.PagedData\n"
        ]
    },
    "(N/query) PagedData.iterator()": {
        "prefix": "PagedData.iterator()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.iterator() for more information.",
        "description": [
            "N/query Module",
            "PagedData.iterator()\n",
            "Method Description:\nStandard SuiteScript 2.0 object for iterating through results\n",
            "Returns:\nIterator object\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.PagedData\n",
            "Sibling Object Members:\nPagedData Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.iterator()\n"
        ]
    },
    "(N/query) PagedData.count": {
        "prefix": "PagedData.count",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.count for more information.",
        "description": [
            "N/query Module",
            "PagedData.count\n",
            "Property Description:\nThe total number of paged query result rows.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.PagedData\n",
            "Sibling Object Members:\nPagedData Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.count\n"
        ]
    },
    "(N/query) PagedData.pageRanges": {
        "prefix": "PagedData.pageRanges",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageRanges for more information.",
        "description": [
            "N/query Module",
            "PagedData.pageRanges\n",
            "Property Description:\nAn array of page ranges for the paged query results.\n",
            "Type:\nquery.PageRange[]\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.PagedData\n",
            "Sibling Object Members:\nPagedData Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageRanges\n"
        ]
    },
    "(N/query) PagedData.pageSize": {
        "prefix": "PagedData.pageSize",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageSize for more information.",
        "description": [
            "N/query Module",
            "PagedData.pageSize\n",
            "Property Description:\nThe number of query result rows per page.\nFor paged queries, the maximum number of result rows per page is 1000. The minimum number of result rows per page is 5, except for the last page in the result set (because the last page may include fewer than 5 results).\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.PagedData\n",
            "Sibling Object Members:\nPagedData Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageSize\n"
        ]
    },
    "(N/query) query.PageRange": {
        "prefix": "query.PageRange",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.PageRange for more information.",
        "description": [
            "N/query Module",
            "query.PageRange\n",
            "Object Description:\nThe range of query results for a page.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nPageRange Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.PageRange\n"
        ]
    },
    "(N/query) PageRange.index": {
        "prefix": "PageRange.index",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.index for more information.",
        "description": [
            "N/query Module",
            "PageRange.index\n",
            "Property Description:\nThe array index for this page range.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.PageRange\n",
            "Sibling Object Members:\nPageRange Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.index\n"
        ]
    },
    "(N/query) PageRange.size": {
        "prefix": "PageRange.size",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.size for more information.",
        "description": [
            "N/query Module",
            "PageRange.size\n",
            "Property Description:\nThe number of query result rows in this page range.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.PageRange\n",
            "Sibling Object Members:\nPageRange Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.size\n"
        ]
    },
    "(N/query) query.Period": {
        "prefix": "query.Period",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Period for more information.",
        "description": [
            "N/query Module",
            "query.Period\n",
            "Object Description:\nA period of time to use in query conditions.\nUse query.createPeriod(options) to create this object. After you create this object, you can use it in the values parameter of Query.createCondition(options) or Component.createCondition(options).\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nPeriod Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Period\n"
        ]
    },
    "(N/query) Period.adjustment": {
        "prefix": "Period.adjustment",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Period.adjustment for more information.",
        "description": [
            "N/query Module",
            "Period.adjustment\n",
            "Property Description:\nThe adjustment of the period.\nThis property uses values from the query.PeriodAdjustment enum. If you create a period using query.createPeriod(options) and do not specify a value for the options.adjustment parameter, the default value of this property is query.PeriodAdjustment.NOT_LAST.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Period\n",
            "Sibling Object Members:\nPeriod Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Period.adjustment\n"
        ]
    },
    "(N/query) Period.code": {
        "prefix": "Period.code",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Period.code for more information.",
        "description": [
            "N/query Module",
            "Period.code\n",
            "Property Description:\nThe code of the period.\nThis property uses values from the query.PeriodCode enum.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Period\n",
            "Sibling Object Members:\nPeriod Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Period.code\n"
        ]
    },
    "(N/query) Period.type": {
        "prefix": "Period.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Period.type for more information.",
        "description": [
            "N/query Module",
            "Period.type\n",
            "Property Description:\nThe type of the period.\nThis property uses values from the query.PeriodType enum. If you create a period using query.createPeriod(options) and do not specify a value for the options.type parameter, the default value of this property is query.PeriodType.START.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Period\n",
            "Sibling Object Members:\nPeriod Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Period.type\n"
        ]
    },
    "(N/query) query.Query": {
        "prefix": "query.Query",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Query for more information.",
        "description": [
            "N/query Module",
            "query.Query\n",
            "Object Description:\nThe query.Query object encapsulates the query definition. To create a query with the N/query module:\nUse the query.create(options) method to create your query definition (this object). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use Query.autoJoin(options) to create your first join.\nThen use either Query.autoJoin(options) or Component.autoJoin(options) to create subsequent joins.\nThe query definition always contains at least one query.Component object. The query.Component object encapsulates one component of the query definition. Each new component is created as a child to the previous component, and all components exist as children to the query definition.\nYou can think of a component as a building block; each new component builds on the previous component created. The last component created encapsulates the relationship between it and all of its parent components.\nQueries with joins contain multiple components. The query definition contains a child query.Component object for each of the following:\nThe initial query definition: The initial query.Component object is called the root component. It encapsulates the initial query type passed to query.create(options). The root component is automatically created with the initial query definition and is a child to the query.Query object. The Query.root property contains a reference to the root component.\nThe first join: The second query.Component object is created with Query.autoJoin(options). It encapsulates the relationship between the initial query definition and the second query type. This relationship is determined by the field ID passed to Query.autoJoin(options). The second query.Component object is a child to the root component.\nEach subsequent join: The third query.Component object is created with Query.autoJoin(options) or Component.autoJoin(options). All subsequent joins are also created with Query.autoJoin(options) or Component.autoJoin(options). Each of these query.Component objects encapsulates the relationship between all previous query types and the new query type. This relationship is determined by the field ID passed to Component.autoJoin(options).\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Query\n"
        ]
    },
    "(N/query) Query.and(conditions)": {
        "prefix": "Query.and(conditions)",
        "body": [
            "${1:Query}.and(conditions){",
            "\tcondition 1 — n: ${2:query.Condition[]*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.and(conditions)\n",
            "Method Description:\nCreates a new condition (a query.Condition object) that corresponds to a logical conjunction (AND) of the arguments passed to the method. The arguments must be one or more query.Condition objects.\nA condition narrows the query results. The query.Condition object acts in the same capacity as the search.Filter object in the N/search Module. The primary difference is that query.Condition objects can contain other query.Condition objects.\nTo create conditions:\nUse Query.createCondition(options) to create conditions for the initial query definition created with query.create(options).\nUse Component.createCondition(options) to create conditions for the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nIf you have multiple conditions, use them to create a new parent condition with the methods Query.and(), Query.or(conditions), and Query.not(condition).\nAssign your parent condition to Query.condition. For an example, see Syntax.\n",
            "Returns:\nquery.Condition\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.and(conditions)\n"
        ]
    },
    "(N/query) Query.autoJoin(options)": {
        "prefix": "Query.autoJoin(options)",
        "body": [
            "${1:Query}.autoJoin({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.autoJoin()\n",
            "Method Description:\nCreates a join relationship.\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use Query.autoJoin(options) to create your first join (query.Component). Then use Component.autoJoin(options) to create each subsequent join (query.Component).\nThis method is a shortcut for the chained Query.root and Component.autoJoin(options): Query.root.join(options). The Query.root property references the root component, which is a query.Component object.\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.autoJoin(options)\n"
        ]
    },
    "(N/query) Query.createColumn(options)": {
        "prefix": "Query.createColumn(options)",
        "body": [
            "${1:Query}.createColumn({",
            "\tfieldId: ${2:string},",
            "\tformula: ${3:string},",
            "\ttype: ${4:string},",
            "\taggregate: ${5:string},",
            "\talias: ${6:string},",
            "\tgroupBy: ${7:boolean},",
            "\tlabel: ${8:string},",
            "\tcontext: {",
            "\t\tname: ${10:string},",
            "\t\tparams: ${11:Object},",
            "\t\tparams: ${12:number},",
            "\t",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.createColumn()\n",
            "Method Description:\nCreates a query result column based on the query.Query object.\nThe query.Column object is the equivalent of the search.Column object in the N/search Module. The query.Column object describes the field types (columns) that are displayed from the query results.\nTo create columns:\nUse Query.createColumn(options) to create columns on the initial query definition created with query.create(options). Use this method in one of two ways:\nPass in an argument for the parameter options.fieldId.\nPass in an argument for the parameter options.formula. If you use this option, you can also use the optional parameter options.type.\nIf needed, use Component.createColumn(options) to create conditions on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nAssign all created columns as array values to Query.columns. For an example, see Syntax.\nWhen you create a column, you can specify a field context. The field context determines how field values are displayed in the column. For example, you can specify that a column should display raw data (such as internal IDs), consolidated or converted amounts (such as currency totals), or user-friendly values (such as names). You can specify a field context in two ways:\nUse a context from the query.FieldContext enum directly as the value of the options.context parameter. For example:\nThis example is the simplest way to specify a field context that does not accept additional parameters. Because the options.context parameter is an Object, this example is equivalent to the following:\nUse a context from the query.FieldContext enum as the value of the options.context.name parameter, and specify additional parameters using the options.context.params parameter. For example:\nIn this example, the created column displays the value of the netamount currency field using the exchange rate that was in effect on January 1, 2019 for the currency with an ID of 4.\nIn this release, only the query.FieldContext.CONVERTED context uses additional parameters. The supported parameters are currencyId and date. For the date parameter, you can pass a JavaScript Date object or query.RelativeDate object. If you pass a query.RelativeDate object using a value from the query.RelativeDateRange enum, use the start property or end property to specify the exact date of the exchange rate. For example, to use the exchange rate that was in effect at the beginning of the last fiscal quarter:\nIf you use only the query.RelativeDate object from the query.RelativeDateRange enum and do not specify either the start or end properties, the end date of the relative date range is used. This behavior means that the following two date properties are equivalent:\ndate: query.RelativeDateRange.LAST_FISCAL_QUARTER\ndate: query.RelativeDateRange.LAST_FISCAL_QUARTER.end\nThis method is a shortcut for the chained Query.root and Component.createColumn(options): Query.root.createColumn(options). The Query.root property references the root component, which is a query.Component object.\n",
            "Returns:\nquery.Column\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.createColumn(options)\n"
        ]
    },
    "(N/query) Query.createCondition(options)": {
        "prefix": "Query.createCondition(options)",
        "body": [
            "${1:Query}.createCondition({",
            "\tfieldId: ${2:string},",
            "\toperator: ${3:string*},",
            "\tvalues: ${4:string[] | number[] | boolean[] | Date[] | query.RelativeDate[] | query.Period[]},",
            "\tformula: ${5:string},",
            "\ttype: ${6:string},",
            "\taggregate: ${7:string}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.createCondition()\n",
            "Method Description:\nCreates a condition (query filter) based on the query.Query object.\nA condition narrows the query results. The query.Condition object acts in the same capacity as the search.Filter object in the N/search Module. The primary difference is that query.Condition objects can contain other query.Condition objects.\nTo create conditions:\nUse Query.createCondition(options) to create conditions on the initial query definition created with query.create(options). Use this method in one of two ways:\nPass in arguments for the parameters options.fieldId, options.operator, and options.values. The combination of these arguments translates to <filter column><operator><field value> (for example, ‘city’ equals ‘Boston’).\nPass in an argument for the parameter options.formula. If you use this option, you can also use the optional parameter options.type.\nIf needed, use Component.createCondition(options) to create conditions on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nIf you have multiple conditions, use them to create a new nested condition with the methods Query.and(conditions), Query.or(conditions), and Query.not(condition).\nAssign your simple or nested condition to Query.condition. For an example, see Syntax.\nThis method is a shortcut for the chained Query.root and Component.createCondition(options): Query.root.createCondition(options). The Query.root property references the root component, which is a query.Component object.\n",
            "Returns:\nquery.Condition\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.createCondition(options)\n"
        ]
    },
    "(N/query) Query.createSort(options)": {
        "prefix": "Query.createSort(options)",
        "body": [
            "${1:Query}.createSort({",
            "\tcolumn: ${2:query.Column*},",
            "\tascending: ${3:boolean},",
            "\tcaseSensitive: ${4:boolean},",
            "\tlocale: ${5:string},",
            "\tnullsLast: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.createSort()\n",
            "Method Description:\nCreates a sort based on the query.Query object. The query.Sort object describes a sort that is placed on a particular query result column.\nTo create a sort:\nUse Search.createSort(options) to create a sort based on the initial query definition created with query.create(options).\nUse Component.createSort(options) to create a sort based on a join relationship created with Query.autoJoin(options) or Component.autoJoin(options).\nAssign all created sorts as array values to Query.sort. For an example, see Syntax.\nThis method is a shortcut for the chained Query.root and Component.createSort(options): Query.root.createSort(options). The Query.root property references the root component, which is a query.Component object.\n",
            "Returns:\nquery.Sort\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.createSort(options)\n"
        ]
    },
    "(N/query) Query.join(options)": {
        "prefix": "Query.join(options)",
        "body": [
            "${1:Query}.join({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.join()\n",
            "Method Description:\nCreates a join relationship.\nThis method is an alias to Query.autoJoin(options). Use Query.autoJoin(options) instead of this method to create simple joins. Use Query.joinFrom(options) and Query.joinTo(options) to create explicit directional joins.\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use Query.join(options) to create your first join (query.Component). Then use Component.autoJoin(options) to create each subsequent join (query.Component).\nThis method is a shortcut for the chained Query.root and Component.join(options): Query.root.join(options). The Query.root property references the root component, which is a query.Component object.\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.join(options)\n"
        ]
    },
    "(N/query) Query.joinFrom(options)": {
        "prefix": "Query.joinFrom(options)",
        "body": [
            "${1:Query}.joinFrom({",
            "\tfieldId: ${2:string*},",
            "\tsource: ${3:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.joinFrom()\n",
            "Method Description:\nCreates an explicit directional join relationship from another component to this component (an inverse join). This method sets the Component.source property on the returned query.Component object.\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use this method to create your first join as an explicit directional join from another component to this component.\nThis method is a shortcut for the chained Query.root and Component.joinFrom(options): Query.root.joinFrom(options). The Query.root property references the root component, which is a query.Component object.\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.joinFrom(options)\n"
        ]
    },
    "(N/query) Query.joinTo(options)": {
        "prefix": "Query.joinTo(options)",
        "body": [
            "${1:Query}.joinTo({",
            "\tfieldId: ${2:string*},",
            "\ttarget: ${3:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.joinTo()\n",
            "Method Description:\nCreates an explicit directional join relationship to another component from this component (a polymorphic join). This method sets the Component.target property on the returned query.Component object.\nUse the method query.create(options) to create your initial query definition (query.Query). The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use this method to create your first join as an explicit directional join to another component from this component.\nThis method is a shortcut for the chained Query.root and Component.joinTo(options): Query.root.autoJoin(options). The Query.root property references the root component, which is a query.Component object.\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\n",
            "Returns:\nquery.Component\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.joinTo(options)\n"
        ]
    },
    "(N/query) Query.not(condition)": {
        "prefix": "Query.not(condition)",
        "body": [
            "${1:Query}.not(condition){",
            "\tcondition: ${2:query.Condition*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.not(condition)\n",
            "Method Description:\nCreates a new condition (a query.Condition object) that corresponds to a logical negation (NOT) of the argument passed to the method. The argument must be a query.Condition object.\nA condition narrows the query results. The query.Condition object acts in the same capacity as the search.Filter object in the N/search Module. The primary difference is that query.Condition objects can contain other query.Condition objects.\nTo create conditions:\nUse Query.createCondition(options) to create conditions for the initial query definition created with query.create(options).\nUse Component.createCondition(options) to create conditions for the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nIf you have multiple conditions, use them to create a new parent condition with the methods Query.and(conditions), Query.or(conditions), and Query.not().\nAssign your parent condition to Query.condition. For an example, see Syntax.\n",
            "Returns:\nquery.Condition\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.not(condition)\n"
        ]
    },
    "(N/query) Query.or(conditions)": {
        "prefix": "Query.or(conditions)",
        "body": [
            "${1:Query}.or(conditions){",
            "\tcondition 1 — n: ${2:query.Condition[]*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.or(conditions)\n",
            "Method Description:\nCreates a new condition (a query.Condition object) that corresponds to a logical disjunction (OR) of the arguments passed to the method. The arguments must be one or more query.Condition objects.\nA condition narrows the query results. The query.Condition object acts in the same capacity as the search.Filter object in the N/search Module. The primary difference is that query.Condition objects can contain other query.Condition objects.\nTo create conditions:\nUse Query.createCondition(options) to create conditions for the initial query definition created with query.create(options).\nUse Component.createCondition(options) to create conditions for the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nIf you have multiple conditions, use them to create a new parent condition with the methods Query.and(conditions), Query.or(), and Query.not(condition).\nAssign your parent condition to Query.condition. For an example, see Syntax.\n",
            "Returns:\nquery.Condition\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.or(conditions)\n"
        ]
    },
    "(N/query) Query.run()": {
        "prefix": "Query.run()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.run() for more information.",
        "description": [
            "N/query Module",
            "Query.run()\n",
            "Method Description:\nExecutes the query and returns the query result set.\nThis method returns a maximum of 5000 results in the query result set. If a query matches more than 5000 results, you must use Query.runPaged() or Query.runPaged.promise() to retrieve the full set of results.\n",
            "Returns:\nquery.ResultSet\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.run()\n"
        ]
    },
    "(N/query) Query.run.promise()": {
        "prefix": "Query.run.promise()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.run.promise() for more information.",
        "description": [
            "N/query Module",
            "Query.run.promise()\n",
            "Method Description:\nExecutes the query asynchronously and returns the query result set.\nThe parameters and errors thrown for this method are the same as those for Query.run(). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.run.promise()\n"
        ]
    },
    "(N/query) Query.runPaged()": {
        "prefix": "Query.runPaged()",
        "body": [
            "${1:Query}.runPaged(){",
            "\tpageSize: ${2:string}",
            "})"
        ],
        "description": [
            "N/query Module",
            "Query.runPaged()\n",
            "Method Description:\nExecutes the query and returns a query.PagedData object that represents the paged query results. You can iterate over this object to obtain each page of query results.\nFor paged queries, the maximum number of result rows per page is 1000. The minimum number of result rows per page is 5, except for the last page in the result set (because the last page may include fewer than 5 results).\n",
            "Returns:\nquery.PagedData\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.runPaged()\n"
        ]
    },
    "(N/query) Query.runPaged.promise()": {
        "prefix": "Query.runPaged.promise()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.runPaged.promise() for more information.",
        "description": [
            "N/query Module",
            "Query.runPaged.promise()\n",
            "Method Description:\nExecutes the query asynchronously and returns a set of paged results.\nThe parameters and errors thrown for this method are the same as those for Query.runPaged(). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.runPaged.promise()\n"
        ]
    },
    "(N/query) Query.toSuiteQL()": {
        "prefix": "Query.toSuiteQL()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.toSuiteQL() for more information.",
        "description": [
            "N/query Module",
            "Query.toSuiteQL()\n",
            "Method Description:\nConverts this query.Query object to its corresponding SuiteQL representation.\nThis method returns a query.SuiteQL object that represents the same query as the original query.Query object. This object includes the SuiteQL.columns, SuiteQL.params, SuiteQL.query, and SuiteQL.type properties. You can run the query using SuiteQL.run(), or you can run the query as a paged query using SuiteQL.runPaged(options).\nThe resulting SuiteQL query string (contained in the SuiteQL.query property) does not include any aliases you set on query result columns in the original query.Query object. For more information about aliases, see Column.alias.\nFor more information and examples of using SuiteQL in the N/query module, see SuiteQL in the N/query Module. For more information about SuiteQL in general, see SuiteQL.\n",
            "Returns:\nquery.SuiteQL\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.toSuiteQL()\n"
        ]
    },
    "(N/query) Query.child": {
        "prefix": "Query.child",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.child for more information.",
        "description": [
            "N/query Module",
            "Query.child\n",
            "Property Description:\nA reference to children of this component. The value of this property is an object of key/value pairs. Each key is the name of a child component. Each respective value is the corresponding query.Component object.\nThe object values are set with the execution of Query.autoJoin(options) and Component.autoJoin(options). The order of the key/value pairs reflects the parent/child hierarchy.\n",
            "Type:\nObject\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.child\n"
        ]
    },
    "(N/query) Query.columns": {
        "prefix": "Query.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.columns for more information.",
        "description": [
            "N/query Module",
            "Query.columns\n",
            "Property Description:\nAn array of result columns (query.Column objects) returned from the query.\nThe query.Column object is the equivalent of the search.Column object in the N/search Module. The query.Column object describes a field type (column) that is returned from the query results.\nTo create columns:\nUse Query.createColumn(options) to create conditions on the initial query definition created with query.create(options).\nUse Component.createColumn(options) to create conditions on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nAssign all created columns as array values to Query.columns. For an example, see Syntax.\n",
            "Type:\nquery.Column[]\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.columns\n"
        ]
    },
    "(N/query) Query.condition": {
        "prefix": "Query.condition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.condition for more information.",
        "description": [
            "N/query Module",
            "Query.condition\n",
            "Property Description:\nThe simple or nested condition (a query.Condition object) that narrows the query results.\nThe query.Condition object acts in the same capacity as the search.Filter object in the N/search Module. The primary difference is that query.Condition objects can contain other query.Condition objects.\nTo create conditions:\nUse Query.createCondition(options) to create conditions for the initial query definition created with query.create(options).\nUse Component.createCondition(options) to create conditions for the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).\nIf you have multiple conditions, use them to create a new nested condition with the methods Query.and(conditions), Query.or(conditions), and Query.not(condition).\nAssign your simple or nested condition to Query.condition. For an example, see Syntax.\n",
            "Type:\nquery.Condition\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.condition\n"
        ]
    },
    "(N/query) Query.id": {
        "prefix": "Query.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.id for more information.",
        "description": [
            "N/query Module",
            "Query.id\n",
            "Property Description:\nThe ID of the query definition.\nThis property has a value only for existing queries that are loaded using query.load(options). If you create a query using query.create(options) but do not save it, this property is null.\nThe N/query module lets you create and run queries using the SuiteAnalytics Workbook query engine. You can use the N/query module to load and delete existing queries, but you cannot save queries. You can save queries using the SuiteAnalytics Workbook interface. For more information, see Navigating SuiteAnalytics Workbook.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.id\n"
        ]
    },
    "(N/query) Query.name": {
        "prefix": "Query.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.name for more information.",
        "description": [
            "N/query Module",
            "Query.name\n",
            "Property Description:\nThe name of the query definition.\nThis property has a value only for existing queries that are loaded using query.load(options). If you create a query using query.create(options) but do not save it, this property is null.\nThe N/query module lets you create and run queries using the SuiteAnalytics Workbook query engine. You can use the N/query module to load and delete existing queries, but you cannot save queries. You can save queries using the SuiteAnalytics Workbook interface. For more information, see Navigating SuiteAnalytics Workbook.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.name\n"
        ]
    },
    "(N/query) Query.root": {
        "prefix": "Query.root",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.root for more information.",
        "description": [
            "N/query Module",
            "Query.root\n",
            "Property Description:\nThe root component of the query definition.\nThe initial query.Component object is called the root component. It encapsulates the initial query type passed to query.create(options). The root component is automatically created with the query.Query object and is a child of the query.Query object.\n",
            "Type:\nquery.Component (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.root\n"
        ]
    },
    "(N/query) Query.sort": {
        "prefix": "Query.sort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.sort for more information.",
        "description": [
            "N/query Module",
            "Query.sort\n",
            "Property Description:\nAn array of query.Sort objects used for sorting.\nThis object encapsulates a sort based on the query.Query or query.Component object. The query.Sort object describes a sort that is placed on a particular query result column.\nTo create a sort:\nUse Query.createSort(options) to create a sort based on the initial query definition created with query.create(options).\nUse Component.createSort(options) to create a sort based on a join relationship created with Query.autoJoin(options) or Component.autoJoin(options).\nAssign all created sorts as array values to Query.sort. For an example, see Syntax.\n",
            "Type:\nquery.Sort[]\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.sort\n"
        ]
    },
    "(N/query) Query.type": {
        "prefix": "Query.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Query.type for more information.",
        "description": [
            "N/query Module",
            "Query.type\n",
            "Property Description:\nThe initial query type of the query definition.\nThis property is set during the execution of query.create(options).\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Query\n",
            "Sibling Object Members:\nQuery Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Query.type\n"
        ]
    },
    "(N/query) query.RelativeDate": {
        "prefix": "query.RelativeDate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.RelativeDate for more information.",
        "description": [
            "N/query Module",
            "query.RelativeDate\n",
            "Object Description:\nA relative date to use in query conditions.\nUse query.createRelativeDate(options) to create this object. After you create this object, you can use it in the values parameter of Query.createCondition(options) or Component.createCondition(options).\nThis object represents a specific moment in time, and you can use it to create query conditions using operators from the query.Operator enum, such as query.Operator.AFTER, query.Operator.BEFORE, and query.Operator.WITHIN. For more information about relative dates, see Relative Dates in the N/query Module.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nRelativeDate Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.RelativeDate\n"
        ]
    },
    "(N/query) RelativeDate.dateId": {
        "prefix": "RelativeDate.dateId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.dateId for more information.",
        "description": [
            "N/query Module",
            "RelativeDate.dateId\n",
            "Property Description:\nThe date ID of the relative date.\nFor relative dates that you create using query.createRelativeDate(options), the value of this property is set when that method is executed. For relative dates that are included in the query.RelativeDateRange enum, the value of this property is always available (for example, query.RelativeDateRange.YESTERDAY.dateId).\nThis property uses values from the query.DateId enum.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.RelativeDate\n",
            "Sibling Object Members:\nRelativeDate Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.dateId\n"
        ]
    },
    "(N/query) RelativeDate.end": {
        "prefix": "RelativeDate.end",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.end for more information.",
        "description": [
            "N/query Module",
            "RelativeDate.end\n",
            "Property Description:\nThe end of the relative date.\nFor relative dates that you create using query.createRelativeDate(options), the value of this property is set when that method is executed. For relative date ranges that are included in the query.RelativeDateRange enum, the value of this property is always available (for example, query.RelativeDateRange.YESTERDAY.end).\n",
            "Type:\nObject (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.RelativeDate\n",
            "Sibling Object Members:\nRelativeDate Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.end\n"
        ]
    },
    "(N/query) RelativeDate.interval": {
        "prefix": "RelativeDate.interval",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.interval for more information.",
        "description": [
            "N/query Module",
            "RelativeDate.interval\n",
            "Property Description:\nThe interval that the relative date represents.\nFor relative dates that you create using query.createRelativeDate(options), the value of this property is set when that method is executed. For relative date ranges that are included in the query.RelativeDateRange enum, the value of this property is always available (for example, query.RelativeDateRange.YESTERDAY.interval).\nDo not use this property explicitly in your scripts. It is available so you can see the exact date interval that is used with the query.Operator.WITHIN and query.Operator.WITHIN_NOT operators in query conditions.\n",
            "Type:\nObject (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.RelativeDate\n",
            "Sibling Object Members:\nRelativeDate Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.interval\n"
        ]
    },
    "(N/query) RelativeDate.isRange": {
        "prefix": "RelativeDate.isRange",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.isRange for more information.",
        "description": [
            "N/query Module",
            "RelativeDate.isRange\n",
            "Property Description:\nWhether the relative date represents a range of dates or a specific moment in time.\nFor relative date ranges that you obtain from the query.RelativeDateRange enum, the value of this property is true (the relative date represents a range of dates). For all other relative dates (such as those that you create using query.createRelativeDate(options)), the value of this property is false (the relative date represents a specific moment in time).\n",
            "Type:\nboolean (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.RelativeDate\n",
            "Sibling Object Members:\nRelativeDate Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.isRange\n"
        ]
    },
    "(N/query) RelativeDate.start": {
        "prefix": "RelativeDate.start",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.start for more information.",
        "description": [
            "N/query Module",
            "RelativeDate.start\n",
            "Property Description:\nThe start of the relative date.\nFor relative dates that you create using query.createRelativeDate(options), the value of this property is set when that method is executed. For relative date ranges that are included in the query.RelativeDateRange enum, the value of this property is always available (for example, query.RelativeDateRange.YESTERDAY.start).\n",
            "Type:\nObject (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.RelativeDate\n",
            "Sibling Object Members:\nRelativeDate Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.start\n"
        ]
    },
    "(N/query) RelativeDate.value": {
        "prefix": "RelativeDate.value",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.value for more information.",
        "description": [
            "N/query Module",
            "RelativeDate.value\n",
            "Property Description:\nThe value of the relative date range.\nFor relative dates that you create using query.createRelativeDate(options), the value of this property is set when that method is executed. For relative date ranges that are included in the query.RelativeDateRange enum, the value of this property is undefined (for example, query.RelativeDateRange.YESTERDAY.value is undefined).\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.RelativeDate\n",
            "Sibling Object Members:\nRelativeDate Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RelativeDate.value\n"
        ]
    },
    "(N/query) query.Result": {
        "prefix": "query.Result",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Result for more information.",
        "description": [
            "N/query Module",
            "query.Result\n",
            "Object Description:\nA single row of the result set (query.ResultSet).\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nResult Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Result\n"
        ]
    },
    "(N/query) Result.asMap()": {
        "prefix": "Result.asMap()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Result.asMap() for more information.",
        "description": [
            "N/query Module",
            "Result.asMap()\n",
            "Method Description:\nReturns the query result as a mapped result. A mapped result is a JavaScript object with key-value pairs. In this object, the key is either the field ID or the alias that was used for the corresponding query.Column object.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Result\n",
            "Sibling Object Members:\nResult Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.asMap()\n"
        ]
    },
    "(N/query) Result.values": {
        "prefix": "Result.values",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Result.values for more information.",
        "description": [
            "N/query Module",
            "Result.values\n",
            "Property Description:\nThe result values. Value types correspond to the ResultSet.types property. Array values correspond to the array values for ResultSet.columns.\n",
            "Type:\nArray<string | number | boolean | null> (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Result\n",
            "Sibling Object Members:\nResult Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.values\n"
        ]
    },
    "(N/query) query.ResultSet": {
        "prefix": "query.ResultSet",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.ResultSet for more information.",
        "description": [
            "N/query Module",
            "query.ResultSet\n",
            "Object Description:\nThe set of results returned by the query. Use Query.run() or Query.run.promise() to create this object.\nThe maximum number of results in a ResultSet object is 5000. If a query matches more than 5000 results, you must use Query.runPaged() or Query.runPaged.promise() to retrieve the full set of results.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nResultSet Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.ResultSet\n"
        ]
    },
    "(N/query) ResultSet.asMappedResults()": {
        "prefix": "ResultSet.asMappedResults()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.asMappedResults() for more information.",
        "description": [
            "N/query Module",
            "ResultSet.asMappedResults()\n",
            "Method Description:\nReturns the query result set as an array of mapped results. A mapped result is a JavaScript object with key-value pairs. In this object, the key is either the field ID or the alias that was used for the corresponding query.Column object. When you call this method, Result.asMap() is called on each query.Result object in the result set.\n",
            "Returns:\nObject[]\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.ResultSet\n",
            "Sibling Object Members:\nResultSet Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.asMappedResults()\n"
        ]
    },
    "(N/query) ResultSet.iterator()": {
        "prefix": "ResultSet.iterator()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.iterator() for more information.",
        "description": [
            "N/query Module",
            "ResultSet.iterator()\n",
            "Method Description:\nStandard SuiteScript 2.0 object for iterating through results\n",
            "Returns:\nIterator object\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.ResultSet\n",
            "Sibling Object Members:\nResultSet Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.iterator()\n"
        ]
    },
    "(N/query) ResultSet.columns": {
        "prefix": "ResultSet.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.columns for more information.",
        "description": [
            "N/query Module",
            "ResultSet.columns\n",
            "Property Description:\nAn array of query return column references. The ResultSet.columns array values correspond with the ResultSet.types array values.\n",
            "Type:\nquery.Column[] (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.ResultSet\n",
            "Sibling Object Members:\nResultSet Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.columns\n"
        ]
    },
    "(N/query) ResultSet.results": {
        "prefix": "ResultSet.results",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.results for more information.",
        "description": [
            "N/query Module",
            "ResultSet.results\n",
            "Property Description:\nAn array of query.Result objects.\n",
            "Type:\nquery.Result[] (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.ResultSet\n",
            "Sibling Object Members:\nResultSet Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.results\n"
        ]
    },
    "(N/query) ResultSet.types": {
        "prefix": "ResultSet.types",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.types for more information.",
        "description": [
            "N/query Module",
            "ResultSet.types\n",
            "Property Description:\nAn array of the return types for ResultSet.results.\nThe ResultSet.types array values correspond with the ResultSet.columns array values.\n",
            "Type:\nstring[] (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.ResultSet\n",
            "Sibling Object Members:\nResultSet Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.types\n"
        ]
    },
    "(N/query) query.Sort": {
        "prefix": "query.Sort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.Sort for more information.",
        "description": [
            "N/query Module",
            "query.Sort\n",
            "Object Description:\nA sort based on the query.Query or query.Component object. The query.Sort object describes a sort that is placed on a particular query result column.\nTo create a sort:\nUse Query.createSort(options) to create a sort based on the initial query definition created with query.create(options).\nUse Component.createSort(options) to create a sort based on a join relationship created with Query.autoJoin(options) or Component.autoJoin(options).\nAssign all created sorts as array values to Query.sort. For an example, see Syntax.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nSort Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Sort\n"
        ]
    },
    "(N/query) Sort.ascending": {
        "prefix": "Sort.ascending",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.ascending for more information.",
        "description": [
            "N/query Module",
            "Sort.ascending\n",
            "Property Description:\nWhether the sort direction is ascending.\nThis property is set during the execution of Query.createSort(options) and Component.createSort(options).\nThe default value of this property is true, meaning that the sort direction is ascending. If you want the sort direction to be descending, set this property to false.\n",
            "Type:\nboolean\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.ascending\n"
        ]
    },
    "(N/query) Sort.caseSensitive": {
        "prefix": "Sort.caseSensitive",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.caseSensitive for more information.",
        "description": [
            "N/query Module",
            "Sort.caseSensitive\n",
            "Property Description:\nWhether the sort is case sensitive.\nThis property is set during the execution of Query.createSort(options) and Component.createSort(options).\nIf a sort is case sensitive (and the sort direction is ascending), rows with column values that start with uppercase letters are listed before rows with column values that start with lowercase letters. If a sort is not case sensitive, uppercase and lowercase letters are treated the same. For example, the following list of items is sorted using a case-sensitive sort with a sort direction of ascending:\nBanana\nOrange\napple\ngrapefruit\nkiwi\nHere is the same list of items sorted using a regular (not case-sensitive) sort with a sort direction of ascending:\napple\nBanana\ngrapefruit\nkiwi\nOrange\nThe default value of this property is false.\n",
            "Type:\nboolean\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.caseSensitive\n"
        ]
    },
    "(N/query) Sort.column": {
        "prefix": "Sort.column",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.column for more information.",
        "description": [
            "N/query Module",
            "Sort.column\n",
            "Property Description:\nThe query result column that the query results are sorted by.\nThis property is set during the execution of Query.createSort(options) and Component.createSort(options).\n",
            "Type:\nquery.Column (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.column\n"
        ]
    },
    "(N/query) Sort.locale": {
        "prefix": "Sort.locale",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.locale for more information.",
        "description": [
            "N/query Module",
            "Sort.locale\n",
            "Property Description:\nThe locale to use for the sort.\nThis property uses values from the query.SortLocale enum. This property is set during the execution of Query.createSort(options) and Component.createSort(options).\nA locale represents a combination of language and region, and it can affect how certain values (such as strings) are sorted. For example, languages that share the same alphabet may sort characters differently. Use this property to ensure that query results are sorted using locale-specific rules.\n",
            "Type:\nstring\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.locale\n"
        ]
    },
    "(N/query) Sort.nullsLast": {
        "prefix": "Sort.nullsLast",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.nullsLast for more information.",
        "description": [
            "N/query Module",
            "Sort.nullsLast\n",
            "Property Description:\nWhether query results with null values are listed at the end of the query results.\nThis property is set during the execution of Query.createSort(options) and Component.createSort(options).\nThe default value of this property is the value of the Sort.ascending property. For example, if the Sort.ascending property is set to true, the Sort.nullsLast property is also set to true.\n",
            "Type:\nboolean\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.nullsLast\n"
        ]
    },
    "(N/query) query.SuiteQL": {
        "prefix": "query.SuiteQL",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=query.SuiteQL for more information.",
        "description": [
            "N/query Module",
            "query.SuiteQL\n",
            "Object Description:\nA SuiteQL query.\nSuiteQL is a query language based on the SQL-92 revision of the SQL database query language. It provides advanced query capabilities you can use to access your NetSuite records and data.\nUse Query.toSuiteQL() to create this object. This method converts an existing query.Query object to its corresponding SuiteQL representation as a query.SuiteQL object. You can use SuiteQL.run() to run the query and obtain the results as a query.ResultSet object. You can also use SuiteQL.runPaged(options) to run the query as a paged query and obtain the results as a query.PagedData object.\nWhen you convert a query.Query object to a query.SuiteQL object, the resulting SuiteQL query is the same as the original query. It includes the same query result columns, sort order, and conditions that were set on the original query. When you run the resulting SuiteQL query using SuiteQL.run() or SuiteQL.runPaged(options), you receive the same results as you would if you ran the original query using Query.run() or Query.runPaged().\nFor more information and examples of using SuiteQL in the N/query module, see SuiteQL in the N/query Module. For more information about SuiteQL in general, see SuiteQL.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/query Module\n",
            "Methods and Properties:\nSuiteQL Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.SuiteQL\n"
        ]
    },
    "(N/query) SuiteQL.run()": {
        "prefix": "SuiteQL.run()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.run() for more information.",
        "description": [
            "N/query Module",
            "SuiteQL.run()\n",
            "Method Description:\nRuns the SuiteQL query and returns the query results.\nYou can use this method to run the SuiteQL query and obtain the results as a query.ResultSet object. If you want to run the SuiteQL query as a paged query, use SuiteQL.runPaged(options).\nCalling this method is equivalent to calling query.runSuiteQL(options) and passing the query.SuiteQL object as a parameter:\nIf the SuiteAnalytics Connect feature is enabled in your NetSuite account, there is no limit to the number of results this method can return. If the SuiteAnalytics Connect feature is not enabled, this method can return a maximum of 100,000 results. For more information about SuiteAnalytics Connect, see SuiteAnalytics Connect.\nFor more information and examples of using SuiteQL in the N/query module, see SuiteQL in the N/query Module. For more information about SuiteQL in general, see SuiteQL.\n",
            "Returns:\nquery.ResultSet\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.SuiteQL\n",
            "Sibling Object Members:\nSuiteQL Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.run()\n"
        ]
    },
    "(N/query) SuiteQL.runPaged(options)": {
        "prefix": "SuiteQL.runPaged(options)",
        "body": [
            "${1:SuiteQL}.runPaged({",
            "\tpageSize: ${2:number}",
            "})"
        ],
        "description": [
            "N/query Module",
            "SuiteQL.runPaged()\n",
            "Method Description:\nRuns the SuiteQL query as a paged query and returns the paged query results.\nYou can use this method to run the SuiteQL query and obtain the results as a query.PagedData object. If you want to run the SuiteQL query as a non-paged query, use SuiteQL.run().\nIf the SuiteAnalytics Connect feature is enabled in your NetSuite account, there is no limit to the number of results this method can return. If the SuiteAnalytics Connect feature is not enabled, this method can return a maximum of 100,000 results across all pages in the result set. For more information about SuiteAnalytics Connect, see SuiteAnalytics Connect.\nFor more information and examples of using SuiteQL in the N/query module, see SuiteQL in the N/query Module. For more information about SuiteQL in general, see SuiteQL.\n",
            "Returns:\nquery.PagedData\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.SuiteQL\n",
            "Sibling Object Members:\nSuiteQL Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.runPaged(options)\n"
        ]
    },
    "(N/query) SuiteQL.columns": {
        "prefix": "SuiteQL.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.columns for more information.",
        "description": [
            "N/query Module",
            "SuiteQL.columns\n",
            "Property Description:\nThe result columns to be returned from the query.\nThis property is an array of query.Column objects. When you use Query.toSuiteQL() to convert an existing query.Query object to SuiteQL, this property contains the same query.Column objects that were specified for the original query.\nThe SuiteQL query string in a query.SuiteQL object (contained in the SuiteQL.query property) does not include any aliases you set on query result columns in the original query.Query object. For more information about aliases, see Column.alias.\n",
            "Type:\nquery.Column[] (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.SuiteQL\n",
            "Sibling Object Members:\nSuiteQL Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.columns\n"
        ]
    },
    "(N/query) SuiteQL.params": {
        "prefix": "SuiteQL.params",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.params for more information.",
        "description": [
            "N/query Module",
            "SuiteQL.params\n",
            "Property Description:\nThe parameters for the query.\nIn SuiteQL, query conditions are represented using the WHERE clause and a set of parameters. In a SuiteQL string, parameter values for conditions are represented using question marks (?), and the params property includes a list of the parameter values to use when the query runs. If the query uses more than one parameter, the order of the values in the params property matches the order the parameters appear in the query string.\nFor example, consider the following query.Condition object in a query for customer records:\nIf you use Query.toSuiteQL() to convert this query to SuiteQL, the resulting SuiteQL query string includes the following WHERE clause:\nIn the resulting query.SuiteQL object, the params property includes the value 50000.\n",
            "Type:\nArray<string | number | boolean> (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.SuiteQL\n",
            "Sibling Object Members:\nSuiteQL Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.params\n"
        ]
    },
    "(N/query) SuiteQL.query": {
        "prefix": "SuiteQL.query",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.query for more information.",
        "description": [
            "N/query Module",
            "SuiteQL.query\n",
            "Property Description:\nThe string representation of the SuiteQL query.\nThis string can contain the following types of elements:\nSQL clauses, such as SELECT, FROM, and WHERE\nRecord or table names, such as customer\nField names using dot notation, such as customer.entityid\nOperators for conditions, such as = and >=\nFormatting characters, such as newline characters (\\n)\nThis string can also contain field formatting metadata, such as /*{entityid#RAW}*/. When you use Query.toSuiteQL() to convert a constructed query to its SuiteQL query equivalent, metadata may be added to the query string to indicate the formatting (or context) of fields in the query. For example, /*{entityid#RAW}*/ metadata indicates that the entityid field is formatted using the query.FieldContext.RAW field context from the query.FieldContext enum. This metadata is added as comments (using /* and */) and does not affect query execution or the query results.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.SuiteQL\n",
            "Sibling Object Members:\nSuiteQL Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.query\n"
        ]
    },
    "(N/query) SuiteQL.type": {
        "prefix": "SuiteQL.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.type for more information.",
        "description": [
            "N/query Module",
            "SuiteQL.type\n",
            "Property Description:\nThe type of the query.\nThis property uses values from the query.Type enum. When you use Query.toSuiteQL() to convert an existing query.Query object to SuiteQL, this property contains the same type that was specified for the original query.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/query Module\n",
            "Parent Object:\nquery.SuiteQL\n",
            "Sibling Object Members:\nSuiteQL Object Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQL.type\n"
        ]
    },
    "(N/query) query.create(options)": {
        "prefix": "query.create(options)",
        "body": [
            "${1:query}.create({",
            "\ttype: ${2:string*},",
            "\tcolumns: ${3:Object[]},",
            "\tcondition: ${4:Object},",
            "\tsort: ${5:Object[]}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.create()\n",
            "Method Description:\nCreates a query.Query object.\nUse this method to create your initial query definition. The initial query definition uses one query type. For available query types, see query.Type.\nAfter you create the initial query definition, use Query.autoJoin(options) to create your first join. Then use Query.autoJoin(options) or Component.autoJoin(options) to create all subsequent joins.\nFor standard record types, the query type that you specify is validated immediately and must be one of the values in the query.Type enum. For custom record types, the query type that you specify is not validated until the query is executed using Query.run() or Query.runPaged() (or using the promise versions of these methods). If you specify a query type for a custom record type that does not exist, this method allows you to create the query and does not throw an error. However, when you execute the query, an error is thrown.\nThe N/query module lets you create and run queries using the SuiteAnalytics Workbook query engine. You can use the N/query module to load and delete existing queries, but you cannot save queries. You can save queries using the SuiteAnalytics Workbook interface. For more information, see Navigating SuiteAnalytics Workbook.\nFor more information about creating queries, see Scripting with the N/query Module.\n",
            "Returns:\nquery.Query\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.create(options)\n"
        ]
    },
    "(N/query) query.createPeriod(options)": {
        "prefix": "query.createPeriod(options)",
        "body": [
            "${1:query}.createPeriod({",
            "\tcode: ${2:string*},",
            "\tadjustment: ${3:string},",
            "\ttype: ${4:string}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.createPeriod()\n",
            "Method Description:\nCreates a query.Period object.\n",
            "Returns:\nquery.Period\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.createPeriod(options)\n"
        ]
    },
    "(N/query) query.createRelativeDate(options)": {
        "prefix": "query.createRelativeDate(options)",
        "body": [
            "${1:query}.createRelativeDate({",
            "\tdateId: ${2:string*},",
            "\tvalue: ${3:number*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.createRelativeDate()\n",
            "Method Description:\nCreates a query.RelativeDate object that represents a date relative to the current date.\nUse this method to create a query.RelativeDate object to use as part of a query condition. After you create a query.RelativeDate object, you can use it directly in the values parameter of Query.createCondition(options) or Component.createCondition(options).\nWhen you call this method, the options.dateId parameter determines the relative date that is created. The options.dateId parameter uses values from the query.DateId enum, and these values describe potential dates relative to the current date. Use them along with the options.value parameter to create a relative date. For example, to create a relative date that represents the date three weeks before the current date, call query.createRelativeDate(options) with an options.dateId value of query.DateId.WEEKS_AGO and an options.value value of 3. To create a relative date that represents the date three weeks after the current date, call query.createRelativeDate(options) with an options.dateId value of query.DateId.WEEKS_FROM_NOW and an options.value value of 3.\n",
            "Returns:\nquery.RelativeDate\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.createRelativeDate(options)\n"
        ]
    },
    "(N/query) query.delete(options)": {
        "prefix": "query.delete(options)",
        "body": [
            "${1:query}.delete({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.delete()\n",
            "Method Description:\nDeletes an existing query.\nUse this method to delete a query definition that was previously created using the SuiteAnalytics Workbook UI. After the query is deleted, it is no longer available and cannot be modified or executed.\nThe N/query module lets you create and run queries using the SuiteAnalytics Workbook query engine. You can use the N/query module to load and delete existing queries, but you cannot save queries. You can save queries using the SuiteAnalytics Workbook interface. For more information, see Navigating SuiteAnalytics Workbook.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.delete(options)\n"
        ]
    },
    "(N/query) query.listTables(options)": {
        "prefix": "query.listTables(options)",
        "body": [
            "${1:query}.listTables({",
            "\tworkbookId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.listTables()\n",
            "Method Description:\nLists the table view objects that are included in a workbook in SuiteAnalytics Workbook.\nThis method returns an array of Objects. Each Object represents a table view and includes the following properties with associated values:\nname — The name of the table view object\nscriptId — The script ID of the table view object\n",
            "Returns:\nArray<Object>\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.listTables(options)\n"
        ]
    },
    "(N/query) query.load(options)": {
        "prefix": "query.load(options)",
        "body": [
            "${1:query}.load({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.load()\n",
            "Method Description:\nLoads an existing query as a query.Query object.\nUse this method to load a query definition that was previously created using the SuiteAnalytics Workbook UI. After the query is loaded, you can modify the query definition (for example, by setting additional property values), join the query definition with other query types, and execute the query in the same way as queries that you create using query.create(options).\nYou can provide either the workbook ID or the dataset ID of the query definition to load. You can obtain these IDs in the SuiteAnalytics Workbook UI. For more information, see Navigating SuiteAnalytics Workbook.\nThis method loads only the table view in the specified workbook. However, a workbook can include no table views, or it can include multiple table views. This method throws an exception in each of these cases (see Errors). If a workbook includes multiple table views, you can use query.listTables(options) to determine the ID of a specific table view. You can use this ID to load the corresponding table view.\nThe N/query module lets you create and run queries using the SuiteAnalytics Workbook query engine. You can use the N/query module to load and delete existing queries, but you cannot save queries. You can save queries using the SuiteAnalytics Workbook interface. For more information, see Navigating SuiteAnalytics Workbook.\n",
            "Returns:\nquery.Query\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.load(options)\n"
        ]
    },
    "(N/query) query.load.promise(options)": {
        "prefix": "query.load.promise(options)",
        "body": [
            "${1:query}.load.promise({",
            "\tid: ${2:string*}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/query Module",
            "query.load.promise()\n",
            "Method Description:\nLoads an existing query asynchronously as a query.Query object.\nUse this method to asynchronously load a query definition that was previously created using the SuiteAnalytics Workbook UI. After the query is loaded, you can modify the query definition (for example, by setting additional property values), join the query definition with other query types, and execute the query in the same way as queries that you create using query.create(options).\nYou can provide either the workbook ID or the dataset ID of the query definition to load. You can obtain these IDs in the SuiteAnalytics Workbook UI. For more information, see Navigating SuiteAnalytics Workbook.\nThis method loads only the table view in the specified workbook. However, a workbook can include no table views, or it can include multiple table views. This method throws an exception in each of these cases (see Errors). If a workbook includes multiple table views, you can use query.listTables(options) to determine the ID of a specific table view. You can use this ID to load the corresponding table view.\nThe N/query module lets you create and run queries using the SuiteAnalytics Workbook query engine. You can use the N/query module to load and delete existing queries, but you cannot save queries. You can save queries using the SuiteAnalytics Workbook interface. For more information, see Navigating SuiteAnalytics Workbook.\nThe parameters and errors thrown for this method are the same as those for query.load(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nquery.load(options)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.load.promise(options)\n"
        ]
    },
    "(N/query) query.runSuiteQL(options)": {
        "prefix": "query.runSuiteQL(options)",
        "body": [
            "${1:query}.runSuiteQL({",
            "\tquery: ${2:string*},",
            "\tparams: ${3:Array<string | number | boolean>}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.runSuiteQL()\n",
            "Method Description:\nRuns an arbitrary SuiteQL query.\nSuiteQL is a query language based on the SQL-92 revision of the SQL database query language. It provides advanced query capabilities you can use to access your NetSuite records and data.\nYou can specify the SuiteQL query as one of the following:\nA string representation of the SuiteQL query\nA query.SuiteQL object\nA JavaScript Object that contains a query property and, optionally, a params property\nIf the SuiteAnalytics Connect feature is enabled in your NetSuite account, there is no limit to the number of results this method can return. If the SuiteAnalytics Connect feature is not enabled, this method can return a maximum of 100,000 results. For more information about SuiteAnalytics Connect, see SuiteAnalytics Connect.\nFor more information and examples of using SuiteQL in the N/query module, see SuiteQL in the N/query Module. For more information about SuiteQL in general, see SuiteQL.\n",
            "Returns:\nquery.ResultSet\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.runSuiteQL(options)\n"
        ]
    },
    "(N/query) query.runSuiteQLPaged(options)": {
        "prefix": "query.runSuiteQLPaged(options)",
        "body": [
            "${1:query}.runSuiteQLPaged({",
            "\tquery: ${2:string*},",
            "\tparams: ${3:Array<string | number | boolean>},",
            "\tpageSize: ${4:number}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.runSuiteQLPaged()\n",
            "Method Description:\nRuns an arbitrary SuiteQL query as a paged query.\nSuiteQL is a query language based on the SQL-92 revision of the SQL database query language. It provides advanced query capabilities you can use to access your NetSuite records and data.\nYou can specify the SuiteQL query as one of the following:\nA string representation of the SuiteQL query\nA query.SuiteQL object\nAlthough this approach is supported, you should create a query.SuiteQL object and call SuiteQL.runPaged(options), if possible, to run a paged SuiteQL query.\nA JavaScript Object that contains a query property and, optionally, a params property\nIf the SuiteAnalytics Connect feature is enabled in your NetSuite account, there is no limit to the number of results this method can return. If the SuiteAnalytics Connect feature is not enabled, this method can return a maximum of 100,000 results across all pages in the result set. For more information about SuiteAnalytics Connect, see SuiteAnalytics Connect.\nFor more information and examples of using SuiteQL in the N/query module, see SuiteQL in the N/query Module. For more information about SuiteQL in general, see SuiteQL.\n",
            "Returns:\nquery.PagedData\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.runSuiteQLPaged(options)\n"
        ]
    },
    "(N/query) query.Aggregate": {
        "prefix": "query.Aggregate",
        "body": "query.Aggregate.${1|AVERAGE,AVERAGE_DISTINCT,COUNT,COUNT_DISTINCT,MAXIMUM,MAXIMUM_DISTINCT,MEDIAN,MINIMUM,MINIMUM_DISTINCT,SUM,SUM_DISTINCT|}",
        "description": [
            "N/query Module",
            "query.Aggregate\n",
            "Enum Description:\nHolds the string values for aggregate functions supported with the N/query Module. An aggregate function performs a calculation on the column or condition values and returns a single value.\nEach value in this enum (except MEDIAN) has two variants: distinct (using the _DISTINCT suffix) and nondistinct (using no suffix). The variant determines whether the aggregate function operates on all instances of duplicate values or on just a single instance of the value. For example, consider a situation in which the MAXIMUM aggregate function is used to determine the maximum of a set of values. When using the distinct variant (MAXIMUM_DISTINCT), the aggregate function considers each instance of duplicate values. So if the set of values includes three distinct values that are all equal and all represent the maximum value in the set, the aggregate function lists all three instances. When using the nondistinct variant (MAXIMUM), only one instance of the maximum value is listed, regardless of the number of instances of that maximum value in the set.\nThis enum is used to pass the aggregate function argument to Component.createColumn(options), Component.createCondition(options), Query.createColumn(options), and Query.createCondition(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Aggregate\n"
        ]
    },
    "(N/query) query.DateId": {
        "prefix": "query.DateId",
        "body": "query.DateId.${1|DAYS_AGO,DAYS_FROM_NOW,HOURS_AGO,HOURS_FROM_NOW,MINUTES_AGO,MINUTES_FROM_NOW,MONTHS_AGO,MONTHS_FROM_NOW,QUARTERS_AGO,QUARTERS_FROM_NOW,SECONDS_AGO,SECONDS_FROM_NOW,WEEKS_AGO,WEEKS_FROM_NOW,YEARS_AGO,YEARS_FROM_NOW|}",
        "description": [
            "N/query Module",
            "query.DateId\n",
            "Enum Description:\nHolds the string values for supported date codes in relative dates.\nThis enum is used to pass the date ID argument to query.createRelativeDate(options). It is also used as the value of the RelativeDate.dateId property. When query.createRelativeDate(options) is called, the enum value that you specify is set as the value of the RelativeDate.dateId property.\nWhen creating a relative date using query.createRelativeDate(options), use the values in this enum to specify a date relative to the current date. For example, to create a relative date that represents the date a certain number of days before the current date, use the DateId.DAYS_AGO enum value. To create a relative date that represents the date a certain number of months after the current date, use the DateId.MONTHS_FROM_NOW enum value.\nThe values in this enum might look similar to the values in the query.RelativeDateRange enum, but each enum is used for a different purpose:\nUse query.DateId enum values to create a query.RelativeDate object using query.createRelativeDate(options). After you create this object, you can use it in query conditions that you create using Query.createCondition(options) or Component.createCondition(options).\nUse query.RelativeDateRange enum values directly in query conditions that you create using Query.createCondition(options) or Component.createCondition(options). Each value in the query.RelativeDateRange enum represents a date range, and you can use these values in the values parameter of Query.createCondition(options) or Component.createCondition(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.DateId\n"
        ]
    },
    "(N/query) query.FieldContext": {
        "prefix": "query.FieldContext",
        "body": "query.FieldContext.${1|CONVERTED,CURRENCY_CONSOLIDATED,DISPLAY,HIERARCHY,HIERARCHY_IDENTIFIER,RAW|}",
        "description": [
            "N/query Module",
            "query.FieldContext\n",
            "Enum Description:\nHolds the string values for the field context to use when creating a column using Query.createColumn(options) or Component.createColumn(options).\nThe field context determines how field values are displayed in a column. For example, you can specify that a column should display raw data (such as internal IDs), consolidated or converted amounts (such as currency totals), or user-friendly values (such as names).\nJavaScript does not include an enumeration type. The SuiteScript documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. In this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.FieldContext\n"
        ]
    },
    "(N/query) query.Operator": {
        "prefix": "query.Operator",
        "body": [
            "${1:query}.Operator{",
            "\tAFTER: ${2:AFTER},",
            "\tAFTER_NOT: ${3:AFTER_NOT},",
            "\tANY_OF: ${4:ANY_OF},",
            "\tANY_OF_NOT: ${5:ANY_OF_NOT},",
            "\tBEFORE: ${6:BEFORE},",
            "\tBEFORE_NOT: ${7:BEFORE_NOT},",
            "\tBETWEEN: ${8:BETWEEN},",
            "\tBETWEEN_NOT: ${9:BETWEEN_NOT},",
            "\tCONTAIN: ${10:CONTAIN},",
            "\tCONTAIN_NOT: ${11:CONTAIN_NOT},",
            "\tEMPTY: ${12:EMPTY},",
            "\tEMPTY_NOT: ${13:EMPTY_NOT},",
            "\tENDWITH: ${14:ENDWITH},",
            "\tENDWITH_NOT: ${15:ENDWITH_NOT},",
            "\tEQUAL: ${16:EQUAL},",
            "\tEQUAL_NOT: ${17:EQUAL_NOT},",
            "\tEXCLUDE_ALL: ${18:MN_EXCLUDE},",
            "\tEXCLUDE_ANY: ${19:MN_EXCLUDE_ALL},",
            "\tEXCLUDE_EXACTLY: ${20:MN_EXCLUDE_EXACTLY},",
            "\tGREATER: ${21:GREATER},",
            "\tGREATER_NOT: ${22:GREATER_NOT},",
            "\tGREATER_OR_EQUAL: ${23:GREATER_OR_EQUAL},",
            "\tGREATER_OR_EQUAL_NOT: ${24:GREATER_OR_EQUAL_NOT},",
            "\tINCLUDE_ALL: ${25:MN_INCLUDE_ALL},",
            "\tINCLUDE_ANY: ${26:MN_INCLUDE},",
            "\tINCLUDE_EXACTLY: ${27:MN_INCLUDE_EXACTLY},",
            "\tIS: ${28:IS},",
            "\tIS_NOT: ${29:IS_NOT},",
            "\tLESS: ${30:LESS},",
            "\tLESS_NOT: ${31:LESS_NOT},",
            "\tLESS_OR_EQUAL: ${32:LESS_OR_EQUAL},",
            "\tLESS_OR_EQUAL_NOT: ${33:LESS_OR_EQUAL_NOT},",
            "\tON: ${34:ON},",
            "\tON_NOT: ${35:ON_NOT},",
            "\tON_OR_AFTER: ${36:ON_OR_AFTER},",
            "\tON_OR_AFTER_NOT: ${37:ON_OR_AFTER_NOT},",
            "\tON_OR_BEFORE: ${38:ON_OR_BEFORE},",
            "\tON_OR_BEFORE_NOT: ${39:ON_OR_BEFORE_NOT},",
            "\tSTART_WITH: ${40:START_WITH},",
            "\tSTART_WITH_NOT: ${41:START_WITH_NOT},",
            "\tWITHIN: ${42:WITHIN},",
            "\tWITHIN_NOT: ${43:WITHIN_NOT}",
            "})"
        ],
        "description": [
            "N/query Module",
            "query.Operator\n",
            "Enum Description:\nHolds the string values for operators supported in SuiteScript Analytic APIs.\nSuiteScript Analytic APIs help you work with analytical data in NetSuite using SuiteScript. For more information, see SuiteScript Analytic APIs.\nThis enum is used to specify the operator argument to Query.createCondition(options) and Component.createCondition(options). This enum is also used to specify the operator argument to methods in the N/dataset and N/workbook modules, such as dataset.createCondition(options) and workbook.createTableFilter(options). For more information, see Workbook API (Beta).\nValues for this enum are listed in the Values section. The following columns provide information about each operator:\nValue — Use these values to specify operators in most queries (for example, query.Operator.BEFORE). To use these values, you must include the N/query module in your script.\nMapped String Value — Use these values as strings that represent the corresponding operators (for example, 'BEFORE'). To use these values, you do not need to include the N/query module in your script.\nUse For — Use this column to determine the value types that each operator supports. For example, the query.Operator.AFTER operator is designed to be used with date/time values, and you cannot use this operator with string or boolean values. Some operators are similar but are designed to be used with different value types (such as query.Operator.IS for boolean values and query.Operator.EQUAL for numeric values).\nFor multi-select fields, you can use the query.Operator.INCLUDE_* and query.Operator.EXCLUDE_* values to specify a set of exact field values. For example, to obtain script deployment records that apply to all execution contexts except the WEBAPP and WEBSTORE contexts, you can use the query.Operator.EXCLUDE_ALL operator. You cannot use the query.Operator.ANY_OF_NOT operator to obtain these records, because this operator uses an implicit OR operator between all specified values. The query.Operator.EXCLUDE_ALL operator uses an implicit AND operator between all specified values, which lets you create more complex conditions.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. In this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Operator\n"
        ]
    },
    "(N/query) query.PeriodAdjustment": {
        "prefix": "query.PeriodAdjustment",
        "body": "query.PeriodAdjustment.${1|ALL,NOT_LAST|}",
        "description": [
            "N/query Module",
            "query.PeriodAdjustment\n",
            "Enum Description:\nHolds the string values for adjustment types for a period.\nThis enum is used to pass the adjustment argument to query.createPeriod(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.PeriodAdjustment\n"
        ]
    },
    "(N/query) query.PeriodCode": {
        "prefix": "query.PeriodCode",
        "body": "query.PeriodCode.${1|FIRST_FISCAL_QUARTER_LAST_FY,FIRST_FISCAL_QUARTER_THIS_FY,FISCAL_QUARTER_BEFORE_LAST,FISCAL_YEAR_BEFORE_LAST,FOURTH_FISCAL_QUARTER_LAST_FY,FOURTH_FISCAL_QUARTER_THIS_FY,LAST_FISCAL_QUARTER,LAST_FISCAL_QUARTER_ONE_FISCAL_YEAR_AGO,LAST_FISCAL_QUARTER_TO_PERIOD,LAST_FISCAL_YEAR,LAST_FISCAL_YEAR_TO_PERIOD,LAST_PERIOD,LAST_PERIOD_ONE_FISCAL_QUARTER_AGO,LAST_PERIOD_ONE_FISCAL_YEAR_AGO,LAST_ROLLING_18_PERIODS,LAST_ROLLING_6_FISCAL_QUARTERS,PERIOD_BEFORE_LAST,SAME_FISCAL_QUARTER_LAST_FY,SAME_FISCAL_QUARTER_LAST_FY_TO_PERIOD,SAME_PERIOD_LAST_FY,SAME_PERIOD_LAST_FISCAL_QUARTER,SECOND_FISCAL_QUARTER_LAST_FY,SECOND_FISCAL_QUARTER_THIS_FY,THIRD_FISCAL_QUARTER_LAST_FY,THIRD_FISCAL_QUARTER_THIS_FY,THIS_FISCAL_QUARTER,THIS_FISCAL_QUARTER_TO_PERIOD,THIS_FISCAL_YEAR,THIS_FISCAL_YEAR_TO_PERIOD,THIS_PERIOD|}",
        "description": [
            "N/query Module",
            "query.PeriodCode\n",
            "Enum Description:\nHolds the string values for period codes for a period.\nThis enum is used to pass the code argument to query.createPeriod(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.PeriodCode\n"
        ]
    },
    "(N/query) query.PeriodType": {
        "prefix": "query.PeriodType",
        "body": "query.PeriodType.${1|END,START|}",
        "description": [
            "N/query Module",
            "query.PeriodType\n",
            "Enum Description:\nHolds the string values for period types for a period.\nThis enum is used to pass the type argument to query.createPeriod(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.PeriodType\n"
        ]
    },
    "(N/query) query.RelativeDateRange": {
        "prefix": "query.RelativeDateRange",
        "body": "query.RelativeDateRange.${1|FISCAL_HALF_BEFORE_LAST,FISCAL_HALF_BEFORE_LAST_TO_DATE,FISCAL_QUARTER_BEFORE_LAST,FISCAL_QUARTER_BEFORE_LAST_TO_DATE,FISCAL_YEAR_BEFORE_LAST,FISCAL_YEAR_BEFORE_LAST_TO_DATE,FIVE_DAYS_AGO,FIVE_DAYS_FROM_NOW,FOUR_DAYS_AGO,FOUR_DAYS_FROM_NOW,FOUR_WEEKS_STARTING_THIS_WEEK,LAST_BUSINESS_WEEK,LAST_FISCAL_HALF,LAST_FISCAL_HALF_ONE_FISCAL_YEAR_AGO,LAST_FISCAL_HALF_TO_DATE,LAST_FISCAL_QUARTER,LAST_FISCAL_QUARTER_ONE_FISCAL_YEAR_AGO,LAST_FISCAL_QUARTER_TO_DATE,LAST_FISCAL_QUARTER_TWO_FISCAL_YEARS_AGO,LAST_FISCAL_YEAR,LAST_FISCAL_YEAR_TO_DATE,LAST_MONTH,LAST_MONTH_ONE_FISCAL_QUARTER_AGO,LAST_MONTH_ONE_FISCAL_YEAR_AGO,LAST_MONTH_TO_DATE,LAST_MONTH_TWO_FISCAL_QUARTERS_AGO,LAST_MONTH_TWO_FISCAL_YEARS_AGO,LAST_ROLLING_HALF,LAST_ROLLING_QUARTER,LAST_ROLLING_YEAR,LAST_WEEK,LAST_WEEK_TO_DATE,LAST_YEAR,LAST_YEAR_TO_DATE,MONTH_AFTER_NEXT,MONTH_AFTER_NEXT_TO_DATE,MONTH_BEFORE_LAST,MONTH_BEFORE_LAST_TO_DATE,NEXT_BUSINESS_WEEK,NEXT_FISCAL_HALF,NEXT_FISCAL_QUARTER,NEXT_FISCAL_YEAR,NEXT_FOUR_WEEKS,NEXT_MONTH,NEXT_ONE_HALF,NEXT_ONE_MONTH,NEXT_ONE_QUARTER,NEXT_ONE_WEEK,NEXT_ONE_YEAR,NEXT_WEEK,NINETY_DAYS_AGO,NINETY_DAYS_FROM_NOW,ONE_YEAR_BEFORE_LAST,PREVIOUS_FISCAL_QUARTERS_LAST_FISCAL_YEAR,PREVIOUS_FISCAL_QUARTERS_THIS_FISCAL_YEAR,PREVIOUS_MONTHS_LAST_FISCAL_HALF,PREVIOUS_MONTHS_LAST_FISCAL_QUARTER,PREVIOUS_MONTHS_LAST_FISCAL_YEAR,PREVIOUS_MONTHS_SAME_FISCAL_HALF_LAST_FISCAL_YEAR,PREVIOUS_MONTHS_SAME_FISCAL_QUARTER_LAST_FISCAL_YEAR,PREVIOUS_MONTHS_THIS_FISCAL_HALF,PREVIOUS_MONTHS_THIS_FISCAL_QUARTER,PREVIOUS_MONTHS_THIS_FISCAL_YEAR,PREVIOUS_ONE_DAY,PREVIOUS_ONE_HALF,PREVIOUS_ONE_MONTH,PREVIOUS_ONE_QUARTER,PREVIOUS_ONE_WEEK,PREVIOUS_ONE_YEAR,PREVIOUS_ROLLING_HALF,PREVIOUS_ROLLING_QUARTER,PREVIOUS_ROLLING_YEAR,SAME_DAY_FISCAL_QUARTER_BEFORE_LAST,SAME_DAY_FISCAL_YEAR_BEFORE_LAST,SAME_DAY_LAST_FISCAL_QUARTER,SAME_DAY_LAST_FISCAL_YEAR,SAME_DAY_LAST_MONTH,SAME_DAY_LAST_WEEK,SAME_DAY_MONTH_BEFORE_LAST,SAME_DAY_WEEK_BEFORE_LAST,SAME_FISCAL_HALF_LAST_FISCAL_YEAR,SAME_FISCAL_HALF_LAST_FISCAL_YEAR_TO_DATE,SAME_FISCAL_QUARTER_FISCAL_YEAR_BEFORE_LAST,SAME_FISCAL_QUARTER_LAST_FISCAL_YEAR,SAME_FISCAL_QUARTER_LAST_FISCAL_YEAR_TO_DATE,SAME_MONTH_FISCAL_QUARTER_BEFORE_LAST,SAME_MONTH_FISCAL_YEAR_BEFORE_LAST,SAME_MONTH_LAST_FISCAL_QUARTER,SAME_MONTH_LAST_FISCAL_QUARTER_TO_DATE,SAME_MONTH_LAST_FISCAL_YEAR,SAME_MONTH_LAST_FISCAL_YEAR_TO_DATE,SAME_WEEK_FISCAL_YEAR_BEFORE_LAST,SAME_WEEK_LAST_FISCAL_YEAR,SIXTY_DAYS_AGO,SIXTY_DAYS_FROM_NOW,TEN_DAYS_AGO,TEN_DAYS_FROM_NOW,THIRTY_DAYS_AGO,THIRTY_DAYS_FROM_NOW,THIS_BUSINESS_WEEK,THIS_FISCAL_HALF,THIS_FISCAL_HALF_TO_DATE,THIS_FISCAL_QUARTER,THIS_FISCAL_QUARTER_TO_DATE,THIS_FISCAL_YEAR,THIS_FISCAL_YEAR_TO_DATE,THIS_MONTH,THIS_MONTH_TO_DATE,THIS_ROLLING_HALF,THIS_ROLLING_QUARTER,THIS_ROLLING_YEAR,THIS_WEEK,THIS_WEEK_TO_DATE,THIS_YEAR,THIS_YEAR_TO_DATE,THREE_DAYS_AGO,THREE_DAYS_FROM_NOW,THREE_FISCAL_QUARTERS_AGO,THREE_FISCAL_QUARTERS_AGO_TO_DATE,THREE_FISCAL_YEARS_AGO,THREE_FISCAL_YEARS_AGO_TO_DATE,THREE_MONTHS_AGO,THREE_MONTHS_AGO_TO_DATE,TODAY,TODAY_TO_END_OF_THIS_MONTH,TOMORROW,TWO_DAYS_AGO,TWO_DAYS_FROM_NOW,WEEK_AFTER_NEXT,WEEK_AFTER_NEXT_TO_DATE,WEEK_BEFORE_LAST,WEEK_BEFORE_LAST_TO_DATE,YESTERDAY|}",
        "description": [
            "N/query Module",
            "query.RelativeDateRange\n",
            "Enum Description:\nHolds query.RelativeDate object values for supported date ranges in relative dates.\nThis enum is used to pass the values argument to Query.createCondition(options) and Component.createCondition(options). It is also used as the value of the RelativeDate.value property. Each value in this enum represents a date range. When Query.createCondition(options) or Component.createCondition(options) is called with a query.RelativeDate object as the values argument, this object is set as the value of the RelativeDate.value property.\nWhen creating a condition using Query.createCondition(options) or Component.createCondition(options), use the values in this enum (along with values in the query.Operator enum) to specify a range of dates relative to the current date. For example, to create a condition to match dates that occur before the current date, use the query.RelativeDateRange.TODAY enum value and the query.Operator.BEFORE enum value. To create a condition to match dates that occur after last year, use the query.RelativeDateRange.LAST_YEAR enum value and the query.Operator.AFTER enum value. For more information about relative dates, see Relative Dates in the N/query Module.\nThe values in this enum might look similar to the values in the query.DateId enum, but each enum is used for a different purpose:\nUse query.DateId enum values to create a query.RelativeDate object using query.createRelativeDate(options). After you create this object, you can use it in query conditions that you create using Query.createCondition(options) or Component.createCondition(options).\nUse query.RelativeDateRange enum values directly in query conditions that you create using Query.createCondition(options) or Component.createCondition(options). Each value in the query.RelativeDateRange enum represents a date range, and you can use these values in the values parameter of Query.createCondition(options) or Component.createCondition(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.RelativeDateRange\n"
        ]
    },
    "(N/query) query.ReturnType": {
        "prefix": "query.ReturnType",
        "body": "query.ReturnType.${1|ANY,BOOLEAN,CLOBTEXT,CURRENCY,DATE,DATETIME,DURATION,FLOAT,INTEGER,KEY,PERCENT,RELATIONSHIP,STRING,UNKNOWN|}",
        "description": [
            "N/query Module",
            "query.ReturnType\n",
            "Enum Description:\nHolds the string values for the formula return types supported with the N/query Module.\nThis enum is used to pass the formula return type argument to Query.createColumn(options), Component.createColumn(options), Query.createCondition(options), and Component.createCondition(options).\nFor more information about these return types, see Formula Fields.\nFor more information on formulas, see SuiteAnalytics Workbook Overview, SQL Expressions, and Search Formula Examples and Tips.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. In this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.ReturnType\n"
        ]
    },
    "(N/query) query.SortLocale": {
        "prefix": "query.SortLocale",
        "body": "query.SortLocale.${1|ARABIC,ARABIC_ABJ_MATCH,ARABIC_ABJ_MATCH_CI,ARABIC_ABJ_SORT,ARABIC_ABJ_SORT_CI,ARABIC_CI,ARABIC_MATCH,ARABIC_MATCH_CI,ASCII7,ASCII7_CI,AZERBAIJANI,AZERBAIJANI_CI,BENGALI,BENGALI_CI,BIG5,BIG5_CI,BINARY,BINARY_CI,BULGARIAN,BULGARIAN_CI,CANADIAN_M,CATALAN,CATALAN_CI,CROATIAN,CROATIAN_CI,CS_CZ,CZECH,CZECH_CI,CZECH_PUNCTUATION,CZECH_PUNCTUATION_CI,DANISH,DANISH_CI,DANISH_M,DA_DK,DE_DE,DUTCH,DUTCH_CI,EBCDIC,EBCDIC_CI,EEC_EURO,EEC_EUROPA3,EEC_EUROPA3_CI,EEC_EURO_CI,EN,EN_AU,EN_CA,EN_GB,EN_US,ESTONIAN,ESTONIAN_CI,ES_AR,ES_ES,FINNISH,FINNISH_CI,FI_FI,FRENCH,FRENCH_AI,FRENCH_CI,FRENCH_M,FR_CA,FR_FR,GBK,GBK_AI,GBK_CI,GENERIC_M,GERMAN,GERMAN_AI,GERMAN_CI,GERMAN_DIN,GERMAN_DIN_AI,GERMAN_DIN_CI,GREEK,GREEK_AI,GREEK_CI,HEBREW,HEBREW_AI,HEBREW_CI,HE_IL,HKSCS,HKSCS_AI,HKSCS_CI,HUNGARIAN,HUNGARIAN_AI,HUNGARIAN_CI,ICELANDIC,ICELANDIC_AI,ICELANDIC_CI,ID_ID,INDONESIAN,INDONESIAN_AI,INDONESIAN_CI,ITALIAN,ITALIAN_AI,ITALIAN_CI,IT_IT,JAPANESE_M,JA_JP,KOREAN_M,KO_KR,LATIN,LATIN_AI,LATIN_CI,LATVIAN,LATVIAN_AI,LATVIAN_CI,LITHUANIAN,LITHUANIAN_AI,LITHUANIAN_CI,MALAY,MALAY_AI,MALAY_CI,NL_NL,NO_NO,NORWEGIAN,NORWEGIAN_AI,NORWEGIAN_CI,POLISH,POLISH_AI,POLISH_CI,PT_BR,PUNCTUATION,PUNCTUATION_AI,PUNCTUATION_CI,ROMANIAN,ROMANIAN_AI,ROMANIAN_CI,RUSSIAN,RUSSIAN_AI,RUSSIAN_CI,RU_RU,SCHINESE_PINYIN_M,SCHINESE_RADICAL_M,SCHINESE_STROKE_M,SLOVAK,SLOVAK_AI,SLOVAK_CI,SLOVENIAN,SLOVENIAN_AI,SLOVENIAN_CI,SPANISH,SPANISH_AI,SPANISH_CI,SPANISH_M,SV_SE,SWEDISH,SWEDISH_AI,SWEDISH_CI,SWISS,SWISS_AI,SWISS_CI,TCHINESE_RADICAL_M,TCHINESE_STROKE_M,THAI_M,TH_TH,TR_TR,TURKISH,TURKISH_AI,TURKISH_CI,UKRAINIAN,UKRAINIAN_AI,UKRAINIAN_CI,UNICODE_BINARY,UNICODE_BINARY_AI,UNICODE_BINARY_CI,VIETNAMESE,VIETNAMESE_AI,VIETNAMESE_CI,VN_VN,WEST_EUROPEAN,WEST_EUROPEAN_AI,WEST_EUROPEAN_CI,ZH_CN,ZH_TW|}",
        "description": [
            "N/query Module",
            "query.SortLocale\n",
            "Enum Description:\nHolds the string values for sort locales supported with the N/query Module. This enum is used to pass the locale argument to Query.createSort(options) and Component.createSort(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.SortLocale\n"
        ]
    },
    "(N/query) query.Type": {
        "prefix": "query.Type",
        "body": "query.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ALLOCATION_METHOD,ALL_PARSER_PLUGIN,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AUTHORIZATION_CONSENT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_SCHEDULE,BILL_OF_DISTRIBUTION,BILL_RUN,BILL_RUN_SCHEDULE,BIN,BOM,BOM_REVISION,BOM_REVISION_COMPONENT,BUDGETCATEGORY,BUDGETS,BUDGET_EXCHANGE_RATE,BULK_PROC_SUBMISSION,BUNDLE_INSTALLATION_SCRIPT,BUNDLE_INSTALLATION_SCRIPT_DEPLOYMENT,BUSINESS_EVENTS_PROCESSING_HISTORY,CALENDAR_EVENT,CAMPAIGN_AUDIENCE,CAMPAIGN_CATEGORY,CAMPAIGN_CHANNEL,CAMPAIGN_EMAIL_ADDRESS,CAMPAIGN_EVENT,CAMPAIGN_FAMILY,CAMPAIGN_OFFER,CAMPAIGN_RESPONSE,CAMPAIGN_SEARCH_ENGINE,CAMPAIGN_SUBSCRIPTION,CAMPAIGN_TEMPLATE,CAMPAIGN_VERTICAL,CARDHOLDER_AUTHENTICATION,CARDHOLDER_AUTHENTICATION_EVENT,CATEGORY1099MISC,CHARGE,CHARGE_RULE,CHARGE_RUN,CHARGE_TYPE,CLASSIFICATION,CLIENT_SCRIPT,CLIENT_SCRIPT_DEPLOYMENT,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONSOLIDATED_RATE_ADJUSTOR_PLUGIN,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,CONTACT_SUBSIDIARY_RELATIONSHIP,COST_CATEGORY,COUPON_CODE,CURRENCY,CURRENCY_RATE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_MESSAGE,CUSTOMER_SEGMENT,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_FIELD,CUSTOM_FIELD_2,CUSTOM_GL_PLUGIN,CUSTOM_LIST,CUSTOM_RECORD_ACTION_SCRIPT,CUSTOM_RECORD_TYPE,CUSTOM_SEGMENT,CUSTOM_TRANSACTION_TYPE,DATASET_BUILDER_PLUGIN,DELETED_RECORD,DEPARTMENT,DEVICE_ID,DISTRIBUTION_CATEGORY,DISTRIBUTION_NETWORK,DOMAIN,DUAL,EMAIL_CAPTURE_PLUGIN,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_LIST,EMPLOYEE_STATUS,EMPLOYEE_SUBSIDIARY_RELATIONSHIP,EMPLOYEE_TYPE,ENTITY,ENTITY_GROUP,ENTITY_SUBSIDIARY_RELATIONSHIP,EXPENSE_CATEGORY,EXPENSE_REPORT_POLICY,FAX_TEMPLATE,FILE,FISCAL_CALENDAR,FI_CONNECTIVITY_PLUGIN,FORECAST,FULFILLMENT_EXCEPTION_REASON,FULFILLMENT_REQUEST,F_I_PARSER_PLUGIN,GATEWAY_NOTIFICATION,GENERAL_ALLOCATION_SCHEDULE,GENERAL_TOKEN,GENERIC_RESOURCE,GENERIC_RESOURCE_SUBSIDIARY_RELATIONSHIP,GIFT_CERTIFICATE,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_LINES_AUDIT_LOG,GL_LINES_PLUGIN_REVISION,G_L_NUMBERING_SEQUENCE,IMPORTED_EMPLOYEE_EXPENSE,INBOUND_SHIPMENT,INCO_TERM,INVENTORY_COST_TEMPLATE,INVENTORY_NUMBER,INVENTORY_STATUS,INVT_ITEM_PRICE_HISTORY,ISSUE,ITEM,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_DEMAND_PLAN,ITEM_LOCATION_CONFIGURATION,ITEM_SEGMENT_INCLUDING_SYNTHETIC,ITEM_SUPPLY_PLAN,I_P_RESTRICTIONS,JOB,JOB_RESOURCE_ROLE,JOB_STATUS,JOB_TYPE,KNOWLEDGE_BASE,LOCATION,LOCATION_COSTING_GROUP,LOGIN_AUDIT,MAIL_TEMPLATE,MANUFACTURING_COMPONENT,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MANUFACTURING_TRANSACTION,MAP_REDUCE_SCRIPT,MAP_REDUCE_SCRIPT_DEPLOYMENT,MASS_UPDATE_SCRIPT,MASS_UPDATE_SCRIPT_DEPLOYMENT,MEDIA_ITEM_FOLDER,MEM_DOC,MEM_DOC_TRANSACTION_TEMPLATE,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NOTE,ONLINE_CASE_FORM,ONLINE_FORM_TEMPLATE,ONLINE_LEAD_FORM,ORDER_ALLOCATION_STRATEGY,OTHER_NAME,OTHER_NAME_CATEGORY,OTHER_NAME_SUBSIDIARY_RELATIONSHIP,OUTBOUND_REQUEST,O_AUTH_TOKEN,PARTNER,PARTNER_SUBSIDIARY_RELATIONSHIP,PAYCHECK,PAYMENT_CARD,PAYMENT_CARD_SEARCH_RECORD,PAYMENT_CARD_TOKEN,PAYMENT_EVENT,PAYMENT_GATEWAY_PLUGIN,PAYMENT_INSTRUMENT,PAYMENT_METHOD,PAYMENT_PROCESSING_PROFILE,PAYMENT_RESULT_PREVIEW,PAYROLL_BATCH,PAYROLL_ITEM,PDF_TEMPLATE,PHONE_CALL,PLANNED_ORDER,PLANNED_STANDARD_COST,PLANNING_ITEM_CATEGORY,PLANNING_ITEM_GROUP,PLANNING_ITEM_GROUP_SOURCE,PLANNING_RULE_GROUP,PLATFORM_EXTENSION_PLUGIN,PLUG_IN_TYPE,PLUG_IN_TYPE_IMPL,PORTLET,PORTLET_DEPLOYMENT,PREDICTED_RISK_TRAIN_EVAL_HISTORY,PRICE_LEVEL,PRICING,PRICING_GROUP,PRICING_WITH_CUSTOMERS,PROJECT_BUDGET,PROJECT_EXPENSE_TYPE,PROJECT_FINANCIALS,PROJECT_SUBSIDIARY_RELATIONSHIP,PROJECT_TASK,PROJECT_TEMPLATE,PROJECT_TEMPLATE_SUBSIDIARY_RELATIONSHIP,PROMOTIONS_PLUGIN,PROMOTION_CODE,PUBLISHED_SAVED_SEARCH,QUANTITY_PRICING_SCHEDULE,QUOTA,RECENT_RECORD,RECORD_ACTION_SCRIPT_DEPLOYMENT,REDIRECT,RESOURCE_ALLOCATION,RESOURCE_GROUP,RESTLET,RESTLET_DEPLOYMENT,REV_REC_SCHEDULE,REV_REC_TEMPLATE,ROLE,SALES_INVOICED,SALES_ORDERED,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_DEPLOYMENT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT,SCRIPT_CUSTOM_RECORD_TYPE,SCRIPT_DEPLOYMENT,SCRIPT_NOTE,SCRIPT_RECORD_TYPE,SEARCH_CAMPAIGN,SENT_EMAIL,SHIPPING_PACKAGE,SHIPPING_PARTNERS_PLUGIN,SHIPPING_PARTNER_REGISTRATION,SHIP_ITEM,SHOPPING_CART,SITE_CATEGORY,SOLUTION,STANDARD_COST_VERSION,STATISTICAL_JOURNAL_ENTRY,STATISTICAL_SCHEDULE,STORE_PICKUP_FULFILLMENT,STORE_TAB,SUBLIST,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUITELET,SUITELET_DEPLOYMENT,SUITE_SCRIPT_DETAIL,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPLY_CHANGE_ORDER,SUPPLY_PLAN_DEFINITION,SUPPORT_CASE,SYSTEM_EMAIL_TEMPLATE,SYSTEM_NOTE,SYSTEM_NOTE2,SYSTEM_NOTE_FIELD,TAG,TASK,TASK_ITEM_STATUS,TAX_CALCULATION_PLUGIN,TAX_ITEM_TAX_GROUP,TAX_TYPE,TERM,TEST_PLUGIN,TIME_BILL,TIME_MODIFICATION_REQUEST,TIME_SHEET,TOPIC,TRACKING_NUMBER,TRANSACTION,TRANSACTION_ADDRESSBOOK,TRANSACTION_BILLING_ADDRESSBOOK,TRANSACTION_DELETION_REASON,TRANSACTION_HISTORY,TRANSACTION_NUMBERING_AUDIT_LOG,TRANSACTION_PAYEE_ADDRESSBOOK,TRANSACTION_RETURN_ADDRESSBOOK,TRANSACTION_SHIPPING_ADDRESSBOOK,UMD_FIELD,UNDELIVERED_EMAIL,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USER_AUTHORIZATION_CONSENT,USER_EVENT_SCRIPT,USER_EVENT_SCRIPT_DEPLOYMENT,USER_O_AUTH_TOKEN,USRSAVEDSEARCH,USR_AUDIT_LOG,USR_DS_AUDIT_LOG,USR_DS_EXECUTION_LOG,USR_EXECUTION_LOG,VENDOR,VENDOR_CATEGORY,VENDOR_SUBSIDIARY_RELATIONSHIP,WEBAPP,WEB_SITE,WORKBOOK_BUILDER_PLUGIN,WORKFLOW_ACTION_SCRIPT,WORKFLOW_ACTION_SCRIPT_DEPLOYMENT,WORKPLACE,WORK_CALENDAR,WBS|}",
        "description": [
            "N/query Module",
            "query.Type\n",
            "Enum Description:\nHolds the string values for query types used in the query definition. This enum is used to pass the initial query type argument to query.create(options).\nThe N/query module supports the same record types that are supported by the SuiteAnalytics Workbook interface. For more information, see Available Record Types.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Module:\nN/query Module\n",
            "Sibling Module Members:\nN/query Module Members\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=query.Type\n"
        ]
    },
    "(N/record) record.Column": {
        "prefix": "record.Column",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=record.Column for more information.",
        "description": [
            "N/record Module",
            "record.Column\n",
            "Object Description:\nEncapsulates a column of a sublist on a standard or custom record.\nFor a complete list of this object’s properties, see Column Object Members.\nThis object does not return a value, it returns information about the sublist column.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.Column\n"
        ]
    },
    "(N/record) Column.id": {
        "prefix": "Column.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.id for more information.",
        "description": [
            "N/record Module",
            "Column.id\n",
            "Property Description:\nReturns the internal ID of the column. Note that the Column.id value is the same as the value that is passed into fieldID.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.id\n"
        ]
    },
    "(N/record) Column.isDisabled": {
        "prefix": "Column.isDisabled",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.isDisabled for more information.",
        "description": [
            "N/record Module",
            "Column.isDisabled\n",
            "Property Description:\nIndicates whether the column is disabled.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.isDisabled\n"
        ]
    },
    "(N/record) Column.isDisplay": {
        "prefix": "Column.isDisplay",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.isDisplay for more information.",
        "description": [
            "N/record Module",
            "Column.isDisplay\n",
            "Property Description:\nIndicates whether the column is displayed.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.isDisplay\n"
        ]
    },
    "(N/record) Column.isMandatory": {
        "prefix": "Column.isMandatory",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.isMandatory for more information.",
        "description": [
            "N/record Module",
            "Column.isMandatory\n",
            "Property Description:\nIndicates whether the column is mandatory.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.isMandatory\n"
        ]
    },
    "(N/record) Column.isSortable": {
        "prefix": "Column.isSortable",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.isSortable for more information.",
        "description": [
            "N/record Module",
            "Column.isSortable\n",
            "Property Description:\nIndicates whether the column is sortable.\n",
            "Type:\nboolean (read-only)\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.isSortable\n"
        ]
    },
    "(N/record) Column.label": {
        "prefix": "Column.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.label for more information.",
        "description": [
            "N/record Module",
            "Column.label\n",
            "Property Description:\nReturns the internal ID of the column.\nThis property does not return a value, it returns information about the column label.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.label\n"
        ]
    },
    "(N/record) Column.sublistId": {
        "prefix": "Column.sublistId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.sublistId for more information.",
        "description": [
            "N/record Module",
            "Column.sublistId\n",
            "Property Description:\nReturns the internal ID of the standard or custom sublist that contains the column.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.sublistId\n"
        ]
    },
    "(N/record) Column.type": {
        "prefix": "Column.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.type for more information.",
        "description": [
            "N/record Module",
            "Column.type\n",
            "Property Description:\nReturns the column type. For more information on possible return values, see format.Type.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nColumn Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.type\n"
        ]
    },
    "(N/record) record.Field": {
        "prefix": "record.Field",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=record.Field for more information.",
        "description": [
            "N/record Module",
            "record.Field\n",
            "Object Description:\nEncapsulates a body or sublist field on a standard or custom record.\nUse the following methods to access the Field object:\nRecord.getField(options)\nRecord.getSublistField(options)\nRecord.getCurrentSublistField(options)\nCurrentRecord.getField(options)\nCurrentRecord.getSublistField(options)\nFor a complete list of this object’s methods and properties, see Field Object Members.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.Field\n"
        ]
    },
    "(N/record) Field.getSelectOptions(options)": {
        "prefix": "Field.getSelectOptions(options)",
        "body": [
            "${1:Field}.getSelectOptions({",
            "\tfilter: ${2:string},",
            "\toperator: ${3:string}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Field.getSelectOptions()\n",
            "Method Description:\nReturns an array of available options on a standard or custom select, multi-select, or radio field as key-value pairs.\nYou can only use this method on a record in dynamic mode. For additional information on dynamic mode, see record.Record and SuiteScript 2.0 – Standard and Dynamic Modes.\n",
            "Returns:\narray\nOnly the first 1,000 available options are returned in an array.\nIf there are more than 1,000 available options, an empty array [] is returned.\nThis function returns an array in the following format:\nThis function returns Type Error if the field is not a supported field for this method.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nField Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.getSelectOptions(options)\n"
        ]
    },
    "(N/record) Field.label": {
        "prefix": "Field.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.label for more information.",
        "description": [
            "N/record Module",
            "Field.label\n",
            "Property Description:\nReturns the UI label for a standard or custom field body or sublist field.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nField Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.label\n"
        ]
    },
    "(N/record) Field.id": {
        "prefix": "Field.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.id for more information.",
        "description": [
            "N/record Module",
            "Field.id\n",
            "Property Description:\nReturns the internal ID of a standard or custom body or sublist field.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nField Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.id\n"
        ]
    },
    "(N/record) Field.type": {
        "prefix": "Field.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.type for more information.",
        "description": [
            "N/record Module",
            "Field.type\n",
            "Property Description:\nReturns the type of a body or sublist field.\nFor example, the value can return text, date, currency, select, checkbox, etc. For more information on possible return values, see format.Type.\nThe maximum character limit for select field types is 801.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nField Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.type\n"
        ]
    },
    "(N/record) Field.isMandatory": {
        "prefix": "Field.isMandatory",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isMandatory for more information.",
        "description": [
            "N/record Module",
            "Field.isMandatory\n",
            "Property Description:\nReturns true if the standard or custom field is mandatory on the record form, or false otherwise.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nField Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isMandatory\n"
        ]
    },
    "(N/record) Field.sublistId": {
        "prefix": "Field.sublistId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.sublistId for more information.",
        "description": [
            "N/record Module",
            "Field.sublistId\n",
            "Property Description:\nReturns the sublist ID for the specified sublist field.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nField Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.sublistId\n"
        ]
    },
    "(N/record) Field.isDisplay": {
        "prefix": "Field.isDisplay",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isDisplay for more information.",
        "description": [
            "N/record Module",
            "Field.isDisplay\n",
            "Property Description:\nReturns true if the field is visible on the record form, or false if it is not.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nField Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isDisplay\n"
        ]
    },
    "(N/record) record.Macro": {
        "prefix": "record.Macro",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=record.Macro for more information.",
        "description": [
            "N/record Module",
            "record.Macro\n",
            "Object Description:\nEncapsulates a record macro. For information about record macros, see Overview of Record Action and Macro APIs.\nUse the Record.getMacro(options) method to access the Macro object.\nFor a complete list of this object’s methods and properties, see Macro Object Members.\n",
            "Supported Script Types:\nClient and server-side scripts.\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Methods and Properties:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.Macro\n"
        ]
    },
    "(N/record) Macro.execute(options)": {
        "prefix": "Macro.execute(options)",
        "body": [
            "${1:Macro}.execute({",
            "\tparams: ${2:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Macro.execute()\n",
            "Method Description:\nPerforms a macro operation and returns its result in a plain JavaScript object.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Returns:\n{notifications: [], response: {}}\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro.execute(options)\n"
        ]
    },
    "(N/record) Macro.execute.promise(options)": {
        "prefix": "Macro.execute.promise(options)",
        "body": [
            "${1:Macro}.execute.promise({",
            "\tparams: ${2:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "Macro.execute.promise()\n",
            "Method Description:\nPerforms a macro operation asynchronously.\nFor information about record macros, see Overview of Record Action and Macro APIs.\nThe parameters and errors thrown for this method are the same as those for Macro.execute(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor additional information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro.execute.promise(options)\n"
        ]
    },
    "(N/record) Macro(options)": {
        "prefix": "Macro(options)",
        "body": [
            "Macro({",
            "\tparams: ${2:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Macro()\n",
            "Method Description:\nPerforms a macro operation and returns its result in a plain JavaScript object.\nSubstitute Macro with the name of the macro you are executing.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Returns:\n{notifications: [], response: {}}\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro(options)\n"
        ]
    },
    "(N/record) Macro.promise(options)": {
        "prefix": "Macro.promise(options)",
        "body": [
            "${1:Macro}.promise({",
            "\tparams: ${2:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "Macro.promise()\n",
            "Method Description:\nPerforms a macro operation asynchronously.\nSubstitute Macro with the name of the macro you are executing.\nFor information about record macros, see Overview of Record Action and Macro APIs.\nThe parameters and errors thrown for this method are the same as those for Macro(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor additional information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro.promise(options)\n"
        ]
    },
    "(N/record) Macro.id": {
        "prefix": "Macro.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Macro.id for more information.",
        "description": [
            "N/record Module",
            "Macro.id\n",
            "Property Description:\nThe ID of the macro.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro.id\n"
        ]
    },
    "(N/record) Macro.label": {
        "prefix": "Macro.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Macro.label for more information.",
        "description": [
            "N/record Module",
            "Macro.label\n",
            "Property Description:\nThe label of the macro.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro.label\n"
        ]
    },
    "(N/record) Macro.description": {
        "prefix": "Macro.description",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Macro.description for more information.",
        "description": [
            "N/record Module",
            "Macro.description\n",
            "Property Description:\nThe description of the macro.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro.description\n"
        ]
    },
    "(N/record) Macro.attributes": {
        "prefix": "Macro.attributes",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Macro.attributes for more information.",
        "description": [
            "N/record Module",
            "Macro.attributes\n",
            "Property Description:\nThe defined attributes of the macro.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Type:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Parent Object:\nrecord.Macro\n",
            "Sibling Object Members:\nMacro Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Macro.attributes\n"
        ]
    },
    "(N/record) record.Record": {
        "prefix": "record.Record",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=record.Record for more information.",
        "description": [
            "N/record Module",
            "record.Record\n",
            "Object Description:\nEncapsulates a NetSuite record.\nThere are two modes you can operate in when you create, copy, load, or transform a record with SuiteScript 2.0: standard mode and dynamic mode.\nWhen a SuiteScript 2.0 script creates, copies, loads, or transforms a record in standard mode, the record’s body fields and sublist line items are not sourced, calculated, and validated until the record is saved (submitted) with Record.save(options).\nWhen you work with a record in standard mode, you do not need to set values in any particular order. After submitting the record, NetSuite processes the record’s body fields and sublist line items in the correct order, regardless of the organization of your script.\nWhen a SuiteScript 2.0 script creates, copies, loads, or transforms a record in dynamic mode, the record’s body fields and sublist line items are sourced, calculated, and validated in real-time. A record in dynamic mode emulates the behavior of a record in the UI.\nWhen you work with a record in dynamic mode, it is important that you set values in the same order you would within the UI. If you fail to do this, your results may not be accurate.\nThe record.create(options), record.copy(options), record.load(options), and record.transform(options) methods work in standard mode by default. If you want these methods to work in dynamic mode, you must pass in a specific argument. See the help topic for the applicable method for more information.\nUse record.Type enum for multiple records. For help finding a record’s internal ID, see How do I find a record's internal ID?\nFor more information about standard and dynamic modes, see SuiteScript 2.0 – Standard and Dynamic Modes\nFor a complete list of this object’s methods and properties, see Record Object Members.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.Record\n"
        ]
    },
    "(N/record) Record.cancelLine(options)": {
        "prefix": "Record.cancelLine(options)",
        "body": [
            "${1:Record}.cancelLine({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.cancelLine()\n",
            "Method Description:\nCancels the currently selected line on a sublist.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nThe record.Record object that called the method.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.cancelLine(options)\n"
        ]
    },
    "(N/record) Record.commitLine(options)": {
        "prefix": "Record.commitLine(options)",
        "body": [
            "${1:Record}.commitLine({",
            "\tsublistId: ${2:string*},",
            "\tignoreRecalc: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.commitLine()\n",
            "Method Description:\nCommits the currently selected line on a sublist. (dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nWhen working in standard mode, set a sublist field using Record.setSublistValue(options).\n",
            "Returns:\nThe record.Record object that called the method.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.commitLine(options)\n"
        ]
    },
    "(N/record) Record.executeMacro(options)": {
        "prefix": "Record.executeMacro(options)",
        "body": [
            "${1:Record}.executeMacro({",
            "\tid: ${2:string*},",
            "\tparams: ${3:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.executeMacro()\n",
            "Method Description:\nPerforms macro operation and returns its result in a plain JavaScript object.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Returns:\nAn object with the macro results or null.\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.executeMacro(options)\n"
        ]
    },
    "(N/record) Record.executeMacro.promise(options)": {
        "prefix": "Record.executeMacro.promise(options)",
        "body": [
            "${1:Record}.executeMacro.promise({",
            "\tid: ${2:string*},",
            "\tparams: ${3:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "Record.executeMacro.promise()\n",
            "Method Description:\nPerforms macro operation and returns its result in a plain JavaScript object.\nFor information about record macros, see Overview of Record Action and Macro APIs.\nThe parameters and errors thrown for this method are the same as those for Record.executeMacro(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor additional information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.executeMacro.promise(options)\n"
        ]
    },
    "(N/record) Record.findMatrixSublistLineWithValue(options)": {
        "prefix": "Record.findMatrixSublistLineWithValue(options)",
        "body": [
            "${1:Record}.findMatrixSublistLineWithValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tvalue: ${4:number*},",
            "\tcolumn: ${5:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.findMatrixSublistLineWithValue()\n",
            "Method Description:\nReturns the line number of the first instance where a specified value is found in a specified column of the matrix. Note that line and column indexing begins at 0 with SuiteScript 2.0.\n(dynamic and standard modes — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.findMatrixSublistLineWithValue(options)\n"
        ]
    },
    "(N/record) Record.findSublistLineWithValue(options)": {
        "prefix": "Record.findSublistLineWithValue(options)",
        "body": [
            "${1:Record}.findSublistLineWithValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tvalue: ${4:number | Date | string | array | boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.findSublistLineWithValue()\n",
            "Method Description:\nReturns the line number for the first occurrence of a field value in a sublist. Note that line indexing begins at 0 with SuiteScript 2.0.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nA line number as a number, or -1 if not found.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.findSublistLineWithValue(options)\n"
        ]
    },
    "(N/record) Record.getCurrentMatrixSublistValue(options)": {
        "prefix": "Record.getCurrentMatrixSublistValue(options)",
        "body": [
            "${1:Record}.getCurrentMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getCurrentMatrixSublistValue()\n",
            "Method Description:\nGets the value for the currently selected line in the matrix.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nGets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getCurrentMatrixSublistValue(options)\n"
        ]
    },
    "(N/record) Record.getCurrentSublistField(options)": {
        "prefix": "Record.getCurrentSublistField(options)",
        "body": [
            "${1:Record}.getCurrentSublistField({",
            "\tfieldId: ${2:string*},",
            "\tsublistId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getCurrentSublistField()\n",
            "Method Description:\nReturns metadata about a sublist field.\n(dynamic mode only— see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Field\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getCurrentSublistField(options)\n"
        ]
    },
    "(N/record) Record.getCurrentSublistIndex(options)": {
        "prefix": "Record.getCurrentSublistIndex(options)",
        "body": [
            "${1:Record}.getCurrentSublistIndex({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getCurrentSublistIndex()\n",
            "Method Description:\nReturns the line number of the currently selected line. Note that line indexing begins at 0 with SuiteScript 2.0.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getCurrentSublistIndex(options)\n"
        ]
    },
    "(N/record) Record.getCurrentSublistSubrecord(options)": {
        "prefix": "Record.getCurrentSublistSubrecord(options)",
        "body": [
            "${1:Record}.getCurrentSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getCurrentSublistSubrecord()\n",
            "Method Description:\nGets the subrecord for the associated sublist field on the current line.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getCurrentSublistSubrecord(options)\n"
        ]
    },
    "(N/record) Record.getCurrentSublistText(options)": {
        "prefix": "Record.getCurrentSublistText(options)",
        "body": [
            "${1:Record}.getCurrentSublistText({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getCurrentSublistText()\n",
            "Method Description:\nReturns a text representation of the field value in the currently selected line.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nGets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nstring\nFor multiselect fields, returns an array.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getCurrentSublistText(options)\n"
        ]
    },
    "(N/record) Record.getCurrentSublistValue(options)": {
        "prefix": "Record.getCurrentSublistValue(options)",
        "body": [
            "${1:Record}.getCurrentSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getCurrentSublistValue()\n",
            "Method Description:\nReturns the value of a sublist field on the currently selected sublist line.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes )\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getCurrentSublistValue(options)\n"
        ]
    },
    "(N/record) Record.getField(options)": {
        "prefix": "Record.getField(options)",
        "body": [
            "${1:Record}.getField({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getField()\n",
            "Method Description:\nReturns a field object from a record.\n(dynamic and standard modes — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Field\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getField(options)\n"
        ]
    },
    "(N/record) Record.getFields()": {
        "prefix": "Record.getFields()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Record.getFields() for more information.",
        "description": [
            "N/record Module",
            "Record.getFields()\n",
            "Method Description:\nReturns the body field names (internal ids) of all the fields in the record, including machine header field and matrix header fields.\n(dynamic and standard modes — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getFields()\n"
        ]
    },
    "(N/record) Record.getLineCount(options)": {
        "prefix": "Record.getLineCount(options)",
        "body": [
            "${1:Record}.getLineCount({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getLineCount()\n",
            "Method Description:\nReturns the number of lines in a sublist.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getLineCount(options)\n"
        ]
    },
    "(N/record) Record.getMacro(options)": {
        "prefix": "Record.getMacro(options)",
        "body": [
            "${1:Record}.getMacro({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getMacro()\n",
            "Method Description:\nProvides a macro to be executed.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Returns:\nFunction to be executed for the macro.\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMacro(options)\n"
        ]
    },
    "(N/record) Record.getMacros()": {
        "prefix": "Record.getMacros()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMacros() for more information.",
        "description": [
            "N/record Module",
            "Record.getMacros()\n",
            "Method Description:\nProvides a plain JavaScript object of available macro objects defined for a record type, indexed by the Macro ID. The object returns one or more record.Macro objects. If there are no macros available for the specified record type, an empty object is returned.\nFor information about record macros, see Overview of Record Action and Macro APIs.\n",
            "Returns:\nObject\n",
            "Supported Script Types:\nClient and server scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMacros()\n"
        ]
    },
    "(N/record) Record.getMatrixHeaderCount(options)": {
        "prefix": "Record.getMatrixHeaderCount(options)",
        "body": [
            "${1:Record}.getMatrixHeaderCount({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getMatrixHeaderCount()\n",
            "Method Description:\nReturns the number of columns for the specified matrix.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMatrixHeaderCount(options)\n"
        ]
    },
    "(N/record) Record.getMatrixHeaderField(options)": {
        "prefix": "Record.getMatrixHeaderField(options)",
        "body": [
            "${1:Record}.getMatrixHeaderField({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getMatrixHeaderField()\n",
            "Method Description:\nGets the field for the specified header in the matrix.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Field\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMatrixHeaderField(options)\n"
        ]
    },
    "(N/record) Record.getMatrixHeaderValue(options)": {
        "prefix": "Record.getMatrixHeaderValue(options)",
        "body": [
            "${1:Record}.getMatrixHeaderValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getMatrixHeaderValue()\n",
            "Method Description:\nGets the value for the associated header in the matrix.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\nGets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMatrixHeaderValue(options)\n"
        ]
    },
    "(N/record) Record.getMatrixSublistField(options)": {
        "prefix": "Record.getMatrixSublistField(options)",
        "body": [
            "${1:Record}.getMatrixSublistField({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tline: ${5:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getMatrixSublistField()\n",
            "Method Description:\nGets the field for the specified sublist in the matrix.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Field\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMatrixSublistField(options)\n"
        ]
    },
    "(N/record) Record.getMatrixSublistValue(options)": {
        "prefix": "Record.getMatrixSublistValue(options)",
        "body": [
            "${1:Record}.getMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tline: ${5:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getMatrixSublistValue()\n",
            "Method Description:\nGets the value for the associated field in the matrix.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getMatrixSublistValue(options)\n"
        ]
    },
    "(N/record) Record.getSublist(options)": {
        "prefix": "Record.getSublist(options)",
        "body": [
            "${1:Record}.getSublist({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getSublist()\n",
            "Method Description:\nReturns the specified sublist.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Sublist\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublist(options)\n"
        ]
    },
    "(N/record) Record.getSublists()": {
        "prefix": "Record.getSublists()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublists() for more information.",
        "description": [
            "N/record Module",
            "Record.getSublists()\n",
            "Method Description:\nReturns all the names of all the sublists.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublists()\n"
        ]
    },
    "(N/record) Record.getSublistField(options)": {
        "prefix": "Record.getSublistField(options)",
        "body": [
            "${1:Record}.getSublistField({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getSublistField()\n",
            "Method Description:\nReturns a field object from a sublist.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Field\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublistField(options)\n"
        ]
    },
    "(N/record) Record.getSublistFields(options)": {
        "prefix": "Record.getSublistFields(options)",
        "body": [
            "${1:Record}.getSublistFields({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getSublistFields()\n",
            "Method Description:\nReturns all the field names in a sublist.\n(standard and dynamic mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublistFields(options)\n"
        ]
    },
    "(N/record) Record.getSublistSubrecord(options)": {
        "prefix": "Record.getSublistSubrecord(options)",
        "body": [
            "${1:Record}.getSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getSublistSubrecord()\n",
            "Method Description:\nGets the subrecord associated with a sublist field. (standard mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nWhen working in dynamic mode, get a sublist subrecord using the following methods:\nRecord.selectLine(options)\nRecord.hasCurrentSublistSubrecord(options)\nRecord.getCurrentSublistSubrecord(options)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublistSubrecord(options)\n"
        ]
    },
    "(N/record) Record.getSublistText(options)": {
        "prefix": "Record.getSublistText(options)",
        "body": [
            "${1:Record}.getSublistText({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getSublistText()\n",
            "Method Description:\nReturns the value of a sublist field in a text representation.\n(standard mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nGets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nstring\nFor multiselect fields, returns an array.\n",
            "Supported Script Types:\nClient and server-side scripts.\nFor more information, see SuiteScript 2.0 Script Types.\nLimitations exist on how this method can be used in standard (deferredDynamic) mode. For details, refer to the description of the SSS_INVALID_API_USAGE error code in the Errors table.\nIn dynamic mode, you can use getSublistText() without limitation.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublistText(options)\n"
        ]
    },
    "(N/record) Record.getSublistValue(options)": {
        "prefix": "Record.getSublistValue(options)",
        "body": [
            "${1:Record}.getSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getSublistValue()\n",
            "Method Description:\nReturns the value of a sublist field.\n(dynamic and standard modes — see SuiteScript 2.0 – Standard and Dynamic Modes)\nGets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nnumber | Date | string | array | boolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSublistValue(options)\n"
        ]
    },
    "(N/record) Record.getSubrecord(options)": {
        "prefix": "Record.getSubrecord(options)",
        "body": [
            "${1:Record}.getSubrecord({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getSubrecord()\n",
            "Method Description:\nGets the subrecord for the associated field.\nThis method is not available for subrecords.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getSubrecord(options)\n"
        ]
    },
    "(N/record) Record.getText(options)": {
        "prefix": "Record.getText(options)",
        "body": [
            "${1:Record}.getText({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getText()\n",
            "Method Description:\nReturns the text representation of a field value.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\nGets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nstring\nFor multiselect fields, returns an array.\n",
            "Supported Script Types:\nClient and server-side scripts.\nFor more information, see SuiteScript 2.0 Script Types.\nIn dynamic mode, you can use getText() without limitation but, in standard mode, limitations exist. In standard mode, you can use this method only in the following cases:\nYou can use getText() on any field where the script has already used setText().\nIf you are loading or copying a record, you can use getText on any field except those where the script has already changed the value by using setValue().\nFor more details, refer to the description of the SSS_INVALID_API_USAGE error code in the Errors table.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getText(options)\n"
        ]
    },
    "(N/record) Record.getValue(options)": {
        "prefix": "Record.getValue(options)",
        "body": [
            "${1:Record}.getValue({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.getValue()\n",
            "Method Description:\nReturns the value of a field.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\nGets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nnumber | Date | string | array | boolean\nReturns a JavaScript Date object for date/time field queries. To return a string for date/time field queries, use Record.getText(options). Date/time fields: DATE, DATETIME, DATETIMETZ, TIMEOFDAY.\nIf the returned date object is implicitly converted to a string, the value is converted using the browser’s setting for time zone.\nAll fields of type CHECKBOX return true or false.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.getValue(options)\n"
        ]
    },
    "(N/record) Record.hasCurrentSublistSubrecord(options)": {
        "prefix": "Record.hasCurrentSublistSubrecord(options)",
        "body": [
            "${1:Record}.hasCurrentSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.hasCurrentSublistSubrecord()\n",
            "Method Description:\nReturns a value indicating whether the associated sublist field has a subrecord on the current line.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.hasCurrentSublistSubrecord(options)\n"
        ]
    },
    "(N/record) Record.hasSublistSubrecord(options)": {
        "prefix": "Record.hasSublistSubrecord(options)",
        "body": [
            "${1:Record}.hasSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.hasSublistSubrecord()\n",
            "Method Description:\nReturns a value indicating whether the associated sublist field contains a subrecord.\nThis method is not available for subrecords.\n(standard mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.hasSublistSubrecord(options)\n"
        ]
    },
    "(N/record) Record.hasSubrecord(options)": {
        "prefix": "Record.hasSubrecord(options)",
        "body": [
            "${1:Record}.hasSubrecord({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.hasSubrecord()\n",
            "Method Description:\nReturns a value indicating whether the field contains a subrecord.\nThis method is not available for subrecords.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.hasSubrecord(options)\n"
        ]
    },
    "(N/record) Record.insertLine(options)": {
        "prefix": "Record.insertLine(options)",
        "body": [
            "${1:Record}.insertLine({",
            "\tsublistId: ${2:string*},",
            "\tline: ${3:number*},",
            "\tignoreRecalc: ${4:boolean},",
            "\tbeforeLineInstanceId: ${5:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.insertLine()\n",
            "Method Description:\nInserts a sublist line.\nWhen you insert a line with this method, all succeeding lines are moved and the total line count is increased. Essentially, succeeding lines are committed to a new sublist line with a new line number.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.insertLine(options)\n"
        ]
    },
    "(N/record) Record.removeCurrentSublistSubrecord(options)": {
        "prefix": "Record.removeCurrentSublistSubrecord(options)",
        "body": [
            "${1:Record}.removeCurrentSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.removeCurrentSublistSubrecord()\n",
            "Method Description:\nRemoves the subrecord for the associated sublist field on the current line.\nThis method is not available for subrecords.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.removeCurrentSublistSubrecord(options)\n"
        ]
    },
    "(N/record) Record.removeLine(options)": {
        "prefix": "Record.removeLine(options)",
        "body": [
            "${1:Record}.removeLine({",
            "\tsublistId: ${2:string*},",
            "\tline: ${3:number*},",
            "\tignoreRecalc: ${4:boolean},",
            "\tlineInstanceId: ${5:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.removeLine()\n",
            "Method Description:\nRemoves a sublist line.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.removeLine(options)\n"
        ]
    },
    "(N/record) Record.removeSublistSubrecord(options)": {
        "prefix": "Record.removeSublistSubrecord(options)",
        "body": [
            "${1:Record}.removeSublistSubrecord({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.removeSublistSubrecord()\n",
            "Method Description:\nRemoves the subrecord for the associated sublist field. (standard mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nWhen working in dynamic mode, remove a sublist subrecord using the following methods:\nRecord.selectLine(options)\nRecord.hasCurrentSublistSubrecord(options)\nRecord.removeCurrentSublistSubrecord(options)\nRecord.commitLine(options)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.removeSublistSubrecord(options)\n"
        ]
    },
    "(N/record) Record.removeSubrecord(options)": {
        "prefix": "Record.removeSubrecord(options)",
        "body": [
            "${1:Record}.removeSubrecord({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.removeSubrecord()\n",
            "Method Description:\nRemoves the subrecord for the associated field.\nThis method is not available for subrecords.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.removeSubrecord(options)\n"
        ]
    },
    "(N/record) Record.save(options)": {
        "prefix": "Record.save(options)",
        "body": [
            "${1:Record}.save({",
            "\tenableSourcing: ${2:boolean},",
            "\tignoreMandatoryFields: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.save()\n",
            "Method Description:\nSubmits a new record or saves edits to an existing record.\nWhen working with records in standard mode, you must submit and then load the record to obtain sourced, validated, and calculated field values.\nThis method is not available to subrecords.\nThis method has an asynchronous counterpart you can use with client scripts. See Record.save.promise(options).\n",
            "Returns:\nA number representing the internal ID of the new or updated record.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nTransaction records: 20 units\nCustom records: 4 units\nAll other records: 10 units\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.save(options)\n"
        ]
    },
    "(N/record) Record.save.promise(options)": {
        "prefix": "Record.save.promise(options)",
        "body": [
            "${1:Record}.save.promise({",
            "\tenableSourcing: ${2:boolean},",
            "\tignoreMandatoryFields: ${3:boolean}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "Record.save.promise()\n",
            "Method Description:\nSubmits a new record asynchronously or saves edits to an existing record asynchronously.\nThis method is not available to subrecords.\nThe parameters and errors thrown for this method are the same as those for Record.save(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nTransaction records: 20 units\nCustom records: 4 units\nAll other records: 10 units\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.save.promise(options)\n"
        ]
    },
    "(N/record) Record.selectLine(options)": {
        "prefix": "Record.selectLine(options)",
        "body": [
            "${1:Record}.selectLine({",
            "\tsublistId: ${2:string*},",
            "\tline: ${3:number*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.selectLine()\n",
            "Method Description:\nSelects an existing line in a sublist. (dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nWhen working in standard mode, set a sublist field using Record.setSublistValue(options).\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.selectLine(options)\n"
        ]
    },
    "(N/record) Record.selectNewLine(options)": {
        "prefix": "Record.selectNewLine(options)",
        "body": [
            "${1:Record}.selectNewLine({",
            "\tsublistId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.selectNewLine()\n",
            "Method Description:\nSelects a new line at the end of a sublist.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.selectNewLine(options)\n"
        ]
    },
    "(N/record) Record.setCurrentMatrixSublistValue(options)": {
        "prefix": "Record.setCurrentMatrixSublistValue(options)",
        "body": [
            "${1:Record}.setCurrentMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tvalue: ${5:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setCurrentMatrixSublistValue()\n",
            "Method Description:\nSets the value for the line currently selected in the matrix.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nSets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setCurrentMatrixSublistValue(options)\n"
        ]
    },
    "(N/record) Record.setCurrentSublistText(options)": {
        "prefix": "Record.setCurrentSublistText(options)",
        "body": [
            "${1:Record}.setCurrentSublistText({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\ttext: ${4:string*},",
            "\tignoreFieldChange: ${5:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setCurrentSublistText()\n",
            "Method Description:\nSets the value for the field in the currently selected line by a text representation.\n(dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nSets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setCurrentSublistText(options)\n"
        ]
    },
    "(N/record) Record.setCurrentSublistValue(options)": {
        "prefix": "Record.setCurrentSublistValue(options)",
        "body": [
            "${1:Record}.setCurrentSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tvalue: ${4:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${5:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setCurrentSublistValue()\n",
            "Method Description:\nSets the value for the field in the currently selected line. (dynamic mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nWhen working in standard mode, set a sublist field using Record.setSublistValue(options).\nWhen you edit a sublist line with SuiteScript, it triggers an internal validation of the sublist line. If the line validation fails, the script also fails. For example, if your script edits a closed catch up period, the validation fails and prevents SuiteScript from editing the closed catch up period.\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setCurrentSublistValue(options)\n"
        ]
    },
    "(N/record) Record.setMatrixHeaderValue(options)": {
        "prefix": "Record.setMatrixHeaderValue(options)",
        "body": [
            "${1:Record}.setMatrixHeaderValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tvalue: ${5:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setMatrixHeaderValue()\n",
            "Method Description:\nSets the value for the associated header in the matrix.\n(dynamic and standard modes — see SuiteScript 2.0 – Standard and Dynamic Modes)\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setMatrixHeaderValue(options)\n"
        ]
    },
    "(N/record) Record.setMatrixSublistValue(options)": {
        "prefix": "Record.setMatrixSublistValue(options)",
        "body": [
            "${1:Record}.setMatrixSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tcolumn: ${4:number*},",
            "\tline: ${5:number*},",
            "\tvalue: ${6:number | Date | string | array | boolean*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setMatrixSublistValue()\n",
            "Method Description:\nSets the value for the associated field in the matrix.\n(standard mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setMatrixSublistValue(options)\n"
        ]
    },
    "(N/record) Record.setSublistText(options)": {
        "prefix": "Record.setSublistText(options)",
        "body": [
            "${1:Record}.setSublistText({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*},",
            "\ttext: ${5:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setSublistText()\n",
            "Method Description:\nSets the value of a sublist field by a text representation. (standard mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nWhen working in dynamic mode, set a sublist field text using the following methods:\nRecord.selectLine(options)\nRecord.setCurrentSublistText(options)\nRecord.commitLine(options)\nSets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setSublistText(options)\n"
        ]
    },
    "(N/record) Record.setSublistValue(options)": {
        "prefix": "Record.setSublistValue(options)",
        "body": [
            "${1:Record}.setSublistValue({",
            "\tsublistId: ${2:string*},",
            "\tfieldId: ${3:string*},",
            "\tline: ${4:number*},",
            "\tvalue: ${5:number | Date | string | array | boolean*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setSublistValue()\n",
            "Method Description:\nSets the value of a sublist field. (standard mode only — see SuiteScript 2.0 – Standard and Dynamic Modes)\nWhen working in dynamic mode, set a sublist field value using the following methods:\nRecord.selectLine(options)\nRecord.setCurrentSublistValue(options)\nRecord.commitLine(options)\nWhen you edit a sublist line with SuiteScript, it triggers an internal validation of the sublist line. If the line validation fails, the script also fails. For example, if your script edits a closed catch up period, the validation fails and prevents SuiteScript from editing the closed catch up period.\nSets a numeric value for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setSublistValue(options)\n"
        ]
    },
    "(N/record) Record.setText(options)": {
        "prefix": "Record.setText(options)",
        "body": [
            "${1:Record}.setText({",
            "\tfieldId: ${2:string*},",
            "\ttext: ${3:string | array*},",
            "\tignoreFieldChange: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setText()\n",
            "Method Description:\nSets the value of the field by a text representation.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\nSets a string value with a \"%\" for rate and ratehighprecision fields.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setText(options)\n"
        ]
    },
    "(N/record) Record.setValue(options)": {
        "prefix": "Record.setValue(options)",
        "body": [
            "${1:Record}.setValue({",
            "\tfieldId: ${2:string*},",
            "\tvalue: ${3:number | Date | string | array | boolean*},",
            "\tignoreFieldChange: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Record.setValue()\n",
            "Method Description:\nSets the value of a field.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.setValue(options)\n"
        ]
    },
    "(N/record) Record.id": {
        "prefix": "Record.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Record.id for more information.",
        "description": [
            "N/record Module",
            "Record.id\n",
            "Property Description:\nThe internal ID of a specific record.\nThis property is not available to subrecords.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.id\n"
        ]
    },
    "(N/record) Record.isDynamic": {
        "prefix": "Record.isDynamic",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Record.isDynamic for more information.",
        "description": [
            "N/record Module",
            "Record.isDynamic\n",
            "Property Description:\nIndicates whether the record is in dynamic or standard mode.\nIf set to true, the record is currently in dynamic mode. If set to false, the record is currently in standard mode.\nWhen a SuiteScript 2.0 script creates, copies, loads, or transforms a record in standard mode, the record’s body fields and sublist line items are not sourced, calculated, and validated until the record is saved (submitted) with Record.save(options).\nWhen you work with a record in standard mode, you do not need to set values in any particular order. After submitting the record, NetSuite processes the record’s body fields and sublist line items in the correct order, regardless of the organization of your script.\nWhen a SuiteScript 2.0 script creates, copies, loads, or transforms a record in dynamic mode, the record’s body fields and sublist line items are sourced, calculated, and validated in real-time. A record in dynamic mode emulates the behavior of a record in the UI.\nWhen you work with a record in dynamic mode, it is important that you set values in the same order you would within the UI. If you fail to do this, your results may not be accurate.\nThis value is set when the record is created or accessed.\n(dynamic and standard mode — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Type:\nboolean (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.isDynamic\n"
        ]
    },
    "(N/record) Record.type": {
        "prefix": "Record.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Record.type for more information.",
        "description": [
            "N/record Module",
            "Record.type\n",
            "Property Description:\nThe record type. Note the following:\nWhen working with an instance of a standard NetSuite record type, set this value by using the record.Type enum.\nWhen working with an instance of a custom record type, set this value by using the custom record type’s string ID. For help finding this ID, see Custom Record.\nThis property is not available to subrecords.\n(dynamic and standard modes — see SuiteScript 2.0 – Standard and Dynamic Modes)\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nRecord Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Record.type\n"
        ]
    },
    "(N/record) record.Sublist": {
        "prefix": "record.Sublist",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=record.Sublist for more information.",
        "description": [
            "N/record Module",
            "record.Sublist\n",
            "Object Description:\nEncapsulates a sublist on a standard or custom record.\nFor a complete list of this object’s methods and properties, see Sublist Object Members.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.Sublist\n"
        ]
    },
    "(N/record) Sublist.getColumn(options)": {
        "prefix": "Sublist.getColumn(options)",
        "body": [
            "${1:Sublist}.getColumn({",
            "\tfieldId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "Sublist.getColumn()\n",
            "Method Description:\nReturns a column in the sublist.\n",
            "Returns:\nrecord.Column\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nSublist Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.getColumn(options)\n"
        ]
    },
    "(N/record) Sublist.id": {
        "prefix": "Sublist.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.id for more information.",
        "description": [
            "N/record Module",
            "Sublist.id\n",
            "Property Description:\nReturns the internal ID of the sublist.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nSublist Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.id\n"
        ]
    },
    "(N/record) Sublist.isChanged": {
        "prefix": "Sublist.isChanged",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isChanged for more information.",
        "description": [
            "N/record Module",
            "Sublist.isChanged\n",
            "Property Description:\nIndicates whether the sublist has changed on the record form.\n",
            "Type:\nboolean (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nSublist Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isChanged\n"
        ]
    },
    "(N/record) Sublist.isDisplay": {
        "prefix": "Sublist.isDisplay",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isDisplay for more information.",
        "description": [
            "N/record Module",
            "Sublist.isDisplay\n",
            "Property Description:\nIndicates whether the sublist is displayed on the record form.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nSublist Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.isDisplay\n"
        ]
    },
    "(N/record) Sublist.type": {
        "prefix": "Sublist.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.type for more information.",
        "description": [
            "N/record Module",
            "Sublist.type\n",
            "Property Description:\nReturns the sublist type. For more information on sublist types, see serverWidget.SublistType.\nSublist.type will return a lower case string representing the sublist type. For example, inlineeditor not INLINEEDITOR.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Sibling Object Members:\nSublist Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.type\n"
        ]
    },
    "(N/record) record.attach(options)": {
        "prefix": "record.attach(options)",
        "body": [
            "${1:record}.attach({",
            "\trecord: {",
            "\t\ttype: ${3:string*},",
            "\t\tid: ${4:number | string*}",
            "\t\t},",
            "\tto: {",
            "\t\ttype: ${6:string*},",
            "\t\tid: ${7:number | string*}",
            "\t\t},",
            "\tattributes: ${8:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.attach()\n",
            "Method Description:\nAttaches a record to another record.\nFor the promise version of this method, see record.attach.promise(options). Note that promises are only supported in client scripts.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.attach(options)\n"
        ]
    },
    "(N/record) record.attach.promise(options)": {
        "prefix": "record.attach.promise(options)",
        "body": [
            "${1:record}.attach.promise({",
            "\trecord: {",
            "\t\ttype: ${3:string*},",
            "\t\tid: ${4:number | string*}",
            "\t\t},",
            "\tto: {",
            "\t\ttype: ${6:string*},",
            "\t\tid: ${7:number | string*}",
            "\t\t},",
            "\tattributes: ${8:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.attach.promise()\n",
            "Method Description:\nAttaches a record asynchronously to another record.\nThe parameters and errors thrown for this method are the same as those for record.attach(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.attach.promise(options)\n"
        ]
    },
    "(N/record) record.copy(options)": {
        "prefix": "record.copy(options)",
        "body": [
            "${1:record}.copy({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number*},",
            "\tisDynamic: ${4:boolean},",
            "\tdefaultValues: ${5:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.copy()\n",
            "Method Description:\nCreates a new record by copying an existing record in NetSuite.\nFor the promise version of this method, see record.copy.promise(options). Note that promises are only supported in client scripts.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.copy(options)\n"
        ]
    },
    "(N/record) record.copy.promise(options)": {
        "prefix": "record.copy.promise(options)",
        "body": [
            "${1:record}.copy.promise({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number*},",
            "\tisDynamic: ${4:boolean},",
            "\tdefaultValues: ${5:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.copy.promise()\n",
            "Method Description:\nCreates a new record asynchronously by copying an existing record in NetSuite.\nThe parameters and errors thrown for this method are the same as those for record.copy(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.copy.promise(options)\n"
        ]
    },
    "(N/record) record.create(options)": {
        "prefix": "record.create(options)",
        "body": [
            "${1:record}.create({",
            "\ttype: ${2:string*},",
            "\tisDynamic: ${3:boolean},",
            "\tdefaultValues: ${4:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.create()\n",
            "Method Description:\nCreates a new record.\nFor the promise version of this method, see record.create.promise(options). Note that promises are only supported in client scripts.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.create(options)\n"
        ]
    },
    "(N/record) record.create.promise(options)": {
        "prefix": "record.create.promise(options)",
        "body": [
            "${1:record}.create.promise({",
            "\ttype: ${2:string*},",
            "\tisDynamic: ${3:boolean},",
            "\tdefaultValues: ${4:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.create.promise()\n",
            "Method Description:\nCreates a new record asynchronously.\nThe parameters and errors thrown for this method are the same as those for record.create(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.create.promise(options)\n"
        ]
    },
    "(N/record) record.delete(options)": {
        "prefix": "record.delete(options)",
        "body": [
            "${1:record}.delete({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number | string*}",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.delete()\n",
            "Method Description:\nDeletes a record.\nFor the promise version of this method, see record.delete.promise(options). Note that promises are only supported in client scripts.\n",
            "Returns:\nThe internal ID of the deleted record.Record.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nTransaction records: 20 units\nCustom records: 4 units\nAll other records: 10 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.delete(options)\n"
        ]
    },
    "(N/record) record.delete.promise(options)": {
        "prefix": "record.delete.promise(options)",
        "body": [
            "${1:record}.delete.promise({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number | string*}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.delete.promise()\n",
            "Method Description:\nDeletes a record asynchronously.\nThe parameters and errors thrown for this method are the same as those for record.delete(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nTransaction records: 20 units\nCustom records: 4 units\nAll other records: 10 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.delete.promise(options)\n"
        ]
    },
    "(N/record) record.detach(options)": {
        "prefix": "record.detach(options)",
        "body": [
            "${1:record}.detach({",
            "\trecord: {",
            "\t\ttype: ${3:string*},",
            "\t\tid: ${4:number | string*}",
            "\t\t},",
            "\tfrom: {",
            "\t\ttype: ${6:string*},",
            "\t\tid: ${7:number | string*}",
            "\t\t},",
            "\tattributes: ${8:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.detach()\n",
            "Method Description:\nDetaches a record from another record.\nFor the promise version of this method, see record.detach.promise(options). Note that promises are only supported in client scripts.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.detach(options)\n"
        ]
    },
    "(N/record) record.detach.promise(options)": {
        "prefix": "record.detach.promise(options)",
        "body": [
            "${1:record}.detach.promise({",
            "\trecord: {",
            "\t\ttype: ${3:string*},",
            "\t\tid: ${4:number | string*}",
            "\t\t},",
            "\tfrom: {",
            "\t\ttype: ${6:string*},",
            "\t\tid: ${7:number | string*}",
            "\t\t},",
            "\tattributes: ${8:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.detach.promise()\n",
            "Method Description:\nDetaches a record from another record asynchronously.\nThe parameters and errors thrown for this method are the same as those for record.detach(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.detach.promise(options)\n"
        ]
    },
    "(N/record) record.load(options)": {
        "prefix": "record.load(options)",
        "body": [
            "${1:record}.load({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number*},",
            "\tisDynamic: ${4:boolean},",
            "\tdefaultValues: ${5:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.load()\n",
            "Method Description:\nLoads an existing record.\nFor the promise version of this method, see record.load.promise(options). Note that promises are only supported in client scripts. Make sure to save the record before loading it.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.load(options)\n"
        ]
    },
    "(N/record) record.load.promise(options)": {
        "prefix": "record.load.promise(options)",
        "body": [
            "${1:record}.load.promise({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number*},",
            "\tisDynamic: ${4:boolean},",
            "\tdefaultValues: ${5:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.load.promise()\n",
            "Method Description:\nLoads an existing record asynchronously.\nThe parameters and errors thrown for this method are the same as those for record.load(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.load.promise(options)\n"
        ]
    },
    "(N/record) record.submitFields(options)": {
        "prefix": "record.submitFields(options)",
        "body": [
            "${1:record}.submitFields({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number | string*},",
            "\tvalues: ${4:Object*},",
            "\toptions: {",
            "\t\tenablesourcing: ${6:boolean},",
            "\t",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.submitFields()\n",
            "Method Description:\nUpdates and submits one or more body fields on an existing record in NetSuite, and returns the internal ID of the parent record.\nWhen you use this method, you do not need to load or submit the parent record.\nYou can use this method to edit and submit the following:\nStandard body fields that support inline editing (direct list editing). For more information, see Using Inline Editing.\nCustom body fields that support inline editing.\nYou cannot use this method to edit and submit the following:\nSelect fields\nSublist line item fields\nSubrecord fields (for example, address fields)\nFor the promise version of this method, see record.submitFields.promise(options). Note that promises are only supported in client scripts.\n",
            "Returns:\nThe internal ID of the parent record.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.submitFields(options)\n"
        ]
    },
    "(N/record) record.submitFields.promise(options)": {
        "prefix": "record.submitFields.promise(options)",
        "body": [
            "${1:record}.submitFields.promise({",
            "\ttype: ${2:string*},",
            "\tid: ${3:number | string*},",
            "\tvalues: ${4:Object*},",
            "\toptions: {",
            "\t\tenablesourcing: ${6:boolean},",
            "\t",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.submitFields.promise()\n",
            "Method Description:\nUpdates and submits one or more body fields asynchronously on an existing record in NetSuite, and returns the internal ID of the parent record.\nWhen you use this method, you do not need to load or submit the parent record.\nYou can use this method to edit and submit the following:\nStandard body fields that support inline editing (direct list editing). For more information, see Using Inline Editing.\nCustom body fields that support inline editing.\nYou cannot use this method to edit and submit the following:\nSelect fields\nSublist line item fields\nSubrecord fields (for example, address fields)\nThe parameters and errors thrown for this method are the same as those for record.submitFields(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other records: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.submitFields.promise(options)\n"
        ]
    },
    "(N/record) record.transform(options)": {
        "prefix": "record.transform(options)",
        "body": [
            "${1:record}.transform({",
            "\tfromType: ${2:string*},",
            "\tfromId: ${3:number*},",
            "\ttoType: ${4:string*},",
            "\tisDynamic: ${5:boolean},",
            "\tdefaultValues: ${6:Object}",
            "})"
        ],
        "description": [
            "N/record Module",
            "record.transform()\n",
            "Method Description:\nTransforms a record from one type into another, using data from an existing record.\nYou can use this method to automate order processing, creating item fulfillment transactions and invoices off of orders.\nFor a list of supported transformations, see Supported Transformation Types.\nFor the promise version of this method, see record.transform.promise(options). Note that promises are only supported in client scripts.\n",
            "Returns:\nrecord.Record\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other record types: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.transform(options)\n"
        ]
    },
    "(N/record) record.transform.promise(options)": {
        "prefix": "record.transform.promise(options)",
        "body": [
            "${1:record}.transform.promise({",
            "\tfromType: ${2:string*},",
            "\tfromId: ${3:number*},",
            "\ttoType: ${4:string*},",
            "\tisDynamic: ${5:boolean},",
            "\tdefaultValues: ${6:Object}",
            "}).then(function(response){",
            "// DO SOMETHING WITH RESPONSE HERE",
            "}, function(error){",
            "// DO SOMETHING WITH ERROR HERE",
            "});"
        ],
        "description": [
            "N/record Module",
            "record.transform.promise()\n",
            "Method Description:\nTransforms a record from one type into another asynchronously, using data from an existing record.\nYou can use this method to automate order processing, creating item fulfillment transactions and invoices off of orders.\nFor a list of supported transformations, see Supported Transformation Types.\nThe parameters and errors thrown for this method are the same as those for record.transform(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nClient-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nTransaction records: 10 units\nCustom records: 2 units\nAll other record types: 5 units\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.transform.promise(options)\n"
        ]
    },
    "(N/record) record.Type": {
        "prefix": "record.Type",
        "body": "record.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|}",
        "description": [
            "N/record Module",
            "record.Type\n",
            "Enum Description:\nEnumeration that holds the string values for supported record types.\nThis enum is used to set the value of the Record.type property in cases where you are working with an instance of a standard NetSuite record type. (If you are working with an instance of a custom record type, you set the Record.type property by using the custom record type’s string ID. For more help finding this ID, see Custom Record.)\n",
            "Supported Script Types:\nClient and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/record Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=record.Type\n"
        ]
    },
    "(N/recordContext) recordContext.RecordContext": {
        "prefix": "recordContext.RecordContext",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=recordContext.RecordContext for more information.",
        "description": [
            "N/recordContext Module",
            "recordContext.RecordContext\n",
            "Object Description:\nThis is an object of name/value pair. Each name is the name of the context type. Each value is the record context. More values for one context type can be returned in an array.\n",
            "Supported Script Types:\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/recordContext Module\n",
            "Methods and Properties:\nN/recordContext Module members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recordContext.RecordContext\n"
        ]
    },
    "(N/recordContext) recordContext.getContext(options)": {
        "prefix": "recordContext.getContext(options)",
        "body": [
            "${1:recordContext}.getContext({",
            "\trecordType: ${2:string*},",
            "\trecordId: ${3:string*},",
            "\trecord: ${4:string*},",
            "\tcontextTypes: ${5:Array <string>}",
            "})"
        ],
        "description": [
            "N/recordContext Module",
            "recordContext.getContext()\n",
            "Method Description:\nReturns the record context object for a given record.\n",
            "Returns:\nrecordContext.RecordContext\n",
            "Supported Script Types:\nClient and server-side scripts\n",
            "Governance:\n10 units\n",
            "Module:\nN/recordContext Module\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recordContext.getContext(options)\n"
        ]
    },
    "(N/recordContext) recordContext.ContextType": {
        "prefix": "recordContext.ContextType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=recordContext.ContextType for more information.",
        "description": [
            "N/recordContext Module",
            "recordContext.ContextType\n",
            "Enum Description:\nHolds the value for the context type.\n",
            "Type:\nenum\n",
            "Module:\nN/recordContext Module\n",
            "Sibling Module Members:\nN/recordContext Module members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recordContext.ContextType\n"
        ]
    },
    "(N/redirect) redirect.redirect(options)": {
        "prefix": "redirect.redirect(options)",
        "body": [
            "${1:redirect}.redirect({",
            "\turl: ${2:string*},",
            "\tparameters: ${3:Object}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.redirect()\n",
            "Method Description:\nMethod used to set the redirect to the URL of a Suitelet that is available externally (Suitelets set to Available Without Login on the Script Deployment page).\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nSuitelets, beforeLoad user events, and synchronous afterSubmit user events\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.redirect(options)\n"
        ]
    },
    "(N/redirect) redirect.toRecord(options)": {
        "prefix": "redirect.toRecord(options)",
        "body": [
            "${1:redirect}.toRecord({",
            "\tid: ${2:string*},",
            "\ttype: ${3:string*},",
            "\tisEditMode: ${4:boolean},",
            "\tparameters: ${5:Object}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toRecord()\n",
            "Method Description:\nMethod used to set the redirect URL to a specific NetSuite record.\nIf you redirect a user to a record, the record must first exist in NetSuite. If you want to redirect a user to a new record, you must first create and submit the record before redirecting them. You must also ensure that any required fields for the new record are populated before submitting the record.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nSuitelets, beforeLoad user events, and synchronous afterSubmit user events\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toRecord(options)\n"
        ]
    },
    "(N/redirect) redirect.toRecordTransform(options)": {
        "prefix": "redirect.toRecordTransform(options)",
        "body": [
            "${1:redirect}.toRecordTransform({",
            "\tfromId: ${2:number*},",
            "\tfromType: ${3:string*},",
            "\ttoType: ${4:string*},",
            "\tparameters: ${5:Object}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toRecordTransform()\n",
            "Method Description:\nTransforms a record to a standard or custom transaction instance. The fromId and fromType parameters can be acquired from the context object provided by the onAction(scriptContext) method of a workflow action script. The toType record type identifier cannot be acquired programmatically and must be entered manually.\nThe new transaction instance opens in edit mode with all possible fields defaulted from the source record. To specify URL parameters or record field values on the redirected page, use the options.parameters parameter. For record field values, use the record.fieldId format. Invalid keys are ignored. The user can edit transaction details before saving.\nFor a list of supported transformation types, see Supported Transformation Types.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/redirect Module\n",
            "Sibling Module Members:\nN/redirect Module Members\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toRecordTransform(options)\n"
        ]
    },
    "(N/redirect) redirect.toSavedSearch(options)": {
        "prefix": "redirect.toSavedSearch(options)",
        "body": [
            "${1:redirect}.toSavedSearch({",
            "\tid: ${2:number*}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toSavedSearch()\n",
            "Method Description:\nMethod used to load an existing saved search and redirect to the populated search definition page.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nafterSubmit user event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toSavedSearch(options)\n"
        ]
    },
    "(N/redirect) redirect.toSavedSearchResult(options)": {
        "prefix": "redirect.toSavedSearchResult(options)",
        "body": [
            "${1:redirect}.toSavedSearchResult({",
            "\tid: ${2:number*}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toSavedSearchResult()\n",
            "Method Description:\nMethod used to redirect a user to a search results page for an existing saved search.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nafterSubmit user event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toSavedSearchResult(options)\n"
        ]
    },
    "(N/redirect) redirect.toSearch(options)": {
        "prefix": "redirect.toSearch(options)",
        "body": [
            "${1:redirect}.toSearch({",
            "\tsearch: ${2:search.Search*}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toSearch()\n",
            "Method Description:\nMethod used to redirect a user to an on demand search built in SuiteScript.\nThis method loads a search into the session, and then redirects to a URL that loads the search definition page.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nafterSubmit user event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toSearch(options)\n"
        ]
    },
    "(N/redirect) redirect.toSearchResult(options)": {
        "prefix": "redirect.toSearchResult(options)",
        "body": [
            "${1:redirect}.toSearchResult({",
            "\tSearch: ${2:search.Search*}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toSearchResult()\n",
            "Method Description:\nMethod used to redirect a user to a search results page. For example, the results from an on demand search created with the N/search Module, or a loaded search that you modified but did not save.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nafterSubmit user event scripts\nFor more information, see SuiteScript 2.0 User Event Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toSearchResult(options)\n"
        ]
    },
    "(N/redirect) redirect.toSuitelet(options)": {
        "prefix": "redirect.toSuitelet(options)",
        "body": [
            "${1:redirect}.toSuitelet({",
            "\tscriptId: ${2:string*},",
            "\tdeploymentId: ${3:string*},",
            "\tisExternal: ${4:boolean},",
            "\tparameters: ${5:Object}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toSuitelet()\n",
            "Method Description:\nMethod used to redirect the user to a Suitelet.\nFor more information about Suitelets, see SuiteScript 2.0 Suitelet Script Type.\nThe redirect happens after the script finishes.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nSuitelets, beforeLoad user events, and synchronous afterSubmit user events\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toSuitelet(options)\n"
        ]
    },
    "(N/redirect) redirect.toTaskLink(options)": {
        "prefix": "redirect.toTaskLink(options)",
        "body": [
            "${1:redirect}.toTaskLink({",
            "\tid: ${2:string*},",
            "\tparameters: ${3:Object}",
            "})"
        ],
        "description": [
            "N/redirect Module",
            "redirect.toTaskLink()\n",
            "Method Description:\nMethod used to redirect a user to a tasklink.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nSuitelets, beforeLoad user events, and synchronous afterSubmit user events\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/redirect Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=redirect.toTaskLink(options)\n"
        ]
    },
    "(N/render) render.EmailMergeResult": {
        "prefix": "render.EmailMergeResult",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=render.EmailMergeResult for more information.",
        "description": [
            "N/render Module",
            "render.EmailMergeResult\n",
            "Object Description:\nEncapsulates an email merge result.\nUse render.mergeEmail(options) to create and return this object.\nFor a complete list of this object’s properties, see EmailMergeResult Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.EmailMergeResult\n"
        ]
    },
    "(N/render) EmailMergeResult.body": {
        "prefix": "EmailMergeResult.body",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EmailMergeResult.body for more information.",
        "description": [
            "N/render Module",
            "EmailMergeResult.body\n",
            "Property Description:\nThe body of the email distribution in string format\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EmailMergeResult.body\n"
        ]
    },
    "(N/render) EmailMergeResult.subject": {
        "prefix": "EmailMergeResult.subject",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EmailMergeResult.subject for more information.",
        "description": [
            "N/render Module",
            "EmailMergeResult.subject\n",
            "Property Description:\nThe subject of the email distribution in string format\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EmailMergeResult.subject\n"
        ]
    },
    "(N/render) render.TemplateRenderer": {
        "prefix": "render.TemplateRenderer",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=render.TemplateRenderer for more information.",
        "description": [
            "N/render Module",
            "render.TemplateRenderer\n",
            "Object Description:\nEncapsulates a template engine object that produces HTML and PDF printed forms utilizing advanced PDF/HTML template capabilities.\nThe template engine object includes methods that pass in a template as string to be interpreted by FreeMarker, and render interpreted content in your choice of two different formats: as HTML output to an nlobjResponse object, or as XML string that can be passed to render.xmlToPdf(options) to produce a PDF.\nThis object is available when the Advanced PDF/HTML Templates feature is enabled.\nFor a complete list of this object’s methods and properties, see TemplateRenderer Object Members.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.TemplateRenderer\n"
        ]
    },
    "(N/render) TemplateRenderer.addCustomDataSource(options)": {
        "prefix": "TemplateRenderer.addCustomDataSource(options)",
        "body": [
            "${1:TemplateRenderer}.addCustomDataSource({",
            "\talias: ${2:string*},",
            "\tformat: ${3:render.DataSource*},",
            "\tdata: ${4:Object | Document | string*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.addCustomDataSource()\n",
            "Method Description:\nAdds XML or JSON as custom data source to an advanced PDF/HTML template\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.addCustomDataSource(options)\n"
        ]
    },
    "(N/render) TemplateRenderer.addQuery(options)": {
        "prefix": "TemplateRenderer.addQuery(options)",
        "body": [
            "${1:TemplateRenderer}.addQuery({",
            "\tid: ${2:string},",
            "\tpageIndex: ${3:number},",
            "\tpageSize: ${4:number},",
            "\ttemplateName: ${5:string*},",
            "\tquery: ${6:query.Query object}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.addQuery()\n",
            "Method Description:\nAdds a SuiteAnalytics Workbook query to use as the renderer’s data source. You can specify the query in two ways:\nAs a query.Query object (which you create using the N/query Module) using the options.query parameter.\nBy providing the workbook ID of an existing SuiteAnalytics workbook using the options.id paramter.\nOne of options.query or options.id is required.\nThis method returns a maximum of 5000 results in the query result set. If a query matches more than 5000 results, you must use options.pageIndex and options.pageSize to retrieve the full set of results.\nThere is no governance for this method. When the renderer is executed, rendering consumes 10 units for every iteration through the results. If the query is specified using a workbook ID, rendering consumes an additional 5 units before the first iteration through the results.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Parent Object:\nrender.TemplateRenderer\n",
            "Sibling Object Mambers:\nTemplateRenderer Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.addQuery(options)\n"
        ]
    },
    "(N/render) TemplateRenderer.addRecord(options)": {
        "prefix": "TemplateRenderer.addRecord(options)",
        "body": [
            "${1:TemplateRenderer}.addRecord({",
            "\ttemplateName: ${2:string*},",
            "\trecord: ${3:record.Record object*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.addRecord()\n",
            "Method Description:\nBinds a record to a template variable.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.addRecord(options)\n"
        ]
    },
    "(N/render) TemplateRenderer.addSearchResults(options)": {
        "prefix": "TemplateRenderer.addSearchResults(options)",
        "body": [
            "${1:TemplateRenderer}.addSearchResults({",
            "\ttemplateName: ${2:string*},",
            "\tsearchResult: ${3:search.Result object*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.addSearchResults()\n",
            "Method Description:\nBinds a search result to a template variable.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.addSearchResults(options)\n"
        ]
    },
    "(N/render) TemplateRenderer.renderAsPdf()": {
        "prefix": "TemplateRenderer.renderAsPdf()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.renderAsPdf() for more information.",
        "description": [
            "N/render Module",
            "TemplateRenderer.renderAsPdf()\n",
            "Method Description:\nUses the advanced template to produce a PDF printed form\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.renderAsPdf()\n"
        ]
    },
    "(N/render) TemplateRenderer.renderPdfToResponse()": {
        "prefix": "TemplateRenderer.renderPdfToResponse()",
        "body": [
            "${1:TemplateRenderer}.renderPdfToResponse(){",
            "\tresponse: ${2:http.ServerResponse*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.renderPdfToResponse()\n",
            "Method Description:\nRenders a server response into a PDF file.\nFor example, you can pass in a response to be rendered as a PDF in a browser, or downloaded by a user.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.renderPdfToResponse()\n"
        ]
    },
    "(N/render) TemplateRenderer.renderAsString()": {
        "prefix": "TemplateRenderer.renderAsString()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.renderAsString() for more information.",
        "description": [
            "N/render Module",
            "TemplateRenderer.renderAsString()\n",
            "Method Description:\nReturn template content in string form\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.renderAsString()\n"
        ]
    },
    "(N/render) TemplateRenderer.renderToResponse(options)": {
        "prefix": "TemplateRenderer.renderToResponse(options)",
        "body": [
            "${1:TemplateRenderer}.renderToResponse({",
            "\tresponse: ${2:http.ServerResponse*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.renderToResponse()\n",
            "Method Description:\nWrites template content to a server response.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.renderToResponse(options)\n"
        ]
    },
    "(N/render) TemplateRenderer.setTemplateById(options)": {
        "prefix": "TemplateRenderer.setTemplateById(options)",
        "body": [
            "${1:TemplateRenderer}.setTemplateById({",
            "\tid: ${2:number*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.setTemplateById()\n",
            "Method Description:\nSets the template using the internal ID\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.setTemplateById(options)\n"
        ]
    },
    "(N/render) TemplateRenderer.setTemplateByScriptId(options)": {
        "prefix": "TemplateRenderer.setTemplateByScriptId(options)",
        "body": [
            "${1:TemplateRenderer}.setTemplateByScriptId({",
            "\tscriptId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "TemplateRenderer.setTemplateByScriptId()\n",
            "Method Description:\nSets the template using the script ID\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.setTemplateByScriptId(options)\n"
        ]
    },
    "(N/render) TemplateRenderer.templateContent": {
        "prefix": "TemplateRenderer.templateContent",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.templateContent for more information.",
        "description": [
            "N/render Module",
            "TemplateRenderer.templateContent\n",
            "Property Description:\nContent of template\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TemplateRenderer.templateContent\n"
        ]
    },
    "(N/render) render.bom(options)": {
        "prefix": "render.bom(options)",
        "body": [
            "${1:render}.bom({",
            "\tentityId: ${2:number*},",
            "\tprintMode: ${3:string},",
            "\tinCustLocale: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/render Module",
            "render.bom()\n",
            "Method Description:\nUse this method to create a PDF or HTML object of a bill of material.\n",
            "Returns:\nfile.File that contains a PDF or HTML document\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.bom(options)\n"
        ]
    },
    "(N/render) render.create()": {
        "prefix": "render.create()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=render.create() for more information.",
        "description": [
            "N/render Module",
            "render.create()\n",
            "Method Description:\nUse this method to produce HTML and PDF printed forms with advanced PDF/HTML templates.\nCreates render.TemplateRenderer.\nThis object includes methods that pass in a template as string to be interpreted by FreeMarker, and render interpreted content in your choice of two different formats: as HTML output to http.ServerResponse, or as XML string that can be passed to render.xmlToPdf(options) to produce a PDF.\nTo use this method, the Advanced PDF/HTML Templates feature must be enabled.\n",
            "Returns:\nrender.TemplateRenderer\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.create()\n"
        ]
    },
    "(N/render) render.mergeEmail(options)": {
        "prefix": "render.mergeEmail(options)",
        "body": [
            "${1:render}.mergeEmail({",
            "\ttemplateId: ${2:number*},",
            "\tentity: ${3:RecordRef*},",
            "\trecipient: ${4:RecordRef*},",
            "\tcustomRecord: ${5:RecordRef*},",
            "\tsupportCaseId: ${6:number*},",
            "\ttransactionId: ${7:number*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "render.mergeEmail()\n",
            "Method Description:\nCreates a render.EmailMergeResult object for a mail merge with an existing scriptable email template\n",
            "Returns:\nrender.EmailMergeResult\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.mergeEmail(options)\n"
        ]
    },
    "(N/render) render.packingSlip(options)": {
        "prefix": "render.packingSlip(options)",
        "body": [
            "${1:render}.packingSlip({",
            "\tentityId: ${2:number*},",
            "\tprintMode: ${3:string},",
            "\tformId: ${4:number},",
            "\tfulfillmentId: ${5:number},",
            "\tinCustLocale: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/render Module",
            "render.packingSlip()\n",
            "Method Description:\nUse this method to create a PDF or HTML object of a packing slip.\n",
            "Returns:\nfile.File that contains a PDF or HTML document\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.packingSlip(options)\n"
        ]
    },
    "(N/render) render.pickingTicket(options)": {
        "prefix": "render.pickingTicket(options)",
        "body": [
            "${1:render}.pickingTicket({",
            "\tentityId: ${2:number*},",
            "\tprintMode: ${3:string},",
            "\tformId: ${4:number},",
            "\tshipgroup: ${5:number},",
            "\tlocation: ${6:number},",
            "\tinCustLocale: ${7:boolean}",
            "})"
        ],
        "description": [
            "N/render Module",
            "render.pickingTicket()\n",
            "Method Description:\nUse this method to create a PDF or HTML object of a picking ticket.\n",
            "Returns:\nfile.File that contains a PDF or HTML document\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.pickingTicket(options)\n"
        ]
    },
    "(N/render) render.statement(options)": {
        "prefix": "render.statement(options)",
        "body": [
            "${1:render}.statement({",
            "\tentityId: ${2:number*},",
            "\tprintMode: ${3:string},",
            "\tformId: ${4:number},",
            "\tstartDate: ${5:Date},",
            "\tstatementDate: ${6:Date},",
            "\topenTransactionsOnly: ${7:boolean},",
            "\tinCustLocale: ${8:boolean},",
            "\tconsolidateStatements: ${9:boolean}",
            "})"
        ],
        "description": [
            "N/render Module",
            "render.statement()\n",
            "Method Description:\nUse this method to create a PDF or HTML object of a statement.\n",
            "Returns:\nfile.File that contains a PDF or HTML document\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.statement(options)\n"
        ]
    },
    "(N/render) render.transaction(options)": {
        "prefix": "render.transaction(options)",
        "body": [
            "${1:render}.transaction({",
            "\tentityId: ${2:number*},",
            "\tprintMode: ${3:enum},",
            "\tformId: ${4:number},",
            "\tinCustLocale: ${5:boolean}",
            "})"
        ],
        "description": [
            "N/render Module",
            "render.transaction()\n",
            "Method Description:\nUse this method to create a PDF or HTML object of a transaction.\nFile size is limited to 10MB.\nIf the Advanced PDF/HTML Templates feature is enabled, you can associate an advanced template with the custom form saved for a transaction. The advanced template is used to format the printed transaction. For details about this feature, see Advanced PDF/HTML Templates\n",
            "Returns:\nfile.File that contains a PDF or HTML document\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.transaction(options)\n"
        ]
    },
    "(N/render) render.xmlToPdf(options)": {
        "prefix": "render.xmlToPdf(options)",
        "body": [
            "${1:render}.xmlToPdf({",
            "\txmlString: ${2:xml.Document | string*}",
            "})"
        ],
        "description": [
            "N/render Module",
            "render.xmlToPdf()\n",
            "Method Description:\nMethod used to pass XML to the Big Faceless Organization (BFO) tag library (which is stored by NetSuite), and return a PDF file. BFO is used in NetSuite. For version details, see Third-Party Products Used in Advanced Printing.\nFile size cannot exceed 10MB.\n",
            "Returns:\nfile.File\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/render Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.xmlToPdf(options)\n"
        ]
    },
    "(N/render) render.DataSource": {
        "prefix": "render.DataSource",
        "body": "render.DataSource.${1|JSON,OBJECT,XML_DOC,XML_STRING|}",
        "description": [
            "N/render Module",
            "render.DataSource\n",
            "Enum Description:\nHolds the string values for supported data source types. Use this enum to set the options.format parameter.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/render Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.DataSource\n"
        ]
    },
    "(N/render) render.PrintMode": {
        "prefix": "render.PrintMode",
        "body": "render.PrintMode.${1|DEFAULT,HTML,PDF|}",
        "description": [
            "N/render Module",
            "render.PrintMode\n",
            "Enum Description:\nHolds the string values for supported print output types. Use this enum to set the options.printMode parameter.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/render Module\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=render.PrintMode\n"
        ]
    },
    "(N/runtime) runtime.Script": {
        "prefix": "runtime.Script",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.Script for more information.",
        "description": [
            "N/runtime Module",
            "runtime.Script\n",
            "Object Description:\nEncapsulates the runtime settings of the currently executing script.\nUse runtime.getCurrentScript() to access this object.\nFor a complete list of this object’s methods and properties, see Script Object Members.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.Script\n"
        ]
    },
    "(N/runtime) Script.getParameter(options)": {
        "prefix": "Script.getParameter(options)",
        "body": [
            "${1:Script}.getParameter({",
            "\tname: ${2:string*}",
            "})"
        ],
        "description": [
            "N/runtime Module",
            "Script.getParameter()\n",
            "Method Description:\nReturns the value of a script parameter for the currently executing script.\nFor information on script parameters, see Creating Script Parameters Overview.\n",
            "Returns:\nnumber | Date | string | boolean\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.getParameter(options)\n"
        ]
    },
    "(N/runtime) Script.getRemainingUsage()": {
        "prefix": "Script.getRemainingUsage()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Script.getRemainingUsage() for more information.",
        "description": [
            "N/runtime Module",
            "Script.getRemainingUsage()\n",
            "Method Description:\nReturns the number of units remaining (per governance limitations) for the currently executing script.\nFor more information, see SuiteScript Governance.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.getRemainingUsage()\n"
        ]
    },
    "(N/runtime) Script.apiVersion": {
        "prefix": "Script.apiVersion",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Script.apiVersion for more information.",
        "description": [
            "N/runtime Module",
            "Script.apiVersion\n",
            "Property Description:\nThe current script’s runtime version.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.apiVersion\n"
        ]
    },
    "(N/runtime) Script.bundleIds": {
        "prefix": "Script.bundleIds",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Script.bundleIds for more information.",
        "description": [
            "N/runtime Module",
            "Script.bundleIds\n",
            "Property Description:\nAn array of bundle IDs for the bundles that include the currently executing script.\nWhen you use this property, consider the following:\nThe array can contain any number of bundle IDs, because a bundle installation script can be associated with multiple bundles.\nThe array does not contain bundle IDs of deprecated bundles.\nThe elements in the array are sorted in ascending order from the lowest bundle ID to the highest bundle ID that includes the currently executing script.\nHowever, it is not guaranteed that the last element in the array corresponds to the bundle that triggered the currently executing script during the bundle installation.\n",
            "Type:\nstring [] (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.bundleIds\n"
        ]
    },
    "(N/runtime) Script.deploymentId": {
        "prefix": "Script.deploymentId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Script.deploymentId for more information.",
        "description": [
            "N/runtime Module",
            "Script.deploymentId\n",
            "Property Description:\nThe deployment ID for the script deployment on the currently executing script.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.deploymentId\n"
        ]
    },
    "(N/runtime) Script.id": {
        "prefix": "Script.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Script.id for more information.",
        "description": [
            "N/runtime Module",
            "Script.id\n",
            "Property Description:\nThe script ID for the currently executing script.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.id\n"
        ]
    },
    "(N/runtime) Script.logLevel": {
        "prefix": "Script.logLevel",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Script.logLevel for more information.",
        "description": [
            "N/runtime Module",
            "Script.logLevel\n",
            "Property Description:\nThe script logging level for the currently executing script. This method is not supported on client scripts.\nReturns one of the following values:\nDEBUG\nAUDIT\nERROR\nEMERGENCY\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.logLevel\n"
        ]
    },
    "(N/runtime) Script.percentComplete": {
        "prefix": "Script.percentComplete",
        "body": [
            "${1:Script}.percentComplete{",
            "\tSSS_OPERATION_UNAVAILABLE: ${2:}",
            "})"
        ],
        "description": [
            "N/runtime Module",
            "Script.percentComplete\n",
            "Property Description:\nThe percent complete specified for the current scheduled script execution. This value appears in the % Complete  column on the Scheduled Script Status page.\nThis value can be set or retrieved.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Script.percentComplete\n"
        ]
    },
    "(N/runtime) runtime.Session": {
        "prefix": "runtime.Session",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.Session for more information.",
        "description": [
            "N/runtime Module",
            "runtime.Session\n",
            "Object Description:\nEncapsulates the user session for the currently executing script.\nUse this object to set and get user-defined objects for the current user session. Use the objects to track user-related session data. For example, you can gather information about the user scope, budget, or business problems.\nUse Session.set(options) to set session object values. Use Session.get(options) to retrieve session object values.\nFor a complete list of this object’s methods, see Session Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.Session\n"
        ]
    },
    "(N/runtime) Session.get(options)": {
        "prefix": "Session.get(options)",
        "body": [
            "${1:Session}.get({",
            "\tname: ${2:string*}",
            "})"
        ],
        "description": [
            "N/runtime Module",
            "Session.get()\n",
            "Method Description:\nReturns the user-defined session object value associated with a session object key.\nBoth the session object value and associated key are defined using Session.set(options).\nIf the key does not exist, this method returns null.\n",
            "Returns:\nstring | null\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Session.get(options)\n"
        ]
    },
    "(N/runtime) Session.set(options)": {
        "prefix": "Session.set(options)",
        "body": [
            "${1:Session}.set({",
            "\tname: ${2:string*},",
            "\tvalue: ${3:string*}",
            "})"
        ],
        "description": [
            "N/runtime Module",
            "Session.set()\n",
            "Method Description:\nSets a key and value for a user-defined session object.\nUse Session.get(options) to retrieve the object value after you set it.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Session.set(options)\n"
        ]
    },
    "(N/runtime) runtime.User": {
        "prefix": "runtime.User",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.User for more information.",
        "description": [
            "N/runtime Module",
            "runtime.User\n",
            "Object Description:\nEncapsulates the properties and preferences of the user currently executing the script.\nFor a complete list of this object’s methods and properties, see User Object Members.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.User\n"
        ]
    },
    "(N/runtime) User.getPermission(options)": {
        "prefix": "User.getPermission(options)",
        "body": [
            "${1:User}.getPermission({",
            "\tname: ${2:string*}",
            "})"
        ],
        "description": [
            "N/runtime Module",
            "User.getPermission()\n",
            "Method Description:\nReturns a runtime.Permission user permission level for the specified permission.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.getPermission(options)\n"
        ]
    },
    "(N/runtime) User.getPreference(options)": {
        "prefix": "User.getPreference(options)",
        "body": [
            "${1:User}.getPreference({",
            "\tname: ${2:string*}",
            "})"
        ],
        "description": [
            "N/runtime Module",
            "User.getPreference()\n",
            "Method Description:\nReturns the value set for a NetSuite preference.\nCurrently only General Preferences and Accounting Preferences are exposed in SuiteScript.\nYou can also view General Preferences by going to Setup > Company > Preferences > General Preferences. View Accounting Preferences by going to Setup > Accounting > Preferences > Accounting Preferences.\nIf you want to change the value of a General or Accounting preference using SuiteScript 2.0, you must load each preference page using config.load(options), where options.name is COMPANY_PREFERENCES or ACCOUNTING_PREFERENCES. The config.load(options) method returns a record.Record. You can use the Record.setValue(options) method to set the preference.\nFor more information about these preferences, see General Preferences and Accounting Preferences.\nThe permission level will be Permission.FULL if the script is configured to execute as admin. You can configure a script to execute as admin by selecting “administrator” from the Execute as Role field on Script Deployment page.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.getPreference(options)\n"
        ]
    },
    "(N/runtime) User.contact": {
        "prefix": "User.contact",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.contact for more information.",
        "description": [
            "N/runtime Module",
            "User.contact\n",
            "Property Description:\nThe internal ID of the currently logged-in contact.\n If no logged-in entity or other entity than contact is logged in, then 0 is returned as value.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.contact\n"
        ]
    },
    "(N/runtime) User.department": {
        "prefix": "User.department",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.department for more information.",
        "description": [
            "N/runtime Module",
            "User.department\n",
            "Property Description:\nThe internal ID of the department for the current user.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.department\n"
        ]
    },
    "(N/runtime) User.email": {
        "prefix": "User.email",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.email for more information.",
        "description": [
            "N/runtime Module",
            "User.email\n",
            "Property Description:\nThe email address of the current user.\nTo use this property, the email field on the user employee record must contain an email address.\nIn a shopping context where the shopper is recognized but not logged in, this method can be used to return the shopper's email, instead of getting it from the customer record.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.email\n"
        ]
    },
    "(N/runtime) User.id": {
        "prefix": "User.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.id for more information.",
        "description": [
            "N/runtime Module",
            "User.id\n",
            "Property Description:\nThe internal ID of the current user.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.id\n"
        ]
    },
    "(N/runtime) User.location": {
        "prefix": "User.location",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.location for more information.",
        "description": [
            "N/runtime Module",
            "User.location\n",
            "Property Description:\nThe internal ID of the location of the current user.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.location\n"
        ]
    },
    "(N/runtime) User.name": {
        "prefix": "User.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.name for more information.",
        "description": [
            "N/runtime Module",
            "User.name\n",
            "Property Description:\nThe name of the current user.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.name\n"
        ]
    },
    "(N/runtime) User.role": {
        "prefix": "User.role",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.role for more information.",
        "description": [
            "N/runtime Module",
            "User.role\n",
            "Property Description:\nThe internal ID of the role for the current user.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.role\n"
        ]
    },
    "(N/runtime) User.roleCenter": {
        "prefix": "User.roleCenter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.roleCenter for more information.",
        "description": [
            "N/runtime Module",
            "User.roleCenter\n",
            "Property Description:\nThe string value of the center type, or role center, for the current user.\nThe NetSuite UI adjusts automatically to different users' business needs. For each user, NetSuite displays a variable set of tabbed pages, called a center, based on the user's assigned role. Each NetSuite center provides, for users with related roles, the pages and links they need to do their jobs.\nFor more information about NetSuite centers, see Centers Overview.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.roleCenter\n"
        ]
    },
    "(N/runtime) User.roleId": {
        "prefix": "User.roleId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.roleId for more information.",
        "description": [
            "N/runtime Module",
            "User.roleId\n",
            "Property Description:\nThe custom scriptId of the role for the current user.\nYou can use this value instead of User.role. When bundling a custom role, the internal ID number of the role in the target account can change after the bundle is installed. Therefore, in the target account you can use this property to access the unique/custom scriptId assigned to the role.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.roleId\n"
        ]
    },
    "(N/runtime) User.subsidiary": {
        "prefix": "User.subsidiary",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=User.subsidiary for more information.",
        "description": [
            "N/runtime Module",
            "User.subsidiary\n",
            "Property Description:\nThe internal ID of the subsidiary for the current user.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=User.subsidiary\n"
        ]
    },
    "(N/runtime) runtime.getCurrentScript()": {
        "prefix": "runtime.getCurrentScript()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.getCurrentScript() for more information.",
        "description": [
            "N/runtime Module",
            "runtime.getCurrentScript()\n",
            "Method Description:\nReturns a runtime.Script object that represents the currently executing script.\nUse this method to get properties and parameters of the currently executing script and script deployment. If you want to get properties for the session or user, use runtime.getCurrentSession() or runtime.getCurrentUser() instead.\n",
            "Returns:\nruntime.Script\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.getCurrentScript()\n"
        ]
    },
    "(N/runtime) runtime.getCurrentSession()": {
        "prefix": "runtime.getCurrentSession()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.getCurrentSession() for more information.",
        "description": [
            "N/runtime Module",
            "runtime.getCurrentSession()\n",
            "Method Description:\nReturns a runtime.Session object that represents the user session for the currently executing script.\nUse this method to get session objects for the current user session. If you want to get properties for the script or user, use runtime.getCurrentScript() or runtime.getCurrentUser() instead.\n",
            "Returns:\nruntime.Session\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.getCurrentSession()\n"
        ]
    },
    "(N/runtime) runtime.getCurrentUser()": {
        "prefix": "runtime.getCurrentUser()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.getCurrentUser() for more information.",
        "description": [
            "N/runtime Module",
            "runtime.getCurrentUser()\n",
            "Method Description:\nReturns a runtime.User object that represents the properties and preferences for the user currently executing the script.\nUse this method to get session objects for the current user session. If you want to get properties for the script or session, use runtime.getCurrentScript() or runtime.getCurrentSession() instead.\n",
            "Returns:\nruntime.User\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.getCurrentUser()\n"
        ]
    },
    "(N/runtime) runtime.isFeatureInEffect(options)": {
        "prefix": "runtime.isFeatureInEffect(options)",
        "body": [
            "${1:runtime}.isFeatureInEffect({",
            "\tfeature: ${2:string*}",
            "})"
        ],
        "description": [
            "N/runtime Module",
            "runtime.isFeatureInEffect()\n",
            "Method Description:\nUse this method to determine if a particular feature is enabled in a NetSuite account. These are the features that appear on the Enable Features page at Setup > Company > Setup Tasks > Enable Features.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.isFeatureInEffect(options)\n"
        ]
    },
    "(N/runtime) runtime.accountId": {
        "prefix": "runtime.accountId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.accountId for more information.",
        "description": [
            "N/runtime Module",
            "runtime.accountId\n",
            "Property Description:\nThe account ID for the current user.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.accountId\n"
        ]
    },
    "(N/runtime) runtime.country": {
        "prefix": "runtime.country",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.country for more information.",
        "description": [
            "N/runtime Module",
            "runtime.country\n",
            "Property Description:\nThe country for the current company.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.country\n"
        ]
    },
    "(N/runtime) runtime.envType": {
        "prefix": "runtime.envType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.envType for more information.",
        "description": [
            "N/runtime Module",
            "runtime.envType\n",
            "Property Description:\nThe current environment in which the script is executing.\nThis property uses values from the runtime.EnvType enum.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.envType\n"
        ]
    },
    "(N/runtime) runtime.executionContext": {
        "prefix": "runtime.executionContext",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.executionContext for more information.",
        "description": [
            "N/runtime Module",
            "runtime.executionContext\n",
            "Property Description:\nThe execution context trigger of the current script.\nExecution contexts provide information about how a script is triggered to execute. For example, a script can be triggered in response to an action in the NetSuite application, or an action occurring in another context, such as a web services integration. You can use execution context filtering to ensure that your scripts are triggered only when necessary. For more information, see Execution Contexts.\nYou can use the runtime.executionContext property to determine the execution context for a script and choose different logic depending on the context. Consider a script that applies to customer records and uses the beforeLoad(scriptContext) entry point. You may not want to execute this script when the entry point is triggered in response to a REST web services request. To prevent the script from executing in this context, you can do the following:\nThis property uses values from the runtime.ContextType enum.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.executionContext\n"
        ]
    },
    "(N/runtime) runtime.processorCount": {
        "prefix": "runtime.processorCount",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.processorCount for more information.",
        "description": [
            "N/runtime Module",
            "runtime.processorCount\n",
            "Property Description:\nThe number of processors available to the current account.\nSuiteCloud Processors is the current system used to execute (process) scheduled scripts and map/reduce scripts. This property is helpful if you are a SuiteApp developer and your script needs to know the total number of processors available to a deployment.\nFor scheduled script deployments that continue to use queues, use runtime.queueCount. With the introduction of SuiteCloud Processors, map/reduce script deployments and new scheduled script deployments no longer use queues, but pre-existing scheduled script deployments continue to use queues until the queues are removed (see SuiteCloud Processors – Supported Task Types).\nBe aware that the number of processors available may not be the same as the number of queues available. For more information, see SuiteCloud Plus Settings.\nThe runtime.processorCount property reflects the number of processors available to an account. It is not impacted by changes to deployments. The value is the same regardless of whether deployments continue to use queues. For more information, see SuiteCloud Processors – Supported Task Types.\nFor more information on scheduled scripts, see SuiteScript 2.0 Scheduled Script Type. For more information on map/reduce scripts, see SuiteScript 2.0 Map/Reduce Script Type.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2018.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.processorCount\n"
        ]
    },
    "(N/runtime) runtime.queueCount": {
        "prefix": "runtime.queueCount",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.queueCount for more information.",
        "description": [
            "N/runtime Module",
            "runtime.queueCount\n",
            "Property Description:\nThe number of scheduled script queues available to the current account.\nSuiteCloud Processors is the current system used to execute (process) scheduled scripts and map/reduce scripts. This property is helpful if you are a SuiteApp developer and your script needs to know the total number of queues available to a deployment.\nFor map/reduce script deployments, use runtime.processorCount. With the introduction of SuiteCloud Processors, no map/reduce script deployments use queues (see SuiteCloud Processors – Supported Task Types).\nBe aware that the number of queues available may not be the same as the number of processors available (see SuiteCloud Plus Settings).\nIf all scheduled script deployments in an account are configured to no longer use queues (see SuiteCloud Processors – Supported Task Types), the value of runtime.queueCount is unchanged. This property reflects the number of queues available to an account. It is not impacted by changes to deployments.\nFor more information on scheduled scripts, see SuiteScript 2.0 Scheduled Script Type.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.queueCount\n"
        ]
    },
    "(N/runtime) runtime.version": {
        "prefix": "runtime.version",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=runtime.version for more information.",
        "description": [
            "N/runtime Module",
            "runtime.version\n",
            "Property Description:\nThe version of NetSuite that the method is called in. For example, the  runtime.version property in an account running NetSuite 2015.2 is 2015.2.\nFor example, you can use this method when installing a bundle in another NetSuite accounts to find out the version number before installing the bundle.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.version\n"
        ]
    },
    "(N/runtime) runtime.ContextType": {
        "prefix": "runtime.ContextType",
        "body": "runtime.ContextType.${1|ACTION,ADVANCEDREVREC,BANKCONNECTIVITY,BANKSTATEMENTPARSER,BUNDLE_INSTALLATION,CLIENT,CONSOLRATEADJUSTOR,CSV_IMPORT,CUSTOMGLLINES,CUSTOM_MASSUPDATE,DEBUGGER,EMAIL_CAPTURE,FICONNECTIVITY,MAP_REDUCE,NONE,PAYMENTGATEWAY,PAYMENTPOSTBACK,PLATFORMEXTENSION,PORTLET,PROMOTIONS,RESTLET,REST_WEBSERVICES,SCHEDULED,SDF_INSTALLATION,SHIPPING_PARTNERS,SUITELET,TAX_CALCULATION,USEREVENT,USER_INTERFACE,WEBAPPLICATION,WEBSERVICES,WEBSTORE,WORKFLOW|}",
        "description": [
            "N/runtime Module",
            "runtime.ContextType\n",
            "Enum Description:\nHolds the execution context values for script triggers.\nThis is the type for the runtime.executionContext property.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.ContextType\n"
        ]
    },
    "(N/runtime) runtime.EnvType": {
        "prefix": "runtime.EnvType",
        "body": "runtime.EnvType.${1|SANDBOX,PRODUCTION,BETA,INTERNAL|}",
        "description": [
            "N/runtime Module",
            "runtime.EnvType\n",
            "Enum Description:\nHolds all possible environment types that the current script can execute in.\nThis is the type for the runtime.envType property.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.EnvType\n"
        ]
    },
    "(N/runtime) runtime.Permission": {
        "prefix": "runtime.Permission",
        "body": "runtime.Permission.${1|FULL,EDIT,CREATE,VIEW,NONE|}",
        "description": [
            "N/runtime Module",
            "runtime.Permission\n",
            "Enum Description:\nHolds the user permission level for a specific permission ID. This is the type returned by the User.getPermission(options) method.\nFor information on working with NetSuite permissions, see NetSuite Permissions Overview and Permission Names and IDs.\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/runtime Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=runtime.Permission\n"
        ]
    },
    "(N/search) search.Column": {
        "prefix": "search.Column",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.Column for more information.",
        "description": [
            "N/search Module",
            "search.Column\n",
            "Object Description:\nEncapsulates a single search column in a search.Search. Use the methods and properties available to the Column object to get or set Column properties.\nYou create a search column object with search.createColumn(options) and add it to a search.Search object that you create with search.create(options) or load with search.load(options).\nYou can pass a Column object as a parameter to the Result.getValue(column) or Result.getText(column) methods.\nIn addition, search.ResultSet contains an array of Column objects returned in the results of a search.\nFor a complete list of this object’s methods and properties, see Column Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Column\n"
        ]
    },
    "(N/search) Column.setWhenOrderedBy(options)": {
        "prefix": "Column.setWhenOrderedBy(options)",
        "body": [
            "${1:Column}.setWhenOrderedBy({",
            "\tname: ${2:string},",
            "\tjoin: ${3:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Column.setWhenOrderedBy()\n",
            "Method Description:\nReturns the search column for which the minimal or maximal value should be found when returning the search.Column value.\nFor example, can be set to find the most recent or earliest date, or the largest or smallest amount for a record, and then the search.Column value for that record is returned.\nYou can only use this method if you use MIN or MAX as the summary type on a search column with the Result.getValue(options) method.\n",
            "Returns:\nsearch.Column\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.setWhenOrderedBy(options)\n"
        ]
    },
    "(N/search) Column.formula": {
        "prefix": "Column.formula",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.formula for more information.",
        "description": [
            "N/search Module",
            "Column.formula\n",
            "Property Description:\nFormula used for a search column as a string.\nTo set this value, you must use formulatext, formulanumeric, formuladatetime, formulapercent, or formulacurrency.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.formula\n"
        ]
    },
    "(N/search) Column.function": {
        "prefix": "Column.function",
        "body": [
            "${1:Column}.function{",
            "\tpercentOfTotal: ${2:% of Total},",
            "\tabsoluteValue: ${3:Absolute Value},",
            "\tageInDays: ${4:Age In Days},",
            "\tageInHours: ${5:Age In Hours},",
            "\tageInMonths: ${6:Age In Months},",
            "\tageInWeeks: ${7:Age In Weeks},",
            "\tageInYears: ${8:Age In Years},",
            "\tcalendarWeek: ${9:Calendar Week},",
            "\tday: ${10:Day},",
            "\tmonth: ${11:Month},",
            "\tnegate: ${12:Negate},",
            "\tnumberAsTime: ${13:Number as Time},",
            "\tquarter: ${14:Quarter},",
            "\trank: ${15:Rank},",
            "\tround: ${16:Round},",
            "\troundToHundredths: ${17:Round to Hundredths},",
            "\troundToTenths: ${18:Round to Tenths},",
            "\tweekOfYear: ${19:Week of Year},",
            "\tyear: ${20:Year}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Column.function\n",
            "Property Description:\nSpecial function applied to values in a search column. See Supported Functions.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.function\n"
        ]
    },
    "(N/search) Column.join": {
        "prefix": "Column.join",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.join for more information.",
        "description": [
            "N/search Module",
            "Column.join\n",
            "Property Description:\nJoin ID for a search column as a string.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.join\n"
        ]
    },
    "(N/search) Column.label": {
        "prefix": "Column.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.label for more information.",
        "description": [
            "N/search Module",
            "Column.label\n",
            "Property Description:\nLabel used for the search column. You can only get or set custom labels with this property.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.label\n"
        ]
    },
    "(N/search) Column.name": {
        "prefix": "Column.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.name for more information.",
        "description": [
            "N/search Module",
            "Column.name\n",
            "Property Description:\nName of a search column as a string.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.name\n"
        ]
    },
    "(N/search) Column.sort": {
        "prefix": "Column.sort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.sort for more information.",
        "description": [
            "N/search Module",
            "Column.sort\n",
            "Property Description:\nThe sort order of the column.\nUse search.createColumn(options) and a value from the search.Sort enum to set the value of this property. If Column.sort is not set, the column is not sorted in any particular order.\nAfter you create a column, you cannot change the sort order of the column. If you use the same column in another search and specify a new sort order, the previous sort order is still used.\n",
            "Type:\nsearch.Sort enum\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.sort\n"
        ]
    },
    "(N/search) Column.summary": {
        "prefix": "Column.summary",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Column.summary for more information.",
        "description": [
            "N/search Module",
            "Column.summary\n",
            "Property Description:\nReturns the summary type for a search column.\n",
            "Type:\nsearch.Summary enum\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Column.summary\n"
        ]
    },
    "(N/search) search.Filter": {
        "prefix": "search.Filter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.Filter for more information.",
        "description": [
            "N/search Module",
            "search.Filter\n",
            "Object Description:\nEncapsulates a search filter used in a search. Use the properties for the Filter object to get and set the filter properties.\nYou create a search filter object with search.createFilter(options) and add it to a search.Search object that you create with search.create(options) or load with search.load(options).\nNetSuite uses an implicit AND operator with search filters, as opposed to filter expressions which explicitly use either AND and OR operators.\nUse the following guidelines with the Filter object:\nTo search for a \"none of null\" value, meaning do not show results without a value for the specified field, use a value of @NONE@ in the Filter.formula property.\nTo search on checkbox fields, use the IS operator with a value of T or F to search for checked or unchecked fields, respectively.\nFor a complete list of this object’s methods and properties, see Filter Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Filter\n"
        ]
    },
    "(N/search) Filter.formula": {
        "prefix": "Filter.formula",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Filter.formula for more information.",
        "description": [
            "N/search Module",
            "Filter.formula\n",
            "Property Description:\nFormula used by the search filter. Use this property to get or set the formula used by the search filter.\nFor more information about the formula property, see search.createFilter(options). For more information about using formulas in searches, see Formulas in Search.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Filter.formula\n"
        ]
    },
    "(N/search) Filter.join": {
        "prefix": "Filter.join",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Filter.join for more information.",
        "description": [
            "N/search Module",
            "Filter.join\n",
            "Property Description:\nJoin ID for the search filter as a string.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Filter.join\n"
        ]
    },
    "(N/search) Filter.name": {
        "prefix": "Filter.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Filter.name for more information.",
        "description": [
            "N/search Module",
            "Filter.name\n",
            "Property Description:\nName or internal ID of the search field as a string.\nFor more information, see search.createFilter(options).\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Filter.name\n"
        ]
    },
    "(N/search) Filter.operator": {
        "prefix": "Filter.operator",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Filter.operator for more information.",
        "description": [
            "N/search Module",
            "Filter.operator\n",
            "Property Description:\nOperator used for the search filter. This value is set with the search.Operator enum. The search.Operator enum contains the valid operator values for this property.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Filter.operator\n"
        ]
    },
    "(N/search) Filter.summary": {
        "prefix": "Filter.summary",
        "body": [
            "${1:Filter}.summary{",
            "\tSSS_INVALID_SRCH_FILTER_SUM: ${2:A search.Filter contains an invalid summary type: {1}.}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Filter.summary\n",
            "Property Description:\nSummary type for the search filter. Use this property to get or set the value of the summary type.\nSee search.Summary.\n",
            "Type:\nsearch.Summary\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Filter.summary\n"
        ]
    },
    "(N/search) search.Page": {
        "prefix": "search.Page",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.Page for more information.",
        "description": [
            "N/search Module",
            "search.Page\n",
            "Object Description:\nEncapsulates an individual search page containing a result set for a paginated search.\nFor a complete list of this object’s methods and properties, see Page Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\nVersion 2015 Release 1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Page\n"
        ]
    },
    "(N/search) Page.next()": {
        "prefix": "Page.next()",
        "body": [
            "${1:Page}.next(){",
            "\tINVALID_PAGE_RANGE: ${2:Invalid page range.}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Page.next()\n",
            "Method Description:\nMethod used to fetch the next segment of data (bounded by search.PageRange).\nMoves the current page to next range.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.next()\n"
        ]
    },
    "(N/search) Page.next.promise()": {
        "prefix": "Page.next.promise()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.next.promise() for more information.",
        "description": [
            "N/search Module",
            "Page.next.promise()\n",
            "Method Description:\nMethod used to asynchronously fetch the next segment of data (bounded by search.PageRange).\nMoves the current page to another range. The promise is complete when the data for this range is loaded or rejected.\nThe parameters and errors thrown for this method are the same as those for Page.next(). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nPage.next()\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.next.promise()\n"
        ]
    },
    "(N/search) Page.prev()": {
        "prefix": "Page.prev()",
        "body": [
            "${1:Page}.prev(){",
            "\tINVALID_PAGE_RANGE: ${2:Invalid page range.}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Page.prev()\n",
            "Method Description:\nMethod used to fetch the previous segment of data (bounded by search.PageRange).\nMoves the current page to previous range.\n",
            "Returns:\nVoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.prev()\n"
        ]
    },
    "(N/search) Page.prev.promise()": {
        "prefix": "Page.prev.promise()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.prev.promise() for more information.",
        "description": [
            "N/search Module",
            "Page.prev.promise()\n",
            "Method Description:\nMethod used to asynchronously fetch the previous segment of data (bounded by search.PageRange).\nMoves the current page to another range. The promise is complete when the data for this range is loaded or rejected.\nThe parameters and errors thrown for this method are the same as those for Page.prev(). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nPage.prev()\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.prev.promise()\n"
        ]
    },
    "(N/search) Page.data": {
        "prefix": "Page.data",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.data for more information.",
        "description": [
            "N/search Module",
            "Page.data\n",
            "Property Description:\nThe results from a paginated search.\n",
            "Type:\nsearch.Result[]\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.data\n"
        ]
    },
    "(N/search) Page.isFirst": {
        "prefix": "Page.isFirst",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.isFirst for more information.",
        "description": [
            "N/search Module",
            "Page.isFirst\n",
            "Property Description:\nIndicates whether the page is within the first range of the result set.\nFlags the start of the data collection.\n",
            "Type:\nboolean\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.isFirst\n"
        ]
    },
    "(N/search) Page.isLast": {
        "prefix": "Page.isLast",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.isLast for more information.",
        "description": [
            "N/search Module",
            "Page.isLast\n",
            "Property Description:\nIndicates whether a page is within the last range of the result set.\nFlags the end of the data collection.\n",
            "Type:\nboolean\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.isLast\n"
        ]
    },
    "(N/search) Page.pagedData": {
        "prefix": "Page.pagedData",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.pagedData for more information.",
        "description": [
            "N/search Module",
            "Page.pagedData\n",
            "Property Description:\nThe PagedData Object used to fetch this Page Object.\n",
            "Type:\nsearch.PagedData\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.pagedData\n"
        ]
    },
    "(N/search) Page.pageRange": {
        "prefix": "Page.pageRange",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Page.pageRange for more information.",
        "description": [
            "N/search Module",
            "Page.pageRange\n",
            "Property Description:\nThe PageRange Object used to fetch this Page Object.\nPage boundary information with the key and label.\n",
            "Type:\nsearch.PageRange\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Page.pageRange\n"
        ]
    },
    "(N/search) search.PagedData": {
        "prefix": "search.PagedData",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.PagedData for more information.",
        "description": [
            "N/search Module",
            "search.PagedData\n",
            "Object Description:\nHolds metadata for a paginated query.\nThis object provides a high-level view of a search result, giving the total count of records, a list of pages ranges, and page size. For paged searches, the maximum number of result rows per page is 1000. The minimum number of result rows per page is 5, except for the last page in the result set (because the last page may include fewer than 5 results).\nFor a complete list of this object’s methods and properties, see PagedData Object Members.\nSearch result sets are not cached. If records applicable to your search are created, modified, or deleted at the same time you are traversing your result set, your result set may change.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\nVersion 2015 Release 1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.PagedData\n"
        ]
    },
    "(N/search) PagedData.fetch(options)": {
        "prefix": "PagedData.fetch(options)",
        "body": [
            "${1:PagedData}.fetch({",
            "\t",
            "})"
        ],
        "description": [
            "N/search Module",
            "PagedData.fetch()\n",
            "Method Description:\nThis method retrieves the data within the specified page range.\nThis method also includes a promise version, PagedData.fetch.promise(). For more information about promises, see Promise Object.\n",
            "Returns:\nsearch.Page\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.fetch(options)\n"
        ]
    },
    "(N/search) PagedData.fetch.promise()": {
        "prefix": "PagedData.fetch.promise()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.fetch.promise() for more information.",
        "description": [
            "N/search Module",
            "PagedData.fetch.promise()\n",
            "Method Description:\nThis method asynchronously retrieves the data bounded by the pageRange parameter.\nThe parameters and errors thrown for this method are the same as those for PagedData.fetch(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nPagedData.fetch(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information see, SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.fetch.promise()\n"
        ]
    },
    "(N/search) PagedData.count": {
        "prefix": "PagedData.count",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.count for more information.",
        "description": [
            "N/search Module",
            "PagedData.count\n",
            "Property Description:\nThe total number of results when Search.runPaged(options) was executed.\n",
            "Type:\nnumber\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.count\n"
        ]
    },
    "(N/search) PagedData.pageRanges": {
        "prefix": "PagedData.pageRanges",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageRanges for more information.",
        "description": [
            "N/search Module",
            "PagedData.pageRanges\n",
            "Property Description:\nThe collection of search.PageRange objects that divide the entire result set into smaller groups.\nThis property includes page range information with the key and label for rendering. Page range indexes start at 0.\n",
            "Type:\nsearch.PageRange[]\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageRanges\n"
        ]
    },
    "(N/search) PagedData.pageSize": {
        "prefix": "PagedData.pageSize",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageSize for more information.",
        "description": [
            "N/search Module",
            "PagedData.pageSize\n",
            "Property Description:\nMaximum number of entries per page\nPossible values are 5 - 1000 entries per page.\n",
            "Type:\nnumber\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.pageSize\n"
        ]
    },
    "(N/search) PagedData.searchDefinition": {
        "prefix": "PagedData.searchDefinition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.searchDefinition for more information.",
        "description": [
            "N/search Module",
            "PagedData.searchDefinition\n",
            "Property Description:\nThe search criteria used to execute the result set for this PagedData Object.\n",
            "Type:\nsearch.Search (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PagedData.searchDefinition\n"
        ]
    },
    "(N/search) search.PageRange": {
        "prefix": "search.PageRange",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.PageRange for more information.",
        "description": [
            "N/search Module",
            "search.PageRange\n",
            "Object Description:\nDefines the page range to contain the result set\nFor a complete list of this object’s properties, see PageRange Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\nVersion 2015 Release 1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.PageRange\n"
        ]
    },
    "(N/search) PageRange.compoundLabel": {
        "prefix": "PageRange.compoundLabel",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.compoundLabel for more information.",
        "description": [
            "N/search Module",
            "PageRange.compoundLabel\n",
            "Property Description:\nHuman-readable label with beginning and ending range identifiers\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.compoundLabel\n"
        ]
    },
    "(N/search) PageRange.index": {
        "prefix": "PageRange.index",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.index for more information.",
        "description": [
            "N/search Module",
            "PageRange.index\n",
            "Property Description:\nThe index of the page range.\nPage range indexes start at 0.\n",
            "Type:\nnumber\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PageRange.index\n"
        ]
    },
    "(N/search) search.Result": {
        "prefix": "search.Result",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.Result for more information.",
        "description": [
            "N/search Module",
            "search.Result\n",
            "Object Description:\nEncapsulate a single search result row. Use the methods and properties for search.Result to get the column values for the result row.\nUse search.ResultSet for the set of results from a search.\nFor more information about executing NetSuite searches using SuiteScript, see Searching Overview.\nFor a complete list of this object’s methods and properties, see Result Object Members,\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Result\n"
        ]
    },
    "(N/search) Result.getText(column)": {
        "prefix": "Result.getText(column)",
        "body": [
            "${1:Result}.getText(column){",
            "\tcolumn: ${2:search.Column}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Result.getText(column)\n",
            "Method Description:\nUsed on select, image, and document fields. Returns the text value of a specified search result column. For convenience, this method takes a single search.Column Object.\nThis method is overloaded. You can also use Result.getText(options) to get column text value based on the name, join and summary values for a column.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.getText(column)\n"
        ]
    },
    "(N/search) Result.getText(options)": {
        "prefix": "Result.getText(options)",
        "body": [
            "${1:Result}.getText({",
            "\tname: ${2:string},",
            "\tjoin: ${3:string},",
            "\tsummary: ${4:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Result.getText()\n",
            "Method Description:\nUsed on select, image, and document fields. Returns the text value of a specified search result column.\nThis method is overloaded. You can also use Result.getText(column) to get a column value. This method takes in a single search.Column.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.getText(options)\n"
        ]
    },
    "(N/search) Result.getValue(column)": {
        "prefix": "Result.getValue(column)",
        "body": [
            "${1:Result}.getValue(column){",
            "\tcolumn: ${2:search.Column}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Result.getValue(column)\n",
            "Method Description:\nUsed on formula and non-formula (standard) fields. Returns the value of a specified search result column. For convenience, this method takes a single search.Column Object.\nThis method is overloaded. You can also use Result.getValue(options) to get column values based on the name, join, and summary values for a column.\n",
            "Returns:\nThe return type depends on the type of search result column that was specified:\nboolean if the column is a check box field\nnumber if the column is a record, list, decimal number, or image field, with the following considerations:\nFor image fields, the returned number represents the ID of the image file.\nstring for all other column types, with the following considerations:\nFor multiselect fields, the returned string represents a comma-separated list of IDs. Each ID represents a selectable option in the field.\nFor date/time fields, the returned string represents the formatted string value of the date. You can use methods in the N/format module to work with this string (for example, converting it to a Date object). For more information, see N/format Module.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.getValue(column)\n"
        ]
    },
    "(N/search) Result.getValue(options)": {
        "prefix": "Result.getValue(options)",
        "body": [
            "${1:Result}.getValue({",
            "\tname: ${2:string},",
            "\tjoin: ${3:string},",
            "\tsummary: ${4:string},",
            "\tfunc: ${5:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Result.getValue()\n",
            "Method Description:\nUsed on formula and non-formula (standard) fields. Returns the value of a specified search result column. Takes in arguments for name, join, and summary.\nThis method is overloaded. You can also use Result.getValue(column) to get column values. This method takes in a single search.Column.\nIf you have multiple search return columns and you apply grouping, all columns must include a summary property.\n",
            "Returns:\nThe return type depends on the type of search result column that was specified:\nboolean if the column is a check box field\nnumber if the column is a record, list, decimal number, or image field, with the following considerations:\nFor image fields, the returned number represents the ID of the image file.\nstring for all other column types, with the following considerations:\nFor multiselect fields, the returned string represents a comma-separated list of IDs. Each ID represents a selectable option in the field.\nFor date/time fields, the returned string represents the formatted string value of the date. You can use methods in the N/format module to work with this string (for example, converting it to a Date object). For more information, see N/format Module.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.getValue(options)\n"
        ]
    },
    "(N/search) Result.columns": {
        "prefix": "Result.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Result.columns for more information.",
        "description": [
            "N/search Module",
            "Result.columns\n",
            "Property Description:\nArray of search.Column objects that encapsulate the columns returned in the search result row.\n",
            "Type:\nsearch.Column[] (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.columns\n"
        ]
    },
    "(N/search) Result.id": {
        "prefix": "Result.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Result.id for more information.",
        "description": [
            "N/search Module",
            "Result.id\n",
            "Property Description:\nThe internal ID for the record returned in a search result row. This ID is a number, but it is stored in this property as a string (for example, '237').\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.id\n"
        ]
    },
    "(N/search) Result.recordType": {
        "prefix": "Result.recordType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Result.recordType for more information.",
        "description": [
            "N/search Module",
            "Result.recordType\n",
            "Property Description:\nThe type of record returned in a search result row.\n",
            "Type:\nsearch.Type enum\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Result.recordType\n"
        ]
    },
    "(N/search) search.ResultSet": {
        "prefix": "search.ResultSet",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.ResultSet for more information.",
        "description": [
            "N/search Module",
            "search.ResultSet\n",
            "Object Description:\nEncapsulates a set of search results returned by Search.run().\nUse the methods and properties for the ResultSet object to iterate through each result returned by the search or access an arbitrary slice of results. The maximum number of results in a ResultSet object is 4000. If a search matches more than 4000 results, you must use Search.runPaged(options) or Search.runPaged.promise(options) to retrieve the full set of results.\nFor a complete list of this object’s methods and properties, see ResultSet Object Members.\nSearch result sets are not cached. If records applicable to your search are created, modified, or deleted at the same time you are traversing your result set, your result set may change.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.ResultSet\n"
        ]
    },
    "(N/search) ResultSet.each(callback)": {
        "prefix": "ResultSet.each(callback)",
        "body": [
            "${1:ResultSet}.each(callback){",
            "\tcallback: ${2:function}",
            "})"
        ],
        "description": [
            "N/search Module",
            "ResultSet.each(callback)\n",
            "Method Description:\nUse a developer-defined function to invoke on each row in the search results, up to 4000 results at a time. The callback function must use the following signature:\nboolean callback(result.Result result);\nThe callback function takes a search.Result object as an input parameter and returns a boolean which can be used to stop the iteration with a value of false, or continue the iteration with a value of true.\nThe work done in the context of the callback function counts towards the governance of the script that called it. For example, if the callback function is running in the context of a scheduled script, which has a 10,000 unit governance limit, make sure the amount of processing within the callback function does not put the entire script at risk of exceeding scheduled script governance limits.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.each(callback)\n"
        ]
    },
    "(N/search) ResultSet.each.promise(callback)": {
        "prefix": "ResultSet.each.promise(callback)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.each.promise(callback) for more information.",
        "description": [
            "N/search Module",
            "ResultSet.each.promise(callback)\n",
            "Method Description:\nAsynchronously uses a developer-defined function to invoke on each row in the search results, up to 4000 results at a time. The callback function must use the following signature:\nboolean callback(result.Result result);\nThe parameters and errors thrown for this method are the same as those for ResultSet.each(callback). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.each.promise(callback)\n"
        ]
    },
    "(N/search) ResultSet.getRange(options)": {
        "prefix": "ResultSet.getRange(options)",
        "body": [
            "${1:ResultSet}.getRange({",
            "\tstart: ${2:number},",
            "\tend: ${3:number}",
            "})"
        ],
        "description": [
            "N/search Module",
            "ResultSet.getRange()\n",
            "Method Description:\nRetrieve a slice of the search result as an array of search.Result objects.\nThe start parameter is the inclusive index of the first result to return. The end parameter is the exclusive index of the last result to return. For example, getRange(0, 10) retrieves 10 search results, at index 0 through index 9. Unlimited rows in the result are supported, however you can only return 1,000 at a time based on the index values.\nIf there are fewer results available than requested, then the array will contain fewer than end - start entries. For example, if there are only 25 search results, then getRange(20, 30) will return an array of 5 search.Result objects.\nIf you specify a range for which there are no results, an empty array is returned. For example, if there are 25 search results, then getRange(30, 40) will return an empty array.\n",
            "Returns:\nsearch.Result[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.getRange(options)\n"
        ]
    },
    "(N/search) ResultSet.getRange.promise(options)": {
        "prefix": "ResultSet.getRange.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.getRange.promise(options) for more information.",
        "description": [
            "N/search Module",
            "ResultSet.getRange.promise()\n",
            "Method Description:\nMethod used to asynchronously retrieve a slice of the search result as an array of search.Result objects.\nFor information about the parameters and errors thrown for this method, see ResultSet.getRange(options). For additional information on promises, see Promise Object.\n",
            "Returns:\nsearch.Result[]\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.getRange.promise(options)\n"
        ]
    },
    "(N/search) ResultSet.columns": {
        "prefix": "ResultSet.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.columns for more information.",
        "description": [
            "N/search Module",
            "ResultSet.columns\n",
            "Property Description:\nAn array of search.Column objects that represent the columns returned in the search results.\n",
            "Type:\nsearch.Column[]\nThis property is read-only\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ResultSet.columns\n"
        ]
    },
    "(N/search) search.Search": {
        "prefix": "search.Search",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.Search for more information.",
        "description": [
            "N/search Module",
            "search.Search\n",
            "Object Description:\nEncapsulates a NetSuite search. Use the methods available to search.Search to create a search, run a search, or save a search.\nYou do not need to save the search to run it.\nFor a complete list of this object’s methods and properties, see Search Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Search\n"
        ]
    },
    "(N/search) Search.run()": {
        "prefix": "Search.run()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.run() for more information.",
        "description": [
            "N/search Module",
            "Search.run()\n",
            "Method Description:\nRuns an on-demand search created with search.create(options) or a search loaded with search.load(options), returning the results as a search.ResultSet. Calling this method does not save the search.\nUse this method with search.create(options) to create and run on-demand searches that are never saved to the database.\nAfter you run a search, you can use ResultSet.each(callback) to iterate through the result set and process each result.\nWhen you call this method, consider the following:\nSearch result sets are not cached. If records applicable to your search are created, modified, or deleted at the same time you are traversing your result set, your result set may change.\nFor better performance, consider creating a saved search in the UI and loading it in your script using search.load(options) instead of creating the search directly in your script using search.create(options).\n",
            "Returns:\nsearch.ResultSet\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.run()\n"
        ]
    },
    "(N/search) Search.runPaged(options)": {
        "prefix": "Search.runPaged(options)",
        "body": [
            "${1:Search}.runPaged({",
            "\tpageSize: ${2:number}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Search.runPaged()\n",
            "Method Description:\nRuns the current search and returns summary information about paginated results.\nCalling this method does not give you the result set or save the search.\nTo retrieve data, use PagedData.fetch(options).\nWhen you use this method to run a paged search, consider the following:\nSearch result sets are not cached. If records applicable to your search are created, modified, or deleted at the same time you are traversing your result set, your result set may change.\nThis method can return a maximum of 1000 pages of search results.\n",
            "Returns:\nsearch.PagedData\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.runPaged(options)\n"
        ]
    },
    "(N/search) Search.runPaged.promise(options)": {
        "prefix": "Search.runPaged.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.runPaged.promise(options) for more information.",
        "description": [
            "N/search Module",
            "Search.runPaged.promise()\n",
            "Method Description:\nRuns the current search asynchronously and returns a search.PagedData Object.\nThe parameters and errors thrown for this method are the same as those for Search.runPaged(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nSearch.runPaged(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.runPaged.promise(options)\n"
        ]
    },
    "(N/search) Search.save()": {
        "prefix": "Search.save()",
        "body": [
            "${1:Search}.save(){",
            "\tSSS_MISSING_REQD_ARGUMENT: ${2:{1}: Missing a required argument: {2}},",
            "\tNAME_ALREADY_IN_USE: ${3:A search has already been saved with that name. Please use a different name.},",
            "\tSSS_DUPLICATE_SEARCH_SCRIPT_ID: ${4:Saved search script IDs must be unique. Please choose another script ID. If you are trying to modify an existing saved search, use search.load().}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Search.save()\n",
            "Method Description:\nSaves a search created by search.create(options) or loaded with search.load(options). Returns the internal ID of the saved search.\nYou must set the title and id properties for a new saved search before you save it, either when you create it with search.create(options) or by setting the Search.title and Search.id properties.\nIf you do not set the saved search ID, NetSuite generates one for you. See Search.id.\nYou do not need to set these properties if you load a previously saved search with search.load(options) and then save it.\nThis method also includes a promise version, Search.save.promise(). For more information about promises, see Promise Object.\n",
            "Returns:\nthe internal search ID of the saved search as a number\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.save()\n"
        ]
    },
    "(N/search) Search.save.promise()": {
        "prefix": "Search.save.promise()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.save.promise() for more information.",
        "description": [
            "N/search Module",
            "Search.save.promise()\n",
            "Method Description:\nAsynchronously saves a search created by search.create(options) or loaded with search.load(options). Returns the internal ID of the saved search.\nThe parameters and errors thrown for this method are the same as those for Search.save(). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nSearch.save()\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.save.promise()\n"
        ]
    },
    "(N/search) Search.columns": {
        "prefix": "Search.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.columns for more information.",
        "description": [
            "N/search Module",
            "Search.columns\n",
            "Property Description:\nColumns to return for this search as an array of search.Column objects or a string array of column names.\nYou set this value with an array of search.Column objects or a single search.Column to overwrite any prior return columns for the search. Use null to set an empty array and remove any existing columns on this search.\n",
            "Type:\nsearch.Column[] | string[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.columns\n"
        ]
    },
    "(N/search) Search.filterExpression": {
        "prefix": "Search.filterExpression",
        "body": [
            "${1:Search}.filterExpression{",
            "\tSSS_INVALID_SRCH_FILTER_EXPR: ${2:Malformed search filter expression.}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Search.filterExpression\n",
            "Property Description:\nUse filter expressions as a shortcut to create filters (search.Filter).\nA search filter expression is a JavaScript string array of zero or more elements. Each element is one of the following:\nOperator - For a list of supported operators, see search.Operator.\nFilter term\nTwo or more filter expressions combined logically with ‘and’, ‘or’, or ‘not’\nThis property accepts nested arrays in which any element of the nested array can be an Object, a string, a number, or a boolean. Use null to set an empty array and remove any existing filter expressions on this search.\nIf you want to get or set search filters, use the Search.filters property.\n",
            "Type:\nArray[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.filterExpression\n"
        ]
    },
    "(N/search) Search.filters": {
        "prefix": "Search.filters",
        "body": [
            "${1:Search}.filters{",
            "\tSSS_INVALID_SRCH_FILTER: ${2:An search filter contains invalid search criteria}",
            "})"
        ],
        "description": [
            "N/search Module",
            "Search.filters\n",
            "Property Description:\nFilters for the search as an array of search.Filter objects. Value is null if the search has no defined filters.\nYou set this value with an array or single search.Filter objects to overwrite any prior filters. Use null to set an empty array and remove any existing filters on this search. Use search.createFilter(options) to create a filter.\nIf you want to get or set a search filter expression, use the Search.filterExpression property.\n",
            "Type:\nsearch.Filter[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.filters\n"
        ]
    },
    "(N/search) Search.id": {
        "prefix": "Search.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.id for more information.",
        "description": [
            "N/search Module",
            "Search.id\n",
            "Property Description:\nScript ID for a saved search, starting with customsearch. If you do not set this property and then save the search, NetSuite generates a script ID for you.\nThis is not the internal NetSuite ID for the saved search. See Search.searchId.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.id\n"
        ]
    },
    "(N/search) Search.isPublic": {
        "prefix": "Search.isPublic",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.isPublic for more information.",
        "description": [
            "N/search Module",
            "Search.isPublic\n",
            "Property Description:\nValue is true if the search is public, or false if it is not. By default, all searches created through search.create(options) are private.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.isPublic\n"
        ]
    },
    "(N/search) Search.packageId": {
        "prefix": "Search.packageId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.packageId for more information.",
        "description": [
            "N/search Module",
            "Search.packageId\n",
            "Property Description:\nThe application ID for this search.\nAn application ID identifies a SuiteApp project and is a fully qualified name with the following notation:\nFor example, com.netsuite.mysuiteapp and org.mycompany.helloworld are application IDs.\nTo use this feature, the Show App ID Field preference must be enabled in your NetSuite account. For more information, see SuiteCloud Development Framework Account Preferences (SDF Developers Only).\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.packageId\n"
        ]
    },
    "(N/search) Search.searchId": {
        "prefix": "Search.searchId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.searchId for more information.",
        "description": [
            "N/search Module",
            "Search.searchId\n",
            "Property Description:\nInternal ID of the search.\nThe internal ID is available only when the search is either loaded with search.load(options) or after is has been saved with Search.save().\nTypical values are 55 or 234 or 87, not a value like customsearch_mysearch. Any ID prefixed with customsearch is a script ID, not the internal system ID for a search.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.searchId\n"
        ]
    },
    "(N/search) Search.searchType": {
        "prefix": "Search.searchType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.searchType for more information.",
        "description": [
            "N/search Module",
            "Search.searchType\n",
            "Property Description:\nInternal ID name of the record type on which a search is based. Use this if you have the internal ID of the search, but do not know the record type the search was based on.\nFor example, if the search was on a Customer record, this property is customer; if the search was on the Sales Order record type, this property is salesorder.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.searchType\n"
        ]
    },
    "(N/search) Search.settings": {
        "prefix": "Search.settings",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.settings for more information.",
        "description": [
            "N/search Module",
            "Search.settings\n",
            "Property Description:\nSearch settings for this search as an array of search.Setting objects or a string array of column names. Search settings let you specify search parameters that are typically available only in the UI.\nYou set this value with an array of search.Setting objects or a single search.Setting object. You can create a search.Setting object by calling search.createSetting(options). You can also set this value with an array of column names, each of which is a string.\nThe supported values for a search.Setting object differ depending on the search parameter that you set. For more information, see Setting.name and Setting.value.\n",
            "Type:\nsearch.Setting[] | string[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.settings\n"
        ]
    },
    "(N/search) Search.title": {
        "prefix": "Search.title",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Search.title for more information.",
        "description": [
            "N/search Module",
            "Search.title\n",
            "Property Description:\nTitle for a saved search. Use this property to set the title for a search before you save it for the first time.\nYou can also set the title for a search when you create it with search.create(options).\nThe Search.title property is required to save a search with Search.save().\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Search.title\n"
        ]
    },
    "(N/search) search.Setting": {
        "prefix": "search.Setting",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.Setting for more information.",
        "description": [
            "N/search Module",
            "search.Setting\n",
            "Object Description:\nDefines a search setting.\nSearch settings let you specify search parameters that are typically available only in the UI. The following settings are supported:\nConsolidated Exchange Rate: This setting affects how consolidation is performed (for example, consolidation using the Average rate type, consolidation using the Historical rate type, and so on). This setting applies to transaction searches, and it is applicable only to OneWorld accounts.\nShow Period End Transactions: This setting indicates whether period end transactions are included in search results. This setting applies to transaction searches, and it is applicable only to OneWorld accounts. It also requires the Show Period End transactions feature to be enabled.\nUse search.createSetting(options) to create a setting. After you create your settings, assign them as array values to Search.settings.\nFor a complete list of this object’s properties, see Setting Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Setting\n"
        ]
    },
    "(N/search) Setting.name": {
        "prefix": "Setting.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Setting.name for more information.",
        "description": [
            "N/search Module",
            "Setting.name\n",
            "Property Description:\nThe name of the search parameter.\nThis property is set when you call search.createSetting(options). The following values are supported for this property:\nconsolidationtype: This value corresponds to the Consolidated Exchange Rate setting.\nincludeperiodendtransactions: This value corresponds to the Show Period End Transactions setting.\n",
            "Type:\nstring\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Setting.name\n"
        ]
    },
    "(N/search) Setting.value": {
        "prefix": "Setting.value",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Setting.value for more information.",
        "description": [
            "N/search Module",
            "Setting.value\n",
            "Property Description:\nThe value of the search parameter.\nThis property is set when you call search.createSetting(options). If you specify consolidationtype as the search parameter name (Setting.name), the following values are supported for this parameter:\nACCTTYPE\nAVERAGE\nCURRENT\nHISTORICAL\nNONE\nIf you specify includeperiodendtransactions as the search parameter name (Setting.name), the following values are supported for this parameter:\nF\nFALSE\nT\nTRUE\nThese values are not case sensitive.\n",
            "Type:\nstring\nThis property is read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Setting.value\n"
        ]
    },
    "(N/search) search.create(options)": {
        "prefix": "search.create(options)",
        "body": [
            "${1:search}.create({",
            "\ttype: ${2:string},",
            "\tfilters: ${3:search.Filter | search.Filter[] | Object | Object[] | string | string[]},",
            "\tfilterExpression: ${4:Object[]},",
            "\tcolumns: ${5:search.Column | search.Column[] | Object | Object[] | string | string[]},",
            "\tpackageId: ${6:string},",
            "\tsettings: ${7:search.Setting | search.Setting[] | Object | Object[] | string | string[]},",
            "\ttitle: ${8:string},",
            "\tid: ${9:string},",
            "\tisPublic: ${10:boolean}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.create()\n",
            "Method Description:\nCreates a new search and returns it as a search.Search object.\nThe search can be modified and run as an on demand search with Search.run(), without saving it. Alternatively, calling Search.save() will save the search to the database, so it can be reused later in the UI or loaded with search.load(options).\nThis method is agnostic in terms of its options.filters argument. It can accept input of a single search.Filter object, an array of search.Filter objects, or a search filter expression.\nThe search.create(options) method also includes a promise version, search.create.promise(options). For more information about promises, see Promise Object.\nWhen you use this method to create a search, consider the following:\nWhen you define the search, make sure you sort using the field with the most unique values, or sort using multiple fields. Sorting with a single field that has multiple identical values can cause the result rows to be in a different order each time the search is run.\nYou cannot directly create a filter or column for a list/record type field in SuiteScript by passing in its text value. You must use the field’s internal ID. If you must use the field’s text value, you can create a filter or column with a formula using name: 'formulatext'.\n",
            "Returns:\nsearch.Search\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.create(options)\n"
        ]
    },
    "(N/search) search.create.promise(options)": {
        "prefix": "search.create.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.create.promise(options) for more information.",
        "description": [
            "N/search Module",
            "search.create.promise()\n",
            "Method Description:\nCreates a new search asynchronously and returns it as a search.Search object.\nThe parameters and errors thrown for this method are the same as those for search.create(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nsearch.create(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.create.promise(options)\n"
        ]
    },
    "(N/search) search.createColumn(options)": {
        "prefix": "search.createColumn(options)",
        "body": [
            "${1:search}.createColumn({",
            "\tname: ${2:string},",
            "\tjoin: ${3:string},",
            "\tsummary: ${4:string},",
            "\tformula: ${5:string},",
            "\tfunction: ${6:string},",
            "\tlabel: ${7:string},",
            "\tsort: ${8:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.createColumn()\n",
            "Method Description:\nCreates a new search column as a search.Column object.\nAs you create search columns, consider the following:\nYou cannot directly create a filter or column for a list/record type field in SuiteScript by passing in its text value. You must use the field’s internal ID. If you must use the field’s text value, you can create a filter or column with a formula using name: 'formulatext'.\nAfter you create a column, you cannot change the sort order of the column. If you use the same column in another search and specify a new sort order, the previous sort order is still used (the sort order that you specified using the options.sort parameter).\n",
            "Returns:\nsearch.Column\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.createColumn(options)\n"
        ]
    },
    "(N/search) search.createFilter(options)": {
        "prefix": "search.createFilter(options)",
        "body": [
            "${1:search}.createFilter({",
            "\tname: ${2:string},",
            "\tjoin: ${3:string},",
            "\toperator: ${4:string},",
            "\tvalues: ${5:string | Date | number | boolean | string[] | Date[] | number[]},",
            "\tformul a: ${6:string},",
            "\tsummary: ${7:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.createFilter()\n",
            "Method Description:\nCreates a new search filter as a search.Filter object.\nYou cannot directly create a filter or column for a list/record type field in SuiteScript by passing in its text value. You must use the field’s internal ID. If you must use the field’s text value, you can create a filter or column with a formula using name: 'formulatext'.\n",
            "Returns:\nsearch.Filter\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.createFilter(options)\n"
        ]
    },
    "(N/search) search.createSetting(options)": {
        "prefix": "search.createSetting(options)",
        "body": [
            "${1:search}.createSetting({",
            "\tname: ${2:string},",
            "\tvalue: ${3:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.createSetting()\n",
            "Method Description:\nCreates a new search setting and returns it as a search.Setting object.\nSearch settings let you specify search parameters that are typically available only in the UI. The following settings are supported:\nConsolidated Exchange Rate: This setting affects how consolidation is performed (for example, consolidation using the Average rate type, consolidation using the Historical rate type, and so on). This setting applies to transaction searches, and it is applicable only to OneWorld accounts.\nShow Period End Transactions: This setting indicates whether period end transactions are included in search results. This setting applies to transaction searches, and it is applicable only to OneWorld accounts. It also requires the Period End Journal Entries feature to be enabled.\nAfter you create your settings, assign them as array values to Search.settings.\n",
            "Returns:\nsearch.Setting\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/search Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.createSetting(options)\n"
        ]
    },
    "(N/search) search.delete(options)": {
        "prefix": "search.delete(options)",
        "body": [
            "${1:search}.delete({",
            "\tid: ${2:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.delete()\n",
            "Method Description:\nDeletes an existing saved search. The saved search could have been created using the UI or created with search.create(options) and Search.save().\nThe search.delete(options) method also includes a promise version, search.delete.promise(options). For more information about promises, see Promise Object.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.delete(options)\n"
        ]
    },
    "(N/search) search.delete.promise(options)": {
        "prefix": "search.delete.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.delete.promise(options) for more information.",
        "description": [
            "N/search Module",
            "search.delete.promise()\n",
            "Method Description:\nDeletes an existing saved search asynchronously and returns it as a search.Search object. The saved search can be created using the UI or created with search.create(options) and Search.save().\nThe parameters and errors thrown for this method are the same as those for search.delete(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nsearch.delete(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.delete.promise(options)\n"
        ]
    },
    "(N/search) search.duplicates(options)": {
        "prefix": "search.duplicates(options)",
        "body": [
            "${1:search}.duplicates({",
            "\ttype: ${2:enum},",
            "\tfields: ${3:Object},",
            "\tid: ${4:number}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.duplicates()\n",
            "Method Description:\nPerforms a search for duplicate records based on the account's duplicate detection configuration.\nThis method also includes a promise version, search.duplicates.promise(options). For more information about promises, see Promise Object.\nThis API works only for records that support duplicate record detection (for example, customer, lead, prospect, contact, partner, and vendor records).\nFor more information about duplicate record detection, see Duplicate Record Detection.\n",
            "Returns:\nsearch.Result[] that contains the duplicate records\nResults are limited to 1000 rows.\nIf there are no search results, this method returns null.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.duplicates(options)\n"
        ]
    },
    "(N/search) search.duplicates.promise(options)": {
        "prefix": "search.duplicates.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.duplicates.promise(options) for more information.",
        "description": [
            "N/search Module",
            "search.duplicates.promise()\n",
            "Method Description:\nPerforms a search for duplicate records asynchronously based on the Duplicate Detection configuration for the account. Returns an array of search.Result objects. This method only applies to records that support duplicate record detection. These records include customer | lead | prospect | partner | vendor | contact.\nThe parameters and errors thrown for this method are the same as those for search.duplicates(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nsearch.duplicates(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.duplicates.promise(options)\n"
        ]
    },
    "(N/search) search.global(options)": {
        "prefix": "search.global(options)",
        "body": [
            "${1:search}.global({",
            "\tkeywords: ${2:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.global()\n",
            "Method Description:\nPerforms a global search against a single keyword or multiple keywords.\nSimilar to the global search functionality in the UI, you can programmatically filter the global search results that are returned. For example, you can use the following filter to limit the returned records to Customer records:\n'cu: simpson'\nThe search.global(options) method also includes a promise version, search.global.promise(options). For more information about promises, see Promise Object.\nFor more information about global search, see Global Search.\n",
            "Returns:\nsearch.Result[] as an array of result objects containing these columns: name, type, info1, and info2\nResults are limited to 1000 records.\nIf there are no search results, this method returns null.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.global(options)\n"
        ]
    },
    "(N/search) search.global.promise(options)": {
        "prefix": "search.global.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.global.promise(options) for more information.",
        "description": [
            "N/search Module",
            "search.global.promise()\n",
            "Method Description:\nPerforms a global search asynchronously against a single keyword or multiple keywords.\nReturns an array of search.Result objects with four columns: name, type, info1, and info2.\nThe parameters and errors thrown for this method are the same as those for search.global(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nsearch.global(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.global.promise(options)\n"
        ]
    },
    "(N/search) search.load(options)": {
        "prefix": "search.load(options)",
        "body": [
            "${1:search}.load({",
            "\tid: ${2:string},",
            "\ttype: ${3:string}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.load()\n",
            "Method Description:\nLoads an existing saved search and returns it as a search.Search. The saved search could have been created using the UI or created with search.create(options) and Search.save().\nThe search.load(options) method also includes a promise version, search.load.promise(options). For more information about promises, see Promise Object.\n",
            "Returns:\nsearch.Search\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.load(options)\n"
        ]
    },
    "(N/search) search.load.promise(options)": {
        "prefix": "search.load.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.load.promise(options) for more information.",
        "description": [
            "N/search Module",
            "search.load.promise()\n",
            "Method Description:\nLoads an existing saved search asynchronously and returns it as a search.Search object. The saved search could have been created using the UI or created with search.create(options) and Search.save().\nThe parameters and errors thrown for this method are the same as those for search.load(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nsearch.load(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n5 units\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.load.promise(options)\n"
        ]
    },
    "(N/search) search.lookupFields(options)": {
        "prefix": "search.lookupFields(options)",
        "body": [
            "${1:search}.lookupFields({",
            "\ttype: ${2:enum},",
            "\tid: ${3:string},",
            "\tcolumns: ${4:string | string[]}",
            "})"
        ],
        "description": [
            "N/search Module",
            "search.lookupFields()\n",
            "Method Description:\nPerforms a search for one or more body fields on a record.\nYou can use joined-field lookups with this method, with the following syntax:\njoin_id.field_name\nThe search.lookupFields(options) method also includes a promise version, search.lookupFields.promise(options). For more information about promises, see Promise Object.\nNote that the return contains either an object or a scalar value, depending on whether the looked-up field holds a single value, or a collection of values. Single select fields are returned as an object with value and text properties. Multi-select fields are returned as an object with value:text pairs.\nIn the following example, a select field like my_select would return an array of objects containing a value and text property. This select field contains multiple entries to select from, so each entry would have a numerical id (the value) and a text display (the text).\nFor \"internalid\" in this particular code snippet, the sample returns 1234. The internal id of a record is a single value, so a scalar is returned.\nIf you try to look up a field that does not exist on the specified record, an SSS_INVALID_SRCH_COL error is thrown.\n",
            "Returns:\nObject | Object[]\nReturns select fields as an object with value and text properties.\nReturns multiselect fields as an array of object with value:text pairs.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n1 unit\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.lookupFields(options)\n"
        ]
    },
    "(N/search) search.lookupFields.promise(options)": {
        "prefix": "search.lookupFields.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=search.lookupFields.promise(options) for more information.",
        "description": [
            "N/search Module",
            "search.lookupFields.promise()\n",
            "Method Description:\nPerforms a search asynchronously for one or more body fields on a record. Returns select fields as an object with value and text properties. Returns multiselect fields as an object with value:text pairs.\nThe parameters and errors thrown for this method are the same as those for search.lookupFields(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\nsearch.lookupFields(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n1 unit\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.lookupFields.promise(options)\n"
        ]
    },
    "(N/search) search.Operator": {
        "prefix": "search.Operator",
        "body": "search.Operator.${1|AFTER,ALLOF,ANY,ANYOF,BEFORE,BETWEEN,CONTAINS,DOESNOTCONTAIN,DOESNOTSTARTWITH,EQUALTO,GREATERTHAN,GREATERTHANOREQUALTO,HASKEYWORDS,IS,ISEMPTY,ISNOT,ISNOTEMPTY,LESSTHAN,LESSTHANOREQUALTO,NONEOF,NOTAFTER,NOTALLOF,NOTBEFORE,NOTBETWEEN,NOTEQUALTO,NOTGREATERTHAN,NOTGREATERTHANOREQUALTO,NOTLESSTHAN,NOTLESSTHANOREQUALTO,NOTON,NOTONORAFTER,NOTONORBEFORE,NOTWITHIN,ON,ONORAFTER,ONORBEFORE,STARTSWITH,WITHIN|}",
        "description": [
            "N/search Module",
            "search.Operator\n",
            "Enum Description:\nEnumeration that holds the values for search operators to use with the search.Filter.\nSee SuiteScript 1.0 Search Operators for more information about the field types supported for each operator type.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Operator\n"
        ]
    },
    "(N/search) search.Sort": {
        "prefix": "search.Sort",
        "body": "search.Sort.${1|ASC,DESC,NONE|}",
        "description": [
            "N/search Module",
            "search.Sort\n",
            "Enum Description:\nEnumeration that holds the values for supported sorting directions used with search.createColumn(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Sort\n"
        ]
    },
    "(N/search) search.Summary": {
        "prefix": "search.Summary",
        "body": "search.Summary.${1|GROUP,COUNT,SUM,AVG,MIN,MAX|}",
        "description": [
            "N/search Module",
            "search.Summary\n",
            "Enum Description:\nEnumeration that holds the values for summary types used by the Column.summary or Filter.summary properties. For more information about each summary type, see SuiteScript 1.0 Search Summary Types.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Summary\n"
        ]
    },
    "(N/search) search.Type": {
        "prefix": "search.Type",
        "body": "search.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ACTIVITY,ADV_INTER_COMPANY_JOURNAL_ENTRY,AGGR_FIN_DAT,ALLOC_RECOMMENDATION_DEMAND,ALLOC_RECOMMENDATION_DETAIL,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,AUTHENTICATE_DEVICE_INPUT,BALANCE_TRX_BY_SEGMENTS,BALANCING_DETAIL,BALANCING_RESULT,BALANCING_TRANSACTION,BILLING_ACCOUNT,BILLING_ACCOUNT_BILL_CYCLE,BILLING_ACCOUNT_BILL_REQUEST,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_ITEM_BALANCE,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CARDHOLDER_AUTHENTICATION,CARDHOLDER_AUTHENTICATION_EVENT,CASH_REFUND,CASH_SALE,CHALLENGE_SHOPPER_INPUT,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COM_SEARCH_BOOST,COM_SEARCH_BOOST_TYPE,COM_SEARCH_GROUP_SYN,COM_SEARCH_ONE_WAY_SYN,COMMERCE_CATEGORY,COMMERCE_SEARCH_ACTIVITY_DATA,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CROSSCHARGEABLE,CURRENCY,CURRENCY_EXCHANGE_RATE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_PURCHASE,CUSTOM_RECORD,CUSTOM_SALE,CUSTOM_TRANSACTION,DELETED_RECORD,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_REQUEST_TYPE,EMPLOYEE_CHANGE_TYPE,EMPLOYEE_PAYROLL_ITEM,EMPLOYEE_STATUS,END_TO_END_TIME,ENTITY,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_AMORT_PLAN_AND_SCHEDULE,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FIN_RPT_AGGREGATE_F_R,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GATEWAY_NOTIFICATION,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_LINES_AUDIT_LOG,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INSTALLMENT,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_BALANCE,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DEMAND,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_NUMBER_BIN,INVENTORY_NUMBER_ITEM,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_STATUS_LOCATION,INVENTORY_TRANSFER,INVOICE,INVOICE_GROUP,INVT_NUMBER_ITEM_BALANCE,ISSUE,ITEM,ITEM_ACCOUNT_MAPPING,ITEM_BIN_NUMBER,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_BASED_PROJECT_REVENUE_RULE,LABOR_CATEGORY,LABOR_COST_CARD,LABOR_COST_CARD_ITEM,LABOR_COST_ELEMENT,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE _HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_TYPE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_EVENT,PAYMENT_INSTRUMENT,PAYMENT_ITEM,PAYMENT_METHOD,PAYMENT_OPTION,PAYMENT_RESULT_PREVIEW,PAYROLL_SETUP,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PERMISSION,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PLANNED_ORDER,PLANNING_ITEM_CATEGORY,PLANNING_ITEM_GROUP,PLANNING_RULE_GROUP,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_IC_CHARGE_REQUEST,PROJECT_TASK,PROJECT_TEMPLATE,PROMISING_SETUP,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,RECENT_RECORD,RES_ALLOCATION_TIME_OFF_CONFLICT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_PLAN_AND_SCHEDULE,REV_REC_SCHEDULE,REV_REC_TEMPLATE,ROLE,S_C_M_PREDICTED_RISKS,S_C_M_PREDICTION_TRAIN_HISTORY,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SAVED_SEARCH,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SHOPPING_CART,SOLUTION,STATE,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_LINE_REVISION,SUBSCRIPTION_PLAN,SUBSCRIPTION_RENEWAL_HISTORY,SUBSIDIARY,SUBTOTAL_ITEM,SUITELET,SUITE_SCRIPT_DETAIL,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_DETAILS,SUPPLY_CHANGE_ORDER,SUPPLY_PLAN_DEFINITION,SUPPORT_CASE,SYSTEM_NOTE,TASK,TAX_DETAIL,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIMESHEET_APPROVAL,TIME_APPROVAL,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSACTION,TRANSFER_ORDER,UBER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|}",
        "description": [
            "N/search Module",
            "search.Type\n",
            "Enum Description:\nEnumeration that holds the string values for search types supported in the N/search Module. This enum is used to pass the type argument to search.create(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/search Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=search.Type\n"
        ]
    },
    "(N/sftp) Setting up an SFTP Transfer": {
        "prefix": "Setting up an SFTP Transfer",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Setting up an SFTP Transfer for more information."
    },
    "(N/sftp) SFTP Authentication": {
        "prefix": "SFTP Authentication",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SFTP Authentication for more information."
    },
    "(N/sftp) Supported Cipher Suites and Host Key Types": {
        "prefix": "Supported Cipher Suites and Host Key Types",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Supported Cipher Suites and Host Key Types for more information.",
        "description": [
            "Supported Cipher Suites and Host Key Types\n",
            "Communication protocol:\nSFTP (SSH + FTP) is supported.\nOnly CTR (and not CBC) ciphers are allowed. Your SFTP server can use the following encryption algorithms:\nAES 128-CTR\nAES 192-CTR\nAES 256-CTR\nRSA\nDSA\nECDSA\nFiles are not additionally encrypted during transfer. The entire transmission is encrypted by the SSH protocol.\n",
            "Authentication mechanism:\nUsername\nPassword\nPassword/SSH key with or without passphrase\n",
            "SSH host key:\nWith each connection request, you must supply the host key. Any host key changes need to be managed manually.\n",
            "GUID:\nThe password GUID should be a value generated by a credential field from a Suitelet using Form.addCredentialField(options).\nThe password GUID field's originating credential field must include the SFTP domain on the restrictToDomains parameter.\nThe password GUID field's originating credential field must include the script utilizing the password GUID on the restrictToScriptIds parameter.\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Supported Cipher Suites and Host Key Types\n"
        ]
    },
    "(N/sftp) Supported SuiteScript File Types": {
        "prefix": "Supported SuiteScript File Types",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Supported SuiteScript File Types for more information."
    },
    "(N/sftp) sftp.Connection": {
        "prefix": "sftp.Connection",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=sftp.Connection for more information.",
        "description": [
            "N/sftp Module",
            "sftp.Connection\n",
            "Object Description:\nRepresents a connection to the account on the remote FTP server.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/sftp Module\n",
            "Methods and Properties:\nConnection Object Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.Connection\n"
        ]
    },
    "(N/sftp) Connection.download(options)": {
        "prefix": "Connection.download(options)",
        "body": [
            "${1:Connection}.download({",
            "\tfilename: ${2:string},",
            "\tdirectory: ${3:string},",
            "\ttimeout: ${4:number}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "Connection.download()\n",
            "Method Description:\nDownloads a file from the remote FTP server.\n",
            "Returns:\nfile.File Object\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n100 units\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.download(options)\n"
        ]
    },
    "(N/sftp) Connection.upload(options)": {
        "prefix": "Connection.upload(options)",
        "body": [
            "${1:Connection}.upload({",
            "\tfile: ${2:file.File},",
            "\tfilename: ${3:string},",
            "\tdirectory: ${4:string},",
            "\ttimeout: ${5:number},",
            "\treplaceExisting: ${6:boolean}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "Connection.upload()\n",
            "Method Description:\nUploads a file to the remote FTP server. The maximum file size that can be uploaded to is 100 MB.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n100 units\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.upload(options)\n"
        ]
    },
    "(N/sftp) Connection.makeDirectory(options)": {
        "prefix": "Connection.makeDirectory(options)",
        "body": [
            "${1:Connection}.makeDirectory({",
            "\tpath: ${2:string}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "Connection.makeDirectory()\n",
            "Method Description:\nCreates an empty directory.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.makeDirectory(options)\n"
        ]
    },
    "(N/sftp) Connection.removeDirectory(options)": {
        "prefix": "Connection.removeDirectory(options)",
        "body": [
            "${1:Connection}.removeDirectory({",
            "\tpath: ${2:String}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "Connection.removeDirectory()\n",
            "Method Description:\nRemoves an empty directory.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.removeDirectory(options)\n"
        ]
    },
    "(N/sftp) Connection.removeFile(options)": {
        "prefix": "Connection.removeFile(options)",
        "body": [
            "${1:Connection}.removeFile({",
            "\tpath: ${2:String}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "Connection.removeFile()\n",
            "Method Description:\nRemoves a file.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.removeFile(options)\n"
        ]
    },
    "(N/sftp) Connection.move(options)": {
        "prefix": "Connection.move(options)",
        "body": [
            "${1:Connection}.move({",
            "\tfrom: ${2:String},",
            "\tto: ${3:String}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "Connection.move()\n",
            "Method Description:\nMoves a file or directory from one location to another.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.move(options)\n"
        ]
    },
    "(N/sftp) Connection.list(options)": {
        "prefix": "Connection.list(options)",
        "body": [
            "${1:Connection}.list({",
            "\tpath: ${2:String},",
            "\tsort: ${3:String}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "Connection.list()\n",
            "Method Description:\nLists the remote directory.\nThis method returns an array of Objects. Each Object includes the following properties with associated values:\ndirectory- A flag whether the entry corresponds to a directory or a file. If true, it is a directory. If false, it is a file.\nname- The name of the file\nsize- The size of the file\nlastModified- The last modification date\n",
            "Returns:\nArray<Object>\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.list(options)\n"
        ]
    },
    "(N/sftp) Connection.MAX_FILE_SIZE": {
        "prefix": "Connection.MAX_FILE_SIZE",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Connection.MAX_FILE_SIZE for more information.",
        "description": [
            "N/sftp Module",
            "Connection.MAX_FILE_SIZE\n",
            "Enum Description:\nHolds the values for the maximum file size.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.MAX_FILE_SIZE\n"
        ]
    },
    "(N/sftp) Connection.MAX_TRANSFER_TIMEOUT": {
        "prefix": "Connection.MAX_TRANSFER_TIMEOUT",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Connection.MAX_TRANSFER_TIMEOUT for more information.",
        "description": [
            "N/sftp Module",
            "Connection.MAX_TRANSFER_TIMEOUT\n",
            "Enum Description:\nHolds the values for the maximum transfer timeout.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Connection.MAX_TRANSFER_TIMEOUT\n"
        ]
    },
    "(N/sftp) sftp.createConnection(options)": {
        "prefix": "sftp.createConnection(options)",
        "body": [
            "${1:sftp}.createConnection({",
            "\turl: ${2:string},",
            "\tpasswordGuid: ${3:string},",
            "\thostKey: ${4:string},",
            "\tusername: ${5:string},",
            "\tport: ${6:number},",
            "\tdirectory: ${7:string},",
            "\ttimeout: ${8:number},",
            "\thostKeyType: ${9:string},",
            "\tkeyId: ${10:string}",
            "})"
        ],
        "description": [
            "N/sftp Module",
            "sftp.createConnection()\n",
            "Method Description:\nEstablishes a connection to a remote FTP server.\nTo generate the passwordguid, you can create a suitelet that uses Form.addCredentialField(options).\nUse the N/https Module to fetch the GUID value returned from the Suitelet's credential field.\nFor more information, see Setting up an SFTP Transfer and Supported Cipher Suites and Host Key Types.\n",
            "Returns:\nsftp.Connection, representing that connection.\n",
            "Supported Script Types:\nAll server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/sftp Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.createConnection(options)\n"
        ]
    },
    "(N/sftp) sftp.MAX_CONNECT_TIMEOUT": {
        "prefix": "sftp.MAX_CONNECT_TIMEOUT",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MAX_CONNECT_TIMEOUT for more information.",
        "description": [
            "N/sftp Module",
            "sftp.MAX_CONNECT_TIMEOUT\n",
            "Enum Description:\nHolds the values for the maximum connection timeout.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MAX_CONNECT_TIMEOUT\n"
        ]
    },
    "(N/sftp) sftp.MIN_CONNECT_TIMEOUT": {
        "prefix": "sftp.MIN_CONNECT_TIMEOUT",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MIN_CONNECT_TIMEOUT for more information.",
        "description": [
            "N/sftp Module",
            "sftp.MIN_CONNECT_TIMEOUT\n",
            "Enum Description:\nHolds the values for the minimum connection timeout.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MIN_CONNECT_TIMEOUT\n"
        ]
    },
    "(N/sftp) sftp.MAX_PORT_NUMBER": {
        "prefix": "sftp.MAX_PORT_NUMBER",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MAX_PORT_NUMBER for more information.",
        "description": [
            "N/sftp Module",
            "sftp.MAX_PORT_NUMBER\n",
            "Enum Description:\nHolds the values for the maximum port number.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MAX_PORT_NUMBER\n"
        ]
    },
    "(N/sftp) sftp.MIN_PORT_NUMBER": {
        "prefix": "sftp.MIN_PORT_NUMBER",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MIN_PORT_NUMBER for more information.",
        "description": [
            "N/sftp Module",
            "sftp.MIN_PORT_NUMBER\n",
            "Enum Description:\nHolds the values for the minimum port number.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.MIN_PORT_NUMBER\n"
        ]
    },
    "(N/sftp) sftp.DEFAULT_PORT_NUMBER": {
        "prefix": "sftp.DEFAULT_PORT_NUMBER",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=sftp.DEFAULT_PORT_NUMBER for more information.",
        "description": [
            "N/sftp Module",
            "sftp.DEFAULT_PORT_NUMBER\n",
            "Enum Description:\nHolds the values for default port number.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.DEFAULT_PORT_NUMBER\n"
        ]
    },
    "(N/sftp) sftp.Sort": {
        "prefix": "sftp.Sort",
        "body": "sftp.Sort.${1|DATE,DATE_DESC,SIZE,SIZE_DESC,NAME,NAME_DESC|}",
        "description": [
            "N/sftp Module",
            "sftp.Sort\n",
            "Enum Description:\nHolds the values to be used to sort the listed directory.\n",
            "Type:\nenum\n",
            "Module:\nN/sftp Module\n",
            "Sibling Module Members:\nN/sftp Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sftp.Sort\n"
        ]
    },
    "(N/sso) sso.generateSuiteSignOnToken(options)": {
        "prefix": "sso.generateSuiteSignOnToken(options)",
        "body": [
            "${1:sso}.generateSuiteSignOnToken({",
            "\tsuiteSignOnId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/sso Module",
            "sso.generateSuiteSignOnToken()\n",
            "Method Description:\nMethod used to generate a new SuiteSignOn token for a user.\nTo use this method, Outbound Single Sign-on and SOAP web services must be enabled in your account. To enable these features, go to Setup > Company > Setup Tasks > Enable Features. On the SuiteCloud tab, in the Manage Authentication section, select the SuiteSignOn check box. In the SuiteTalk section, select the SOAP Web Services check box. Click Save.\n",
            "Returns:\nURL, OAuth token, and any integration variables as a string\n",
            "Supported Script Types:\nPortlet scripts, user event scripts, and Suitelets\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/sso Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=sso.generateSuiteSignOnToken(options)\n"
        ]
    },
    "(N/task) task.CsvImportTask": {
        "prefix": "task.CsvImportTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.CsvImportTask for more information.",
        "description": [
            "N/task Module",
            "task.CsvImportTask\n",
            "Object Description:\nThe properties of a CSV import task. Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite.\nUse the CsvImportTask Object to perform the following types of tasks:\nAutomate standard record data import for SuiteApp installations, demo environments, and testing environments.\nImport data on a schedule using a scheduled script.\nBuild integrated CSV imports with RESTlets.\nUse the following process to import CSV data with CsvImportTask:\nIn the NetSuite UI, run the Import Assistant to set up the CSV mapping and import options. You must run the Import Assistant to set up the necessary mapping for the CSV import. You can use a sample file or files to set up the mapping. Note the following information:\nScript ID for import map.\nAny required linked files.\nFor more information, see Importing CSV Files with the Import Assistant.\nUse task.create(options) to create the CsvImportTask object.\nUse the CsvImportTask object properties to set the script and deployment properties.\nUse CsvImportTask.submit() to submit the import task to the NetSuite task queue.\nUse the properties for the task.CsvImportTaskStatus object to get the status of the import process.\nUse the following guidelines with the CsvImportTask Object:\nCSV imports performed within scripts are subject to the existing application limit of 25,000 records.\nYou cannot import data that is imported by (2-step) assistants in the UI, because these import types do not support saved import maps. This limitation applies to budget, single journal entry, single inventory worksheet, project tasks, and website redirects imports.\nThis object has access only to the field mappings of a saved import map; it does not have access to advanced import options defined in the Import Assistant, such as multi-threading and multiple queues.\nEven if you set options to use multiple threads or queues for an import job and then save the import map, these settings are not available to CsvImportTask. When this object submits a CSV import job based on the saved import map, a single thread and single queue are used.\nFor a complete list of this object’s methods and properties, see CsvImportTask Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.CsvImportTask\n"
        ]
    },
    "(N/task) CsvImportTask.submit()": {
        "prefix": "CsvImportTask.submit()",
        "body": [
            "${1:CsvImportTask}.submit(){",
            "\tFAILED_TO_SUBMIT_JOB_REQUEST_1: ${2:Failed to submit job request: {reason}}",
            "})"
        ],
        "description": [
            "N/task Module",
            "CsvImportTask.submit()\n",
            "Method Description:\nDirects NetSuite to place a CSV import task into the NetSuite task queue and returns a unique ID for the task. Use CsvImportTaskStatus.status to view the status of a submitted task.\nThis method throws errors resulting from inline validation of CSV file data before the import of data begins (the same validation that is performed between the mapping step and the save step in the Import Assistant). Any errors that occur during the import job are recorded in the CSV response file, as they are for imports initiated through the Import Assistant.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n100 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.submit()\n"
        ]
    },
    "(N/task) CsvImportTask.id": {
        "prefix": "CsvImportTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.id for more information.",
        "description": [
            "N/task Module",
            "CsvImportTask.id\n",
            "Property Description:\nThe ID of the task.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.CsvImportTask\n",
            "Sibling Object Members:\nCsvImportTask Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.id\n"
        ]
    },
    "(N/task) CsvImportTask.importFile": {
        "prefix": "CsvImportTask.importFile",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.importFile for more information.",
        "description": [
            "N/task Module",
            "CsvImportTask.importFile\n",
            "Property Description:\nCSV file to import. Use a file.File object or a string that represents the CSV text to be imported.\n",
            "Type:\nfile.File | string\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.importFile\n"
        ]
    },
    "(N/task) CsvImportTask.linkedFiles": {
        "prefix": "CsvImportTask.linkedFiles",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.linkedFiles for more information.",
        "description": [
            "N/task Module",
            "CsvImportTask.linkedFiles\n",
            "Property Description:\nA map of key/value pairs that sets the data to be imported in a linked file for a multi-file import job, by referencing a file in the File Cabinet or the raw CSV data to import.\nThe key is the internal ID of the record sublist for which data is being imported and the value is either a file.File object or the raw CSV data to import.\nYou can assign multiple types of values to the linkedFiles property.\n",
            "Type:\nObject\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.linkedFiles\n"
        ]
    },
    "(N/task) CsvImportTask.mappingId": {
        "prefix": "CsvImportTask.mappingId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.mappingId for more information.",
        "description": [
            "N/task Module",
            "CsvImportTask.mappingId\n",
            "Property Description:\nScript ID or internal ID of the saved import map that you created when you ran the Import Assistant. See task.CsvImportTask.\n",
            "Type:\nnumber | string\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.mappingId\n"
        ]
    },
    "(N/task) CsvImportTask.name": {
        "prefix": "CsvImportTask.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.name for more information.",
        "description": [
            "N/task Module",
            "CsvImportTask.name\n",
            "Property Description:\nName for the CSV import task.\nYou can optionally set a different name for a scripted import task. In the UI, this name appears on the CSV Import Job Status page.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.name\n"
        ]
    },
    "(N/task) CsvImportTask.queueId": {
        "prefix": "CsvImportTask.queueId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.queueId for more information.",
        "description": [
            "N/task Module",
            "CsvImportTask.queueId\n",
            "Property Description:\nOverrides the Queue Number property under Advanced Options on the Import Options page of the Import Assistant. Use this property to programmatically select an import queue and improve performance during the import.\nThis property is only available if you have a SuiteCloud Plus license. For more information about using multiple queues when importing CSV files, see Queue Number and Use Multiple Threads and Multiple Queues to Run CSV Import Jobs.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTask.queueId\n"
        ]
    },
    "(N/task) task.CsvImportTaskStatus": {
        "prefix": "task.CsvImportTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.CsvImportTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.CsvImportTaskStatus\n",
            "Object Description:\nThe status of a CSV import task placed into the NetSuite scheduling queue.\nUse task.checkStatus(options) with the unique ID for the CSV import task to get the CsvImportTaskStatus object.\nFor a complete list of this object’s properties, see CsvImportTaskStatus Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.CsvImportTaskStatus\n"
        ]
    },
    "(N/task) CsvImportTaskStatus.status": {
        "prefix": "CsvImportTaskStatus.status",
        "body": [
            "${1:CsvImportTaskStatus}.status{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "CsvImportTaskStatus.status\n",
            "Property Description:\nStatus for a CSV import task. Returns a task.TaskStatus enum value.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTaskStatus.status\n"
        ]
    },
    "(N/task) CsvImportTaskStatus.taskId": {
        "prefix": "CsvImportTaskStatus.taskId",
        "body": [
            "${1:CsvImportTaskStatus}.taskId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "CsvImportTaskStatus.taskId\n",
            "Property Description:\nThe task ID associated with the specified task.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.CsvImportTaskStatus\n",
            "Sibling Object Members:\nCsvImportTaskStatus Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=CsvImportTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.EntityDeduplicationTask": {
        "prefix": "task.EntityDeduplicationTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.EntityDeduplicationTask for more information.",
        "description": [
            "N/task Module",
            "task.EntityDeduplicationTask\n",
            "Object Description:\nAll the properties of a merge duplicate records task request. Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.\nWhen you submit a merge duplicate record task to NetSuite, SuiteScript enables you to use all of the same functionality available through the UI. Use SuiteScript to use the predefined duplicate detection rules, or you can define your own. After the records are merged or deleted, in the UI, the records no longer appear as duplicates at Lists > Mass Update > Entity Duplicate Resolution .\nFor more information about merging duplicate records in NetSuite, see Merging or Deleting Duplicate Records.\nTo use the EntityDeduplicationTask Object:\nUse task.create(options) to create the EntityDeduplicationTask object.\nUse EntityDeduplicationTask.entityType to select the entity type on which you want to merge duplicate records.\nUse EntityDeduplicationTask.dedupeMode to select the action to take for the duplicate records.\nUse a EntityDeduplicationTask.masterSelectionMode enum value to identify which record to use as the master record in the merge.\nIf you use MasterSelectionMode.SELECT_BY_ID for the master selection mode, set the ID of the master record with EntityDeduplicationTask.masterRecordId.\nIdentify the duplicate records. Use the search.duplicates(options) method in the N/search Module to find the duplicate records.\nUse EntityDeduplicationTask.submit() to submit the merge duplicate record task to the NetSuite task queue.\nUse the properties for the task.EntityDeduplicationTaskStatus object to get the status of the merge duplicate record task.\nUse the following guidelines with the EntityDeduplicationTask Object:\nYou can only submit 200 records in a single merge duplicate records task.\nThe merge duplicate functionality on non-entity records is not supported in SuiteScript.\nYou must have full access to the Duplicate Record Management permission to merge duplicates.\nFor a complete list of this object’s methods and properties, see EntityDeduplicationTask Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.EntityDeduplicationTask\n"
        ]
    },
    "(N/task) EntityDeduplicationTask.submit()": {
        "prefix": "EntityDeduplicationTask.submit()",
        "body": [
            "${1:EntityDeduplicationTask}.submit(){",
            "\tFAILED_TO_SUBMIT_JOB_REQUEST_1: ${2:Failed to submit job request: {reason}}",
            "})"
        ],
        "description": [
            "N/task Module",
            "EntityDeduplicationTask.submit()\n",
            "Method Description:\nDirects NetSuite to place the merge duplicate records task into the NetSuite task queue and returns a unique ID for the task.\nUse EntityDeduplicationTaskStatus.status to view the status of a submitted task.\n",
            "Returns:\nstring\nThe task ID\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n100 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.submit()\n"
        ]
    },
    "(N/task) EntityDeduplicationTask.dedupeMode": {
        "prefix": "EntityDeduplicationTask.dedupeMode",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.dedupeMode for more information.",
        "description": [
            "N/task Module",
            "EntityDeduplicationTask.dedupeMode\n",
            "Property Description:\nThe mode in which to merge or delete duplicate records.\nUse a task.DedupeMode enum value to set this property.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.dedupeMode\n"
        ]
    },
    "(N/task) EntityDeduplicationTask.entityType": {
        "prefix": "EntityDeduplicationTask.entityType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.entityType for more information.",
        "description": [
            "N/task Module",
            "EntityDeduplicationTask.entityType\n",
            "Property Description:\nThe type of entity on which you want to merge duplicate records.\nUse a task.DedupeEntityType enum value to set the value.\nIf you set entityType to CUSTOMER, the system will automatically include prospects and leads in the task request.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.entityType\n"
        ]
    },
    "(N/task) EntityDeduplicationTask.id": {
        "prefix": "EntityDeduplicationTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.id for more information.",
        "description": [
            "N/task Module",
            "EntityDeduplicationTask.id\n",
            "Property Description:\nThe ID of the task.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.EntityDeduplicationTask\n",
            "Sibling Object Members:\nEntityDeduplicationTask Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.id\n"
        ]
    },
    "(N/task) EntityDeduplicationTask.masterRecordId": {
        "prefix": "EntityDeduplicationTask.masterRecordId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.masterRecordId for more information.",
        "description": [
            "N/task Module",
            "EntityDeduplicationTask.masterRecordId\n",
            "Property Description:\nWhen you merge duplicate records, you can delete all duplicates for a record or merge information from the duplicate records into the master record.\nUse this property to set the ID of the master record that you want to use as the master record in the merge.\nYou must also select SELECT_BY_ID for the EntityDeduplicationTask.masterSelectionMode property, or NetSuite ignores this setting.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.masterRecordId\n"
        ]
    },
    "(N/task) EntityDeduplicationTask.masterSelectionMode": {
        "prefix": "EntityDeduplicationTask.masterSelectionMode",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.masterSelectionMode for more information.",
        "description": [
            "N/task Module",
            "EntityDeduplicationTask.masterSelectionMode\n",
            "Property Description:\nWhen you merge duplicate records, you can delete all duplicates for a record or merge information from the duplicate records into the master record.\nSet this property to determine which of the duplicate records to keep or select the master record to use by ID.\nUse the task.MasterSelectionMode enum to set the value.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.masterSelectionMode\n"
        ]
    },
    "(N/task) EntityDeduplicationTask.recordIds": {
        "prefix": "EntityDeduplicationTask.recordIds",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.recordIds for more information.",
        "description": [
            "N/task Module",
            "EntityDeduplicationTask.recordIds\n",
            "Property Description:\nNumber array of record internal IDs to perform the merge or delete operation on.\nYou can use the search.duplicates(options) method to identify duplicate records or create an array with record internal IDs.\n",
            "Type:\nnumber[]\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTask.recordIds\n"
        ]
    },
    "(N/task) task.EntityDeduplicationTaskStatus": {
        "prefix": "task.EntityDeduplicationTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.EntityDeduplicationTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.EntityDeduplicationTaskStatus\n",
            "Object Description:\nThe status of a merge duplicate record task placed into the NetSuite task queue by EntityDeduplicationTask.submit().\nUse task.checkStatus(options) with the unique ID for the merge duplicate records task to get this Object.\nFor a complete list of this object’s properties, see EntityDeduplicationTaskStatus Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.EntityDeduplicationTaskStatus\n"
        ]
    },
    "(N/task) EntityDeduplicationTaskStatus.status": {
        "prefix": "EntityDeduplicationTaskStatus.status",
        "body": [
            "${1:EntityDeduplicationTaskStatus}.status{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "EntityDeduplicationTaskStatus.status\n",
            "Property Description:\nStatus for a merge duplicate record task. Returns a task.TaskStatus enum value.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTaskStatus.status\n"
        ]
    },
    "(N/task) EntityDeduplicationTaskStatus.taskId": {
        "prefix": "EntityDeduplicationTaskStatus.taskId",
        "body": [
            "${1:EntityDeduplicationTaskStatus}.taskId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "EntityDeduplicationTaskStatus.taskId\n",
            "Property Description:\nThe task ID associated with the specified task.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.EntityDeduplicationTaskStatus\n",
            "Sibling Object Members:\nEntityDeduplicationTaskStatus Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=EntityDeduplicationTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.MapReduceScriptTask": {
        "prefix": "task.MapReduceScriptTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.MapReduceScriptTask for more information.",
        "description": [
            "N/task Module",
            "task.MapReduceScriptTask\n",
            "Object Description:\nThe properties of a map/reduce script deployment. You can use this object to programmatically submit a script deployment for processing.\nTo use the MapReduceScriptTask object:\nIn the NetSuite UI, create the script record and script deployment records.\nUse task.create(options) to create the MapReduceScriptTask object.\nUse the MapReduceScriptTask object properties to set the script and deployment properties.\nUse MapReduceScriptTask.submit() to submit the deployment for processing.\nUse the properties for the task.MapReduceScriptTaskStatus object to get the status of the map/reduce script.\nFor a complete list of this object’s methods and properties, see MapReduceScriptTask Object Members.\nFor general information about map/reduce scripts, see Map/Reduce Key Concepts.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.MapReduceScriptTask\n"
        ]
    },
    "(N/task) MapReduceScriptTask.submit()": {
        "prefix": "MapReduceScriptTask.submit()",
        "body": [
            "${1:MapReduceScriptTask}.submit(){",
            "\tFAILED_TO_SUBMIT_JOB_REQUEST_1: ${2:Failed to submit job request: {reason}}",
            "})"
        ],
        "description": [
            "N/task Module",
            "MapReduceScriptTask.submit()\n",
            "Method Description:\nSubmits a map/reduce script deployment for processing.\nFor more information, see task.MapReduceScriptTask.\nAdditionally, note that a map/reduce script can be submitted for processing only if there is no unfinished map/reduce script task for the same script ID and script deployment ID. For this reason, if a map/reduce script resubmits itself, the actual resubmit does not occur until the current execution completes. This delay is necessary to avoid the existence of two unfinished tasks for the same deployment of the same script. Therefore, if a map/reduce script uses the submit() method to resubmit itself, then at runtime, no task ID is returned when the map/reduce script is submitted.\nExecuting a map/reduce script from a server script requires either the Administrator role or a role with the SuiteScript Scheduling permission.\nFor general information about the execution of map/reduce scripts, see SuiteScript 2.0 Map/Reduce Script Submission.\n",
            "Returns:\nstring\nThe task ID, except as noted above.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.submit()\n"
        ]
    },
    "(N/task) MapReduceScriptTask.deploymentId": {
        "prefix": "MapReduceScriptTask.deploymentId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.deploymentId for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTask.deploymentId\n",
            "Property Description:\nScript ID (as a string), for the script deployment record for a map/reduce script.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.deploymentId\n"
        ]
    },
    "(N/task) MapReduceScriptTask.id": {
        "prefix": "MapReduceScriptTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.id for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTask.id\n",
            "Property Description:\nThe ID of the task.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.MapReduceScriptTask\n",
            "Sibling Object Members:\nMapReduceScriptTask Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.id\n"
        ]
    },
    "(N/task) MapReduceScriptTask.params": {
        "prefix": "MapReduceScriptTask.params",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.params for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTask.params\n",
            "Property Description:\nThe key/value pairs that override static script parameter field values on the script deployment record.\nUse these parameters on a task.MapReduceScriptTask object to programmatically pass values to the script deployment. For more information about script parameters, see Creating Script Parameters Overview.\n",
            "Type:\nObject\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.params\n"
        ]
    },
    "(N/task) MapReduceScriptTask.scriptId": {
        "prefix": "MapReduceScriptTask.scriptId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.scriptId for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTask.scriptId\n",
            "Property Description:\nInternal ID (as a number), or script ID (as a string), for the map/reduce script record.\n",
            "Type:\nnumber | string\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTask.scriptId\n"
        ]
    },
    "(N/task) task.MapReduceScriptTaskStatus": {
        "prefix": "task.MapReduceScriptTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.MapReduceScriptTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.MapReduceScriptTaskStatus\n",
            "Object Description:\nThe status of a map/reduce script deployment that was submitted for processing.\nUse task.checkStatus(options) with the unique ID for the map/reduce script task to get the MapReduceScriptTaskStatus object.\nFor a complete list of this object’s methods and properties, see MapReduceScriptTaskStatus Object Members.\nFor general information about the execution of map/reduce scripts, see SuiteScript 2.0 Map/Reduce Script Submission.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.MapReduceScriptTaskStatus\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getCurrentTotalSize()": {
        "prefix": "MapReduceScriptTaskStatus.getCurrentTotalSize()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getCurrentTotalSize() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getCurrentTotalSize()\n",
            "Method Description:\nReturns the total size in bytes of all stored work in progress by a task.MapReduceScriptTask.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n25 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getCurrentTotalSize()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getPendingMapCount()": {
        "prefix": "MapReduceScriptTaskStatus.getPendingMapCount()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingMapCount() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getPendingMapCount()\n",
            "Method Description:\nReturns the total number of records or rows not yet processed by the map stage of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\nFor general information about map/reduce stages, see Map/Reduce Key Concepts and SuiteScript 2.0 Map/Reduce Script Stages.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingMapCount()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getPendingMapSize()": {
        "prefix": "MapReduceScriptTaskStatus.getPendingMapSize()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingMapSize() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getPendingMapSize()\n",
            "Method Description:\nReturns the total number of bytes not yet processed by the map stage, as a component of total size, of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\nFor general information about map/reduce stages, see Map/Reduce Key Concepts and SuiteScript 2.0 Map/Reduce Script Stages.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n25 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingMapSize()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getPendingOutputCount()": {
        "prefix": "MapReduceScriptTaskStatus.getPendingOutputCount()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingOutputCount() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getPendingOutputCount()\n",
            "Method Description:\nReturns the total number of records or rows not yet processed by a task.MapReduceScriptTask.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingOutputCount()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getPendingOutputSize()": {
        "prefix": "MapReduceScriptTaskStatus.getPendingOutputSize()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingOutputSize() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getPendingOutputSize()\n",
            "Method Description:\nReturns the total size in bytes of all key/value pairs written as output, as a component of total size, by a task.MapReduceScriptTask.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n25 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingOutputSize()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getPendingReduceCount()": {
        "prefix": "MapReduceScriptTaskStatus.getPendingReduceCount()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingReduceCount() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getPendingReduceCount()\n",
            "Method Description:\nReturns the total number of records or rows not yet processed by the reduce stage of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\nFor general information about the reduce stage and other map/reduce stages, see Map/Reduce Key Concepts and SuiteScript 2.0 Map/Reduce Script Stages.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingReduceCount()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getPendingReduceSize()": {
        "prefix": "MapReduceScriptTaskStatus.getPendingReduceSize()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingReduceSize() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getPendingReduceSize()\n",
            "Method Description:\nReturns the total number of bytes not yet processed by the reduce stage, as a component of total size, of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n25 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPendingReduceSize()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getPercentageCompleted()": {
        "prefix": "MapReduceScriptTaskStatus.getPercentageCompleted()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPercentageCompleted() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getPercentageCompleted()\n",
            "Method Description:\nReturns the current percentage complete for the current stage of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\nFor general information about map/reduce stages, see Map/Reduce Key Concepts and SuiteScript 2.0 Map/Reduce Script Stages.\nThe input and summarize stages are either 0% or 100% complete at any time.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getPercentageCompleted()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getTotalMapCount()": {
        "prefix": "MapReduceScriptTaskStatus.getTotalMapCount()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getTotalMapCount() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getTotalMapCount()\n",
            "Method Description:\nReturns the total number of records or rows passed as input to the map stage of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\nFor general information about map/reduce stages, see Map/Reduce Key Concepts and SuiteScript 2.0 Map/Reduce Script Stages.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getTotalMapCount()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getTotalOutputCount()": {
        "prefix": "MapReduceScriptTaskStatus.getTotalOutputCount()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getTotalOutputCount() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getTotalOutputCount()\n",
            "Method Description:\nReturns the total number of key/value pairs passed as inputs to the SUMMARIZE phase of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getTotalOutputCount()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.getTotalReduceCount()": {
        "prefix": "MapReduceScriptTaskStatus.getTotalReduceCount()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getTotalReduceCount() for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.getTotalReduceCount()\n",
            "Method Description:\nReturns the total number of record or row inputs to the reduce stage of a task.MapReduceScriptTask.\nUse the MapReduceScriptTaskStatus.stage property to get the current stage.\nFor general information about map/reduce stages, see Map/Reduce Key Concepts and SuiteScript 2.0 Map/Reduce Script Stages.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.getTotalReduceCount()\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.deploymentId": {
        "prefix": "MapReduceScriptTaskStatus.deploymentId",
        "body": [
            "${1:MapReduceScriptTaskStatus}.deploymentId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.deploymentId\n",
            "Property Description:\nScript ID for a script deployment record associated with a specific task.MapReduceScriptTask.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.deploymentId\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.scriptId": {
        "prefix": "MapReduceScriptTaskStatus.scriptId",
        "body": [
            "${1:MapReduceScriptTaskStatus}.scriptId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.scriptId\n",
            "Property Description:\nInternal ID for a map/reduce script record associated with a specific task.MapReduceScriptTask.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.scriptId\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.stage": {
        "prefix": "MapReduceScriptTaskStatus.stage",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.stage for more information.",
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.stage\n",
            "Property Description:\nCurrent stage of processing for a map/reduce script deployment instance. Returns a task.MapReduceStage enum value.\nFor general information about map/reduce stages, see Map/Reduce Key Concepts. For information about the execution of map/reduce scripts, see SuiteScript 2.0 Map/Reduce Script Submission.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.stage\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.status": {
        "prefix": "MapReduceScriptTaskStatus.status",
        "body": [
            "${1:MapReduceScriptTaskStatus}.status{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.status\n",
            "Property Description:\nStatus of a map/reduce script deployment that was submitted for processing. Returns a task.TaskStatus enum value.\nFor general details about the execution of map/reduce scripts, see SuiteScript 2.0 Map/Reduce Script Submission.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.status\n"
        ]
    },
    "(N/task) MapReduceScriptTaskStatus.taskId": {
        "prefix": "MapReduceScriptTaskStatus.taskId",
        "body": [
            "${1:MapReduceScriptTaskStatus}.taskId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "MapReduceScriptTaskStatus.taskId\n",
            "Property Description:\nThe task ID associated with the specified task.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.MapReduceScriptTaskStatus\n",
            "Sibling Object Members:\nMapReduceScriptTaskStatus Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MapReduceScriptTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.QueryTask": {
        "prefix": "task.QueryTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.QueryTask for more information.",
        "description": [
            "N/task Module",
            "task.QueryTask\n",
            "Object Description:\nAn asynchronous query task. Use the methods and properties for this object to submit a query task to the NetSuite task queue and execute it asynchronously.\nYou can create a task.QueryTask object using task.create(options). You can populate the properties of this object as you create it. With a task.QueryTask object, you can do the following:\nSpecify the query to submit using the QueryTask.query property. This property accepts a query.Query object that was constructed using the N/query module. For more information, see N/query Module.\nSet the file ID or file path of a CSV file in the File Cabinet. Query results are exported to this file. Use the QueryTask.fileId property to specify a file ID, or use QueryTask.filePath to specify a file path. Only one of these properties can be set at the same time. If both are set, an error occurs.\nAdd dependent tasks to the query task using QueryTask.addInboundDependency(options). Dependent tasks are processed automatically when the query task is complete.\nSubmit the query task to the task queue using QueryTask.submit().\nGet the status of a query task using the properties of an associated task.QueryTaskStatus object. The task.checkStatus(options) method returns a task.QueryTaskStatus object when you specify a task ID that represents a query task.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Methods and Properties:\nQueryTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.QueryTask\n"
        ]
    },
    "(N/task) QueryTask.addInboundDependency(options)": {
        "prefix": "QueryTask.addInboundDependency(options)",
        "body": [
            "${1:QueryTask}.addInboundDependency({",
            "\tscriptId: ${2:string*},",
            "\ttaskType: ${3:string*},",
            "\tdeploymentId: ${4:string},",
            "\tparams: ${5:Object}",
            "})"
        ],
        "description": [
            "N/task Module",
            "QueryTask.addInboundDependency()\n",
            "Method Description:\nAdds a scheduled script task or map/reduce script task as a dependent task to the query task.\nDependent tasks are processed automatically using SuiteCloud Processors when the query task is complete. For more information, see SuiteCloud Processors.\nYou can add a dependent task in the following ways:\nProvide a task.ScheduledScriptTask object or task.MapReduceScriptTask object that represents the dependent task as the only parameter to this method.\nProvide an Object as the only parameter that includes values for the following properties:\ntaskType\nscriptId\ndeploymentId (optional)\nparams (optional)\nFor descriptions of these properties, see Parameters.\nYou can add only scheduled scripts or map/reduce scripts as dependent tasks to asynchronous query tasks. Other script types are not supported. You can add only one dependent task per call to QueryTask.addInboundDependency(options).\nWhen you use this method to add a dependent task, the added task is considered an inbound dependency of the query task. For example, if you add a scheduled script task to a query task as a dependent task, the scheduled script depends on the query task. Because QueryTask.addInboundDependency(options) is called on the query task, any dependent task that you add is considered an inbound dependency.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTask\n",
            "Sibling Object Members:\nQueryTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.addInboundDependency(options)\n"
        ]
    },
    "(N/task) QueryTask.submit()": {
        "prefix": "QueryTask.submit()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.submit() for more information.",
        "description": [
            "N/task Module",
            "QueryTask.submit()\n",
            "Method Description:\nSubmits the query task for asynchronous processing.\nThis method returns a unique ID for the query task. When the submission is successful, this method adds the script IDs of any dependent tasks (added using QueryTask.addInboundDependency(options)) to the QueryTask.inboundDependencies property.\nUse the task.QueryTaskStatus object to view the status of a submitted query task. The task.checkStatus(options) method returns a task.QueryTaskStatus object when you specify a task ID that represents a query task.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n100 units\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTask\n",
            "Sibling Object Members:\nQueryTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.submit()\n"
        ]
    },
    "(N/task) QueryTask.fileId": {
        "prefix": "QueryTask.fileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.fileId for more information.",
        "description": [
            "N/task Module",
            "QueryTask.fileId\n",
            "Property Description:\nInternal ID of the CSV file to export query results to.\nThe CSV file must be located in the File Cabinet. You can provide a value for this property or the QueryTask.filePath property. Only one of these properties can be set at the same time. If both are set, an error occurs.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTask\n",
            "Sibling Object Members:\nQueryTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.fileId\n"
        ]
    },
    "(N/task) QueryTask.filePath": {
        "prefix": "QueryTask.filePath",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.filePath for more information.",
        "description": [
            "N/task Module",
            "QueryTask.filePath\n",
            "Property Description:\nPath of the CSV file to export query results to.\nThe CSV file must be located in the File Cabinet. You can provide a value for this property or the QueryTask.fileId property. Only one of these properties can be set at the same time. If both are set, an error occurs.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTask\n",
            "Sibling Object Members:\nQueryTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.filePath\n"
        ]
    },
    "(N/task) QueryTask.inboundDependencies": {
        "prefix": "QueryTask.inboundDependencies",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.inboundDependencies for more information.",
        "description": [
            "N/task Module",
            "QueryTask.inboundDependencies\n",
            "Property Description:\nKey-value pairs that contain information about the dependent tasks added to the query task.\nUse this property to verify the properties of dependent tasks after you add the tasks using QueryTask.addInboundDependency(options).\nThis property uses nested objects to store information about each dependent task. A nested object is included for each dependent task added to the query task, and these objects are referenced by their index (starting at 0). Dependent tasks are indexed in the order they are added to the query task. Each nested object contains the task type, script ID, script deployment ID, and script parameters.\nFor example, consider a situation in which you add a scheduled script task and a map/reduce script task to a query task as dependent tasks. After you add the dependent tasks but before you submit the query task using QueryTask.submit(), the value of the QueryTask.inboundDependencies property is similar to the following:\nAfter you submit the query task, the IDs of the dependent scripts are added to the QueryTask.inboundDependencies property:\n",
            "Type:\nObject[] (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTask\n",
            "Sibling Object Members:\nQueryTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.inboundDependencies\n"
        ]
    },
    "(N/task) QueryTask.query": {
        "prefix": "QueryTask.query",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.query for more information.",
        "description": [
            "N/task Module",
            "QueryTask.query\n",
            "Property Description:\nQuery definition for the query task.\nThe query definition is a query.Query object. To use this object, you must load the N/query module in your script and create a query using query.create(options) or load a query using query.load(options). For more information, see N/query Module.\n",
            "Type:\nquery.Query\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTask\n",
            "Sibling Object Members:\nQueryTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTask.query\n"
        ]
    },
    "(N/task) task.QueryTaskStatus": {
        "prefix": "task.QueryTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.QueryTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.QueryTaskStatus\n",
            "Object Description:\nStatus of a query task (task.QueryTask) in the NetSuite task queue.\nYou create a task.QueryTaskStatus object using task.checkStatus(options). To check the status of a query task, you must provide the task ID of the query task. To submit a query task and obtain the task ID, use QueryTask.submit().\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Methods and Properties:\nQueryTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.QueryTaskStatus\n"
        ]
    },
    "(N/task) QueryTaskStatus.fileId": {
        "prefix": "QueryTaskStatus.fileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.fileId for more information.",
        "description": [
            "N/task Module",
            "QueryTaskStatus.fileId\n",
            "Property Description:\nInternal ID of the CSV file that query results are exported to.\nThis property references the same CSV file that is specified by the QueryTask.fileId property or QueryTask.filePath property in the corresponding task.QueryTask object.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTaskStatus\n",
            "Sibling Object Members:\nQueryTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.fileId\n"
        ]
    },
    "(N/task) QueryTaskStatus.query": {
        "prefix": "QueryTaskStatus.query",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.query for more information.",
        "description": [
            "N/task Module",
            "QueryTaskStatus.query\n",
            "Property Description:\nQuery definition for the submitted query task.\nThe query definition is a query.Query object. To use this object, you must load the N/query module in your script and create a query using query.create(options) or load a query using query.load(options). For more information, see N/query Module.\nThis property references the same query that is specified by the QueryTask.query property in the corresponding task.QueryTask object.\n",
            "Type:\nquery.Query (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTaskStatus\n",
            "Sibling Object Members:\nQueryTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.query\n"
        ]
    },
    "(N/task) QueryTaskStatus.status": {
        "prefix": "QueryTaskStatus.status",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.status for more information.",
        "description": [
            "N/task Module",
            "QueryTaskStatus.status\n",
            "Property Description:\nStatus of the submitted query task.\nA query task can have the following statuses, which are represented by values in the task.TaskStatus enum:\ntask.TaskStatus.COMPLETE\ntask.TaskStatus.FAILED\ntask.TaskStatus.PENDING\ntask.TaskStatus.PROCESSING\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTaskStatus\n",
            "Sibling Object Members:\nQueryTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.status\n"
        ]
    },
    "(N/task) QueryTaskStatus.taskId": {
        "prefix": "QueryTaskStatus.taskId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.taskId for more information.",
        "description": [
            "N/task Module",
            "QueryTaskStatus.taskId\n",
            "Property Description:\nID of the submitted query task.\nThis property references the same task ID that is returned by QueryTask.submit() when you submit the task for asynchronous processing.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.QueryTaskStatus\n",
            "Sibling Object Members:\nQueryTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=QueryTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.RecordActionTask": {
        "prefix": "task.RecordActionTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.RecordActionTask for more information.",
        "description": [
            "N/task Module",
            "task.RecordActionTask\n",
            "Object Description:\nThe properties of a record action task. Use the methods and properties for this object to submit a record action task into the task queue and to execute it asynchronously.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Methods and Properties:\nRecordActionTask Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.RecordActionTask\n"
        ]
    },
    "(N/task) RecordActionTask.submit()": {
        "prefix": "RecordActionTask.submit()",
        "body": [
            "${1:RecordActionTask}.submit(){",
            "\tFAILED_TO_SUBMIT_JOB_REQUEST_1: ${2:Failed to submit job request: {reason}}",
            "})"
        ],
        "description": [
            "N/task Module",
            "RecordActionTask.submit()\n",
            "Method Description:\nSubmits a record action task script deployment for processing and returns its task ID.\nThe record action task is processed by a background process which executes the specified record action for each record ID provided in the parameters. The overall task status as well as individual action results can be queried using the task.checkStatus() method.\n",
            "Returns:\nstring\nThe task ID.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n50 units\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTask Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.submit()\n"
        ]
    },
    "(N/task) RecordActionTask.action": {
        "prefix": "RecordActionTask.action",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.action for more information.",
        "description": [
            "N/task Module",
            "RecordActionTask.action\n",
            "Parameter Description:\nThe ID of the action to be invoked.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTask Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.action\n"
        ]
    },
    "(N/task) RecordActionTask.condition": {
        "prefix": "RecordActionTask.condition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.condition for more information.",
        "description": [
            "N/task Module",
            "RecordActionTask.condition\n",
            "Parameter Description:\nThe condition used to select record IDs of records for which the action is to be executed.\nThis parameter is specified with the task.ActionCondition enum.\nThis is used in conjunction with RecordActionTask.paramCallback. If RecordActionTask.paramCallback is not specified, this default callback is used: function(v) { return { recordId: v }; }.\n",
            "Type:\nObject\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTask Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.condition\n"
        ]
    },
    "(N/task) RecordActionTask.id": {
        "prefix": "RecordActionTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.id for more information.",
        "description": [
            "N/task Module",
            "RecordActionTask.id\n",
            "Property Description:\nThe ID of the task.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.RecordActionTaskStatus\n",
            "Sibling Object Members:\nRecordActionTask Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.id\n"
        ]
    },
    "(N/task) RecordActionTask.paramCallback": {
        "prefix": "RecordActionTask.paramCallback",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.paramCallback for more information.",
        "description": [
            "N/task Module",
            "RecordActionTask.paramCallback\n",
            "Description:\nProperty of type function that takes record ID and returns the parameter object for the specified record ID. Is to be used in conjunction with task.ActionCondition.\nThis parameter cannot be specified when RecordActionTask.params is specified.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTask Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.paramCallback\n"
        ]
    },
    "(N/task) RecordActionTask.params": {
        "prefix": "RecordActionTask.params",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.params for more information.",
        "description": [
            "N/task Module",
            "RecordActionTask.params\n",
            "Parameter Description:\nAn array of parameter objects. Each object corresponds to one record ID of the record for which the action is to be executed. The object has the following form: {recordId: 1, someParam: 'example1', otherParam: 'example2'}\n",
            "Type:\nObject[]\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTask Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.params\n"
        ]
    },
    "(N/task) RecordActionTask.recordType": {
        "prefix": "RecordActionTask.recordType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.recordType for more information.",
        "description": [
            "N/task Module",
            "RecordActionTask.recordType\n",
            "Parameter Description:\nThe record type on which the action is to be performed.\nFor a list of record types, see record.Type.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTask Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTask.recordType\n"
        ]
    },
    "(N/task) task.RecordActionTaskStatus": {
        "prefix": "task.RecordActionTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.RecordActionTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.RecordActionTaskStatus\n",
            "Object Description:\nEncapsulates the status of a record action task.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Methods and Properties:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.RecordActionTaskStatus\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.complete": {
        "prefix": "RecordActionTaskStatus.complete",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.complete for more information.",
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.complete\n",
            "Parameter Description:\nThe number of record actions that are already executed, either failed or successful.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.complete\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.errors": {
        "prefix": "RecordActionTaskStatus.errors",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.errors for more information.",
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.errors\n",
            "Parameter Description:\nThe error details of failed action executions. The value of the property is the record instance ID and the corresponding error details. The error details are returned in an unnamed object with two properties: code and message.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.errors\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.failed": {
        "prefix": "RecordActionTaskStatus.failed",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.failed for more information.",
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.failed\n",
            "Parameter Description:\nThe number of record actions with a failed status.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.failed\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.pending": {
        "prefix": "RecordActionTaskStatus.pending",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.pending for more information.",
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.pending\n",
            "Parameter Description:\nThe number of record actions with a pending status.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.pending\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.results": {
        "prefix": "RecordActionTaskStatus.results",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.results for more information.",
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.results\n",
            "Parameter Description:\nThe results of successfully executed record action tasks. The value of the property is the task instance ID and the corresponding action result.\n",
            "Type:\nObject (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.results\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.status": {
        "prefix": "RecordActionTaskStatus.status",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.status for more information.",
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.status\n",
            "Parameter Description:\nRepresents the record action task status. Returns a value from the task.TaskStatus enum.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.status\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.succeeded": {
        "prefix": "RecordActionTaskStatus.succeeded",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.succeeded for more information.",
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.succeeded\n",
            "Parameter Description:\nThe number of record actions with a successful status.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.succeeded\n"
        ]
    },
    "(N/task) RecordActionTaskStatus.taskId": {
        "prefix": "RecordActionTaskStatus.taskId",
        "body": [
            "${1:RecordActionTaskStatus}.taskId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "RecordActionTaskStatus.taskId\n",
            "Property Description:\nThe task ID associated with the specified task.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.RecordActionTaskStatus\n",
            "Sibling Object Members:\nRecordActionTaskStatus Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=RecordActionTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.ScheduledScriptTask": {
        "prefix": "task.ScheduledScriptTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.ScheduledScriptTask for more information.",
        "description": [
            "N/task Module",
            "task.ScheduledScriptTask\n",
            "Object Description:\nAll the properties of scheduled script task in SuiteScript. Use this object to place a scheduled script deployment into the NetSuite scheduling queue.\nTo use the ScheduledScriptTask Object:\nIn the NetSuite UI, create the script record and script deployment record.\nUse task.create(options) to create the ScheduledScriptTask object.\nUse the ScheduledScriptTask object properties to set the script and deployment properties.\nUse ScheduledScriptTask.submit() to deploy the scheduled script to the NetSuite scheduling queue.\nUse the properties for the task.ScheduledScriptTaskStatus object to get the status of the scheduled script.\nFor a complete list of this object’s methods and properties, see ScheduledScriptTask Object Members.\nFor more information about scheduled scripts in NetSuite, see SuiteScript 2.0 Scheduled Script Type.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.ScheduledScriptTask\n"
        ]
    },
    "(N/task) ScheduledScriptTask.submit()": {
        "prefix": "ScheduledScriptTask.submit()",
        "body": [
            "${1:ScheduledScriptTask}.submit(){",
            "\tFAILED_TO_SUBMIT_JOB_REQUEST_1: ${2:Failed to submit job request: {reason}}",
            "})"
        ],
        "description": [
            "N/task Module",
            "ScheduledScriptTask.submit()\n",
            "Method Description:\nDirects NetSuite to place a scheduled script deployment into the NetSuite scheduling queue and returns a unique ID for the task.\nAdditionally, note the following:\nThe scheduled script must have a status of Not Scheduled on the Script Deployment page. If the script status is set to Testing on the Script Deployment page, this method will not place the script into the scheduling queue.\nIf the deployment status on the Script Deployment page is set to Scheduled, the script will be placed into the queue according to the time(s) specified on the Script Deployment page.\nOnly roles with the SuiteScript Scheduling permission or Administrators can run scheduled scripts executed by API. If a user event script calls ScheduledScriptTask.submit(), the user event script must be initiated by a role with permission.\nA scheduled script can be submitted for processing only if there is no unfinished scheduled script task for the same script ID and script deployment ID. Therefore, if a scheduled script resubmits itself, the actual resubmit does not occur until the current execution completes. This delay is necessary to avoid the existence of two unfinished tasks for the same deployment of the same script. For this reason, if a scheduled script uses the submit() method to resubmit itself, then at runtime, no task ID is returned when the scheduled script is submitted.\n",
            "Returns:\nstring\nThe task ID as a string, except as noted above.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.submit()\n"
        ]
    },
    "(N/task) ScheduledScriptTask.deploymentId": {
        "prefix": "ScheduledScriptTask.deploymentId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.deploymentId for more information.",
        "description": [
            "N/task Module",
            "ScheduledScriptTask.deploymentId\n",
            "Property Description:\nScript ID (as a string), for the script deployment record associated with a task.ScheduledScriptTask Object.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.deploymentId\n"
        ]
    },
    "(N/task) ScheduledScriptTask.id": {
        "prefix": "ScheduledScriptTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.id for more information.",
        "description": [
            "N/task Module",
            "ScheduledScriptTask.id\n",
            "Property Description:\nThe ID of the task.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.ScheduledScriptTask\n",
            "Sibling Object Members:\nScheduledScriptTask Object Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.id\n"
        ]
    },
    "(N/task) ScheduledScriptTask.params": {
        "prefix": "ScheduledScriptTask.params",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.params for more information.",
        "description": [
            "N/task Module",
            "ScheduledScriptTask.params\n",
            "Property Description:\nObject with key/value pairs that override static script parameter field values on the script deployment. Use these parameters for the task.ScheduledScriptTask object to programmatically pass values to the script deployment.\nFor more information about script parameters, see Creating Script Parameters Overview.\n",
            "Type:\nObject\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.params\n"
        ]
    },
    "(N/task) ScheduledScriptTask.scriptId": {
        "prefix": "ScheduledScriptTask.scriptId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.scriptId for more information.",
        "description": [
            "N/task Module",
            "ScheduledScriptTask.scriptId\n",
            "Property Description:\nInternal ID (as a number), or script ID (as a string), for the script record associated with a task.ScheduledScriptTask object.\n",
            "Type:\nnumber | string\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTask.scriptId\n"
        ]
    },
    "(N/task) task.ScheduledScriptTaskStatus": {
        "prefix": "task.ScheduledScriptTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.ScheduledScriptTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.ScheduledScriptTaskStatus\n",
            "Object Description:\nThe properties and status of a scheduled script placed into the NetSuite scheduling queue.\nUse task.checkStatus(options) with the unique ID for the scheduled script task to get the ScheduledScriptTaskStatus Object.\nFor a complete list of this object’s properties, see ScheduledScriptTaskStatus Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.ScheduledScriptTaskStatus\n"
        ]
    },
    "(N/task) ScheduledScriptTaskStatus.deploymentId": {
        "prefix": "ScheduledScriptTaskStatus.deploymentId",
        "body": [
            "${1:ScheduledScriptTaskStatus}.deploymentId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "ScheduledScriptTaskStatus.deploymentId\n",
            "Property Description:\nScript ID for a script deployment record associated with a specific task.ScheduledScriptTask Object.\nUse this ID to get more details about the script deployment record for the scheduled task.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTaskStatus.deploymentId\n"
        ]
    },
    "(N/task) ScheduledScriptTaskStatus.scriptId": {
        "prefix": "ScheduledScriptTaskStatus.scriptId",
        "body": [
            "${1:ScheduledScriptTaskStatus}.scriptId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "ScheduledScriptTaskStatus.scriptId\n",
            "Property Description:\nInternal ID for a script record associated with a specific task.ScheduledScriptTask Object.\nUse this ID to get more details about the script record for the scheduled task.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTaskStatus.scriptId\n"
        ]
    },
    "(N/task) ScheduledScriptTaskStatus.status": {
        "prefix": "ScheduledScriptTaskStatus.status",
        "body": [
            "${1:ScheduledScriptTaskStatus}.status{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "ScheduledScriptTaskStatus.status\n",
            "Property Description:\nStatus for a scheduled script task. Returns a task.TaskStatus enum value.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTaskStatus.status\n"
        ]
    },
    "(N/task) ScheduledScriptTaskStatus.taskId": {
        "prefix": "ScheduledScriptTaskStatus.taskId",
        "body": [
            "${1:ScheduledScriptTaskStatus}.taskId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "ScheduledScriptTaskStatus.taskId\n",
            "Property Description:\nThe task ID associated with the specified task.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.ScheduledScriptTaskStatus\n",
            "Sibling Object Members:\nScheduledScriptTaskStatus Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ScheduledScriptTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.SearchTask": {
        "prefix": "task.SearchTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.SearchTask for more information.",
        "description": [
            "N/task Module",
            "task.SearchTask\n",
            "Object Description:\nThe properties of a search task. Use the methods and properties for this object to submit a search task into the task queue, execute it asynchronously, and persist search results. Similar to SuiteAnalytics persisted search functionality, this capability is useful for searches across high volumes of data.\nYou can create a task.SearchTask object using task.create(options).\nUse the task.SearchTask object to do the following:\nSet the search ID using the SearchTask.savedSearchId property.\nSet the file ID or file path of a CSV file in the File Cabinet. Search results are exported to this file. Use the SearchTask.fileId property or the SearchTask.filePath property. Exactly one of these properties must be set. If both are set, an error occurs.\nAdd dependent scripts to the search task using SearchTask.addInboundDependency(). Dependent scripts are processed automatically when the search task is complete.\nSubmit the search task to the NetSuite task queue using SearchTask.submit().\nGet the status of a search task using the properties of the task.SearchTaskStatus object.\nThere is a limit to the number of asynchronous searches running at the same time. The limit is set to be the same as the limit for CSV import. The file size limit is based on File Cabinet limits.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.SearchTask\n"
        ]
    },
    "(N/task) SearchTask.addInboundDependency()": {
        "prefix": "SearchTask.addInboundDependency()",
        "body": [
            "${1:SearchTask}.addInboundDependency(){",
            "\tdependentScript: ${2:task.ScheduledScriptTask | task.MapReduceScriptTask}",
            "})"
        ],
        "description": [
            "N/task Module",
            "SearchTask.addInboundDependency()\n",
            "Method Description:\nAdds a scheduled script task (task.ScheduledScriptTask) or map/reduce script task (task.MapReduceScriptTask) to the search task as a dependent script. Dependent scripts are processed automatically when the search task is complete. For more information, see SuiteCloud Processors.\nYou can add only scheduled scripts or map/reduce scripts as dependent scripts to asynchronous search tasks. Other script types are not supported.\nWhen you use this method to add a dependent script, the script is considered an inbound dependency of the search task. The added script depends on the search task. For example, if you add a scheduled script task to a search task as a dependent script, the scheduled script depends on the search task. Because addInboundDependency() is called on the search task, any dependent scripts that you add are considered inbound dependencies.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/task Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.addInboundDependency()\n"
        ]
    },
    "(N/task) SearchTask.submit()": {
        "prefix": "SearchTask.submit()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.submit() for more information.",
        "description": [
            "N/task Module",
            "SearchTask.submit()\n",
            "Method Description:\nDirects NetSuite to initiate the asynchronous search task and return a unique ID for the task. When the submission is successful, this method adds the internal IDs of any dependent scripts (added using SearchTask.addInboundDependency()) to the SearchTask.inboundDependencies property.\nUse task.SearchTaskStatus to view the status of a submitted task.\n",
            "Returns:\nstring\nThe task ID\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n100 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.submit()\n"
        ]
    },
    "(N/task) SearchTask.fileId": {
        "prefix": "SearchTask.fileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.fileId for more information.",
        "description": [
            "N/task Module",
            "SearchTask.fileId\n",
            "Property Description:\nID of the CSV file to export search results into.\nEither this property or the SearchTask.filePath property must be set. If both are set, an error occurs.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.fileId\n"
        ]
    },
    "(N/task) SearchTask.filePath": {
        "prefix": "SearchTask.filePath",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.filePath for more information.",
        "description": [
            "N/task Module",
            "SearchTask.filePath\n",
            "Property Description:\nPath of the CSV file to export search results into.\nEither this property or the SearchTask.fileId property must be set. If both are set, an error occurs.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.filePath\n"
        ]
    },
    "(N/task) SearchTask.id": {
        "prefix": "SearchTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.id for more information.",
        "description": [
            "N/task Module",
            "SearchTask.id\n",
            "Property Description:\nThe ID of the task.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SearchTask\n",
            "Sibling Object Members:\nSearchTask Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.id\n"
        ]
    },
    "(N/task) SearchTask.inboundDependencies": {
        "prefix": "SearchTask.inboundDependencies",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.inboundDependencies for more information.",
        "description": [
            "N/task Module",
            "SearchTask.inboundDependencies\n",
            "Property Description:\nKey/value pairs that contain information about the dependent scripts added to the search task. Use this property to verify the properties of dependent scripts after you add the scripts using SearchTask.addInboundDependency().\nThis property uses nested objects to store information about each dependent script. A nested object is included for each dependent script added to the search task. The nested object contains information such as the task type, script ID, and deployment ID. It also includes the index of the script (starting at 0). Dependent scripts are indexed in the order they are added to the search task.\nFor example, consider a situation in which you add a scheduled script task and a map/reduce script task to a search task as dependent scripts. After you add the dependent scripts, but before you submit the search task using SearchTask.submit(), the value of the SearchTask.inboundDependencies property is similar to the following:\nAfter you submit the search task, the internal IDs of the dependent scripts are added to the SearchTask.inboundDependencies property:\n",
            "Type:\nObject[] (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.inboundDependencies\n"
        ]
    },
    "(N/task) SearchTask.savedSearchId": {
        "prefix": "SearchTask.savedSearchId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.savedSearchId for more information.",
        "description": [
            "N/task Module",
            "SearchTask.savedSearchId\n",
            "Property Description:\nID of the saved search to be executed during the task.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTask.savedSearchId\n"
        ]
    },
    "(N/task) task.SearchTaskStatus": {
        "prefix": "task.SearchTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.SearchTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.SearchTaskStatus\n",
            "Object Description:\nThe status of an asynchronous search task (task.SearchTask) placed into the NetSuite task queue. To initiate the task and retrieve the task ID, use SearchTask.submit().\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.SearchTaskStatus\n"
        ]
    },
    "(N/task) SearchTaskStatus.fileId": {
        "prefix": "SearchTaskStatus.fileId",
        "body": [
            "${1:SearchTaskStatus}.fileId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "SearchTaskStatus.fileId\n",
            "Property Description:\nID of CSV file into which search results are exported.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTaskStatus.fileId\n"
        ]
    },
    "(N/task) SearchTaskStatus.savedSearchId": {
        "prefix": "SearchTaskStatus.savedSearchId",
        "body": [
            "${1:SearchTaskStatus}.savedSearchId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "SearchTaskStatus.savedSearchId\n",
            "Property Description:\nThe ID of the saved search executed during the task.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTaskStatus.savedSearchId\n"
        ]
    },
    "(N/task) SearchTaskStatus.status": {
        "prefix": "SearchTaskStatus.status",
        "body": [
            "${1:SearchTaskStatus}.status{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "SearchTaskStatus.status\n",
            "Property Description:\nStatus for an asynchronous search placed in the NetSuite task queue by SearchTask.submit(). Returns a task.TaskStatus enum value.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTaskStatus.status\n"
        ]
    },
    "(N/task) SearchTaskStatus.taskId": {
        "prefix": "SearchTaskStatus.taskId",
        "body": [
            "${1:SearchTaskStatus}.taskId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "SearchTaskStatus.taskId\n",
            "Property Description:\nID of the task.SearchTask Object. Use SearchTask.submit() to return this ID.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SearchTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.SuiteQLTask": {
        "prefix": "task.SuiteQLTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.SuiteQLTask for more information.",
        "description": [
            "N/task Module",
            "task.SuiteQLTask\n",
            "Object Description:\nAn asynchronous SuiteQL task. Use the methods and properties for this object to submit a SuiteQL task to the NetSuite task queue and execute it asynchronously.\nYou can create a task.SuiteQLTask object using task.create(options). You can populate the properties of this object as you create it. With a task.SuiteQLTask object, you can do the following:\nSpecify the SuiteQL query to submit using the SuiteQLTask.query property. This property accepts a string that represents a SuiteQL query. For more information, see SuiteQL.\nProvide parameters to use in the SuiteQL query using the SuiteQLTask.params property.\nSet the file ID or file path of a CSV file in the File Cabinet. SuiteQL query results are exported to this file. Use the SuiteQLTask.fileId property to specify a file ID, or use the SuiteQLTask.filePath property to specify a file path. Only one of these properties can be set at the same time. If both are set, an error occurs.\nAdd dependent tasks to the SuiteQL task using SuiteQLTask.addInboundDependency(options). Dependent tasks are processed automatically when the SuiteQL task is complete.\nSubmit the SuiteQL task to the task queue using SuiteQLTask.submit().\nGet the status of a SuiteQL task using the properties of an associated task.SuiteQLTaskStatus object. The task.checkStatus(options) method returns a task.SuiteQLTaskStatus object when you specify a task ID that represents a SuiteQL task.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Methods and Properties:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.SuiteQLTask\n"
        ]
    },
    "(N/task) SuiteQLTask.addInboundDependency(options)": {
        "prefix": "SuiteQLTask.addInboundDependency(options)",
        "body": [
            "${1:SuiteQLTask}.addInboundDependency({",
            "\tscriptId: ${2:string*},",
            "\ttaskType: ${3:string*},",
            "\tdeploymentId: ${4:string},",
            "\tparams: ${5:Object}",
            "})"
        ],
        "description": [
            "N/task Module",
            "SuiteQLTask.addInboundDependency()\n",
            "Method Description:\nAdds a scheduled script task or map/reduce script task as a dependent task to the SuiteQL task.\nDependent tasks are processed automatically using SuiteCloud Processors when the SuiteQL task is complete. For more information, see SuiteCloud Processors.\nYou can add a dependent task in the following ways:\nProvide a task.ScheduledScriptTask object or task.MapReduceScriptTask object that represents the dependent task as the only parameter to this method.\nProvide an Object as the only parameter that includes values for the following properties:\ntaskType\nscriptId\ndeploymentId (optional)\nparams (optional)\nFor descriptions of these properties, see Parameters.\nYou can add only scheduled scripts or map/reduce scripts as dependent tasks to asynchronous SuiteQL tasks. Other script types are not supported. You can add only one dependent task per call to SuiteQLTask.addInboundDependency(options).\nWhen you use this method to add a dependent task, the added task is considered an inbound dependency of the SuiteQL task. For example, if you add a scheduled script task to a SuiteQL task as a dependent task, the scheduled script depends on the SuiteQL task. Because SuiteQLTask.addInboundDependency(options) is called on the SuiteQL task, any dependent task that you add is considered an inbound dependency.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTask\n",
            "Sibling Object Members:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.addInboundDependency(options)\n"
        ]
    },
    "(N/task) SuiteQLTask.submit()": {
        "prefix": "SuiteQLTask.submit()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.submit() for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTask.submit()\n",
            "Method Description:\nSubmits the SuiteQL task for asynchronous processing.\nThis method returns a unique ID for the SuiteQL task. When the submission is successful, this method adds the script IDs of any dependent tasks (added using SuiteQLTask.addInboundDependency(options)) to the SuiteQLTask.inboundDependencies property.\nUse the task.SuiteQLTaskStatus object to view the status of a submitted SuiteQL task. The task.checkStatus(options) method returns a task.SuiteQLTaskStatus object when you specify a task ID that represents a SuiteQL task.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n100 units\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTask\n",
            "Sibling Object Members:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.submit()\n"
        ]
    },
    "(N/task) SuiteQLTask.fileId": {
        "prefix": "SuiteQLTask.fileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.fileId for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTask.fileId\n",
            "Property Description:\nInternal ID of the CSV file to export SuiteQL query results to.\nThe CSV file must be located in the File Cabinet. You can provide a value for this property or the SuiteQLTask.filePath property. Only one of these properties can be set at the same time. If both are set, an error occurs.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTask\n",
            "Sibling Object Members:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.fileId\n"
        ]
    },
    "(N/task) SuiteQLTask.filePath": {
        "prefix": "SuiteQLTask.filePath",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.filePath for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTask.filePath\n",
            "Property Description:\nPath of the CSV file to export SuiteQL query results to.\nThe CSV file must be located in the File Cabinet. You can provide a value for this property or the SuiteQLTask.fileId property. Only one of these properties can be set at the same time. If both are set, an error occurs.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTask\n",
            "Sibling Object Members:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.filePath\n"
        ]
    },
    "(N/task) SuiteQLTask.inboundDependencies": {
        "prefix": "SuiteQLTask.inboundDependencies",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.inboundDependencies for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTask.inboundDependencies\n",
            "Property Description:\nKey-value pairs that contain information about the dependent tasks added to the SuiteQL task.\nUse this property to verify the properties of dependent tasks after you add the tasks using SuiteQLTask.addInboundDependency(options).\nThis property uses nested objects to store information about each dependent task. A nested object is included for each dependent task added to the SuiteQL task, and these objects are referenced by their index (starting at 0). Dependent tasks are indexed in the order they are added to the SuiteQL task. Each nested object contains the task type, script ID, script deployment ID, and script parameters.\nFor example, consider a situation in which you add a scheduled script task and a map/reduce script task to a SuiteQL task as dependent tasks. After you add the dependent tasks but before you submit the SuiteQL task using QueryTask.submit(), the value of the SuiteQLTask.inboundDependencies property is similar to the following:\nAfter you submit the SuiteQL task, the IDs of the dependent scripts are added to the SuiteQLTask.inboundDependencies property:\n",
            "Type:\nObject[] (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTask\n",
            "Sibling Object Members:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.inboundDependencies\n"
        ]
    },
    "(N/task) SuiteQLTask.params": {
        "prefix": "SuiteQLTask.params",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.params for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTask.params\n",
            "Property Description:\nParameters for the SuiteQL query.\nThe specified parameters are substituted into the SuiteQL query string (represented by SuiteQLTask.query) when you submit the SuiteQL task using SuiteQLTask.submit().\n",
            "Type:\nArray<string | boolean | number>\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTask\n",
            "Sibling Object Members:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.params\n"
        ]
    },
    "(N/task) SuiteQLTask.query": {
        "prefix": "SuiteQLTask.query",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.query for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTask.query\n",
            "Property Description:\nSuiteQL query definition for the SuiteQL task.\nThe SuiteQL query definition is a string that represents a SuiteQL query. For more information, see SuiteQL.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTask\n",
            "Sibling Object Members:\nSuiteQLTask Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTask.query\n"
        ]
    },
    "(N/task) task.SuiteQLTaskStatus": {
        "prefix": "task.SuiteQLTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.SuiteQLTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.SuiteQLTaskStatus\n",
            "Object Description:\nThe status of an asynchronous SuiteQL task (task.SuiteQLTask) in the NetSuite task queue.\nYou create a task.SuiteQLTaskStatus object using task.checkStatus(options). To check the status of a SuiteQL task, you must provide the task ID of the SuiteQL task. To submit a SuiteQL task and obtain the task ID, use SuiteQLTask.submit().\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Methods and Properties:\nSuiteQLTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.SuiteQLTaskStatus\n"
        ]
    },
    "(N/task) SuiteQLTaskStatus.fileId": {
        "prefix": "SuiteQLTaskStatus.fileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.fileId for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTaskStatus.fileId\n",
            "Property Description:\nInternal ID of the CSV file that SuiteQL query results are exported to.\nThis property references the same CSV file that is specified by the SuiteQLTask.fileId property or SuiteQLTask.filePath property in the corresponding task.SuiteQLTask object.\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTaskStatus\n",
            "Sibling Object Members:\nSuiteQLTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.fileId\n"
        ]
    },
    "(N/task) SuiteQLTaskStatus.params": {
        "prefix": "SuiteQLTaskStatus.params",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.params for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTaskStatus.params\n",
            "Property Description:\nParameters for the SuiteQL query.\nThe specified parameters are substituted into the SuiteQL query string (represented by SuiteQLTask.query) when you submit the SuiteQL task using SuiteQLTask.submit().\nThis property references the same set of parameters that are specified by the SuiteQLTask.params property in the corresponding task.SuiteQLTask object.\n",
            "Type:\nArray<string | boolean | number> (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTaskStatus\n",
            "Sibling Object Members:\nSuiteQLTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.params\n"
        ]
    },
    "(N/task) SuiteQLTaskStatus.query": {
        "prefix": "SuiteQLTaskStatus.query",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.query for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTaskStatus.query\n",
            "Property Description:\nSuiteQL query definition for the SuiteQL task.\nThe SuiteQL query definition is a string that represents a SuiteQL query. For more information, see SuiteQL.\nThis property references the same query that is specified by the SuiteQLTask.query property in the corresponding task.SuiteQLTask object.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTaskStatus\n",
            "Sibling Object Members:\nSuiteQLTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.query\n"
        ]
    },
    "(N/task) SuiteQLTaskStatus.status": {
        "prefix": "SuiteQLTaskStatus.status",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.status for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTaskStatus.status\n",
            "Property Description:\nStatus of the SuiteQL task.\nA SuiteQL task can have the following statuses, which are represented by values in the task.TaskStatus enum:\ntask.TaskStatus.COMPLETE\ntask.TaskStatus.FAILED\ntask.TaskStatus.PENDING\ntask.TaskStatus.PROCESSING\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTaskStatus\n",
            "Sibling Object Members:\nSuiteQLTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.status\n"
        ]
    },
    "(N/task) SuiteQLTaskStatus.taskId": {
        "prefix": "SuiteQLTaskStatus.taskId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.taskId for more information.",
        "description": [
            "N/task Module",
            "SuiteQLTaskStatus.taskId\n",
            "Property Description:\nID of the submitted SuiteQL task.\nThis property references the same task ID that is returned by SuiteQLTask.submit() when you submit the task for asynchronous processing.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.SuiteQLTaskStatus\n",
            "Sibling Object Members:\nSuiteQLTaskStatus Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SuiteQLTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.WorkflowTriggerTask": {
        "prefix": "task.WorkflowTriggerTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.WorkflowTriggerTask for more information.",
        "description": [
            "N/task Module",
            "task.WorkflowTriggerTask\n",
            "Object Description:\nAll the properties required to asynchronously initiate a workflow. Use the WorkflowTriggerTask Object to create a task that initiates an instance of the specified workflow.\nThe task is placed in the scheduling queue, and the workflow instance is initiated after the task reaches the top of the queue.\ntask.WorkflowTriggerTask does not successfully place a workflow job in queue if an identical instance of that workflow (with the same recordType, id, and workflowId) is currently executing or already in the scheduling queue.\nTo use the WorkflowTriggerTask Object:\nUse task.create(options) to create the WorkflowTriggerTask Object.\nUse WorkflowTriggerTask.recordType to set the record type of the workflow base record.\nUse WorkflowTriggerTask.recordId to set the internal ID of the base record for the workflow.\nUse WorkflowTriggerTask.workflowId to set the internal ID of the workflow that you want to run on the record specified by the recordId.\nOptionally, use WorkflowTriggerTask.params to specify default values for workflow fields.\nUse WorkflowTriggerTask.submit() to submit the asynchronous workflow initiation task to the NetSuite task queue.\nUse the properties for the WorkflowTriggerTaskStatus.status object to get the status of the workflow execution.\nUse the following guidelines with the WorkflowTriggerTask Object:\nWorkflowTriggerTask.submit() does not successfully place a workflow task in the scheduling queue if an identical instance of that workflow, with the same recordType, recordId, and workflowId, is currently executing or already in the scheduling queue.\nFor a complete list of this object’s methods and properties, see WorkflowTriggerTask Object Members.\nTo initiate a workflow on demand, see workflow.initiate(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.WorkflowTriggerTask\n"
        ]
    },
    "(N/task) WorkflowTriggerTask.submit()": {
        "prefix": "WorkflowTriggerTask.submit()",
        "body": [
            "${1:WorkflowTriggerTask}.submit(){",
            "\tFAILED_TO_SUBMIT_JOB_REQUEST_1: ${2:Failed to submit job request: {reason}}",
            "})"
        ],
        "description": [
            "N/task Module",
            "WorkflowTriggerTask.submit()\n",
            "Method Description:\nDirects NetSuite to place the asynchronous workflow initiation task into the NetSuite scheduling queue and returns a unique ID for the task.\nUse WorkflowTriggerTaskStatus.status to view the status of a submitted task.\n",
            "Returns:\nstring\nThe task ID\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.submit()\n"
        ]
    },
    "(N/task) WorkflowTriggerTask.id": {
        "prefix": "WorkflowTriggerTask.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.id for more information.",
        "description": [
            "N/task Module",
            "WorkflowTriggerTask.id\n",
            "Property Description:\nThe ID of the task.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.WorkflowTriggerTask\n",
            "Sibling Object Members:\nWorkflowTriggerTask Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.id\n"
        ]
    },
    "(N/task) WorkflowTriggerTask.params": {
        "prefix": "WorkflowTriggerTask.params",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.params for more information.",
        "description": [
            "N/task Module",
            "WorkflowTriggerTask.params\n",
            "Property Description:\nKey/value pairs to set default values on fields specific to the workflow.\nThese can include fields on the Workflow Definition Page or workflow and state Workflow Custom Fields.\n",
            "Type:\nObject\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.params\n"
        ]
    },
    "(N/task) WorkflowTriggerTask.recordId": {
        "prefix": "WorkflowTriggerTask.recordId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.recordId for more information.",
        "description": [
            "N/task Module",
            "WorkflowTriggerTask.recordId\n",
            "Property Description:\nInternal ID of the base record. For example, 55 or 124.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.recordId\n"
        ]
    },
    "(N/task) WorkflowTriggerTask.recordType": {
        "prefix": "WorkflowTriggerTask.recordType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.recordType for more information.",
        "description": [
            "N/task Module",
            "WorkflowTriggerTask.recordType\n",
            "Property Description:\nRecord type of the workflow definition base record. For example, customer, salesorder, or lead.\nIn the Workflow Manager, this is the record type that is specified in the Record Type field.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.recordType\n"
        ]
    },
    "(N/task) WorkflowTriggerTask.workflowId": {
        "prefix": "WorkflowTriggerTask.workflowId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.workflowId for more information.",
        "description": [
            "N/task Module",
            "WorkflowTriggerTask.workflowId\n",
            "Property Description:\nInternal ID (as a number), or script ID (as a string), for the workflow definition.\nThis is the ID that appears in the ID field on the Workflow Definition Page.\n",
            "Type:\nnumber | string\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTask.workflowId\n"
        ]
    },
    "(N/task) task.WorkflowTriggerTaskStatus": {
        "prefix": "task.WorkflowTriggerTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=task.WorkflowTriggerTaskStatus for more information.",
        "description": [
            "N/task Module",
            "task.WorkflowTriggerTaskStatus\n",
            "Object Description:\nThe status of an asynchronous workflow initiation task placed into the NetSuite task queue by WorkflowTriggerTask.submit().\nUse task.checkStatus(options) with the unique ID for the asynchronous workflow initiation task to get the WorkflowTriggerTaskStatus object.\nFor a complete list of this object’s properties, see WorkflowTriggerTaskStatus Object Members.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.WorkflowTriggerTaskStatus\n"
        ]
    },
    "(N/task) WorkflowTriggerTaskStatus.status": {
        "prefix": "WorkflowTriggerTaskStatus.status",
        "body": [
            "${1:WorkflowTriggerTaskStatus}.status{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "WorkflowTriggerTaskStatus.status\n",
            "Property Description:\nStatus for an asynchronous workflow placed in the NetSuite task queue by WorkflowTriggerTask.submit(). Returns a task.TaskStatus enum value.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTaskStatus.status\n"
        ]
    },
    "(N/task) WorkflowTriggerTaskStatus.taskId": {
        "prefix": "WorkflowTriggerTaskStatus.taskId",
        "body": [
            "${1:WorkflowTriggerTaskStatus}.taskId{",
            "\tREAD_ONLY: ${2:}",
            "})"
        ],
        "description": [
            "N/task Module",
            "WorkflowTriggerTaskStatus.taskId\n",
            "Property Description:\nThe task ID associated with the specified task.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Parent Object:\ntask.WorkflowTriggerTaskStatus\n",
            "Sibling Object Members:\nWorkflowTriggerTaskStatus Object Members\n",
            "Since:\n\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=WorkflowTriggerTaskStatus.taskId\n"
        ]
    },
    "(N/task) task.checkStatus(options)": {
        "prefix": "task.checkStatus(options)",
        "body": [
            "${1:task}.checkStatus({",
            "\ttaskId: ${2:string*}",
            "})"
        ],
        "description": [
            "N/task Module",
            "task.checkStatus()\n",
            "Method Description:\nReturns a task status object associated with a specific task ID.\nYou can check the status of the following task types:\nCSV import\nEntity deduplication\nMap/reduce script\nQuery\nRecord action\nScheduled script\nSearch\nSuiteQL\nWorkflow trigger\n",
            "Returns:\ntask.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.QueryTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus | task.SuiteQLTaskStatus | task.WorkflowTriggerTaskStatus\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.checkStatus(options)\n"
        ]
    },
    "(N/task) task.create(options)": {
        "prefix": "task.create(options)",
        "body": [
            "${1:task}.create({",
            "\ttaskType: ${2:string*},",
            "\tdeploymentId: ${3:string},",
            "\tparams: ${4:Object | Array<string | boolean | number>},",
            "\tscriptId: ${5:number | string},",
            "\timportFile: ${6:file.File | string},",
            "\tlinkedFiles: ${7:Object},",
            "\tmappingId: ${8:number | string},",
            "\tname: ${9:string},",
            "\tqueueId: ${10:number},",
            "\tdedupeMode: ${11:string},",
            "\tentityType: ${12:string},",
            "\tmasterRecordId: ${13:number},",
            "\tmasterSelectionMode: ${14:string},",
            "\trecordIds: ${15:number[]},",
            "\trecordId: ${16:number},",
            "\trecordType: ${17:string},",
            "\tworkflowId: ${18:number | string},",
            "\tfileId: ${19:number},",
            "\tfilePath: ${20:string},",
            "\tquery: ${21:query.Query | string},",
            "\tsavedSearchId: ${22:string}",
            "})"
        ],
        "description": [
            "N/task Module",
            "task.create()\n",
            "Method Description:\nCreates a task object for the specified task type and returns the object.\nUse this method to create tasks to do the following:\nSchedule scripts\nRun map/reduce scripts\nImport CSV files\nMerge duplicate records\nExecute asynchronous searches, constructed queries, SuiteQL queries, and workflows\n",
            "Returns:\ntask.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.QueryTask | task.ScheduledScriptTask | task.SearchTask | task.SuiteQLTask | task.WorkflowTriggerTask\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.create(options)\n"
        ]
    },
    "(N/task) task.ActionCondition": {
        "prefix": "task.ActionCondition",
        "body": "task.ActionCondition.${1||}",
        "description": [
            "N/task Module",
            "task.ActionCondition\n",
            "Enum Description:\nEnumeration that holds the string values for the possible record action conditions.\nThis enum is returned by RecordActionTask.condition.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.ActionCondition\n"
        ]
    },
    "(N/task) task.DedupeEntityType": {
        "prefix": "task.DedupeEntityType",
        "body": "task.DedupeEntityType.${1|CUSTOMER,CONTACT,VENDOR,PARTNER,LEAD,PROSPECT|}",
        "description": [
            "N/task Module",
            "task.DedupeEntityType\n",
            "Enum Description:\nEnumeration that holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.\nUse this enum for the EntityDeduplicationTask.entityType.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.DedupeEntityType\n"
        ]
    },
    "(N/task) task.DedupeMode": {
        "prefix": "task.DedupeMode",
        "body": "task.DedupeMode.${1|MERGE,DELETE,MAKE_MASTER_PARENT,MARK_AS_NOT_DUPES|}",
        "description": [
            "N/task Module",
            "task.DedupeMode\n",
            "Enum Description:\nEnumeration that holds the string values for the available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\nUse this enum for the EntityDeduplicationTask.dedupeMode property.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.DedupeMode\n"
        ]
    },
    "(N/task) task.MapReduceStage": {
        "prefix": "task.MapReduceStage",
        "body": "task.MapReduceStage.${1|GET_INPUT,MAP,SHUFFLE,REDUCE,SUMMARIZE|}",
        "description": [
            "N/task Module",
            "task.MapReduceStage\n",
            "Enum Description:\nEnumeration that holds the string values for possible stages in task.MapReduceScriptTask for a map/reduce script.\nThis enum is returned by MapReduceScriptTaskStatus.stage.\nFor general information about map/reduce stages, see Map/Reduce Key Concepts and SuiteScript 2.0 Map/Reduce Script Stages.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.MapReduceStage\n"
        ]
    },
    "(N/task) task.MasterSelectionMode": {
        "prefix": "task.MasterSelectionMode",
        "body": "task.MasterSelectionMode.${1|CREATED_EARLIEST,MOST_RECENT_ACTIVITY,MOST_POPULATED_FIELDS,SELECT_BY_ID|}",
        "description": [
            "N/task Module",
            "task.MasterSelectionMode\n",
            "Enum Description:\nEnumeration that holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.\nUse this enum for the EntityDeduplicationTask.masterSelectionMode property.\nFor more information about these values, see Merging or Deleting Duplicate Records.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.MasterSelectionMode\n"
        ]
    },
    "(N/task) task.TaskStatus": {
        "prefix": "task.TaskStatus",
        "body": "task.TaskStatus.${1|COMPLETE,FAILED,PENDING,PROCESSING|}",
        "description": [
            "N/task Module",
            "task.TaskStatus\n",
            "Enum Description:\nHolds the string values for possible task statuses.\nThe following properties use values from this enum:\nCsvImportTaskStatus.status\nEntityDeduplicationTaskStatus.status\nMapReduceScriptTaskStatus.status\nRecordActionTaskStatus.status\nQueryTaskStatus.status\nScheduledScriptTaskStatus.status\nSearchTaskStatus.status\nSuiteQLTaskStatus.status\nWorkflowTriggerTaskStatus.status\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. In this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Module Members:\nN/task Module Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.TaskStatus\n"
        ]
    },
    "(N/task) task.TaskType": {
        "prefix": "task.TaskType",
        "body": "task.TaskType.${1|CSV_IMPORT,ENTITY_DEDUPLICATION,MAP_REDUCE,QUERY,RECORD_ACTION,SCHEDULED_SCRIPT,SEARCH,SUITE_QL,WORKFLOW_TRIGGER|}",
        "description": [
            "N/task Module",
            "task.TaskType\n",
            "Enum Description:\nHolds the string values for the types of task objects you can create using task.create(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. In this object, each key points to a read-only string value..\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task Module\n",
            "Sibling Module Members:\nN/task Module Members\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=task.TaskType\n"
        ]
    },
    "(N/task/accounting/recognition) recognition.MergeArrangementsTask": {
        "prefix": "recognition.MergeArrangementsTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=recognition.MergeArrangementsTask for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "recognition.MergeArrangementsTask\n",
            "Object Description:\nEncapsulates a task to merge all of the revenue elements from a specified list of revenue arrangements.\nUse recognition.create(options) to create this object. After you create the object, you can populate its properties and submit the task for processing. The MergeArrangementsTask.arrangements property is required, and all other properties are optional.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Methods and Properties:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recognition.MergeArrangementsTask\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.submit()": {
        "prefix": "MergeArrangementsTask.submit()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.submit() for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.submit()\n",
            "Method Description:\nSubmits the merge task for processing.\nThis method returns a task ID that uniquely identifies the merge task. This task ID also represents the submission ID of the internal bulk process that performs the merge.\nBefore you call this method to submit a merge task, you must populate the properties of the recognition.MergeArrangementsTask object (such as MergeArrangementsTask.arrangements, MergeArrangementsTask.contractAcquisitionExpenseAccount, and so on).\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.submit()\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.arrangements": {
        "prefix": "MergeArrangementsTask.arrangements",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.arrangements for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.arrangements\n",
            "Property Description:\nHolds an array of internal IDs of the revenue arrangement records to merge.\nThis property is required. You must specify a value for this property before you can submit the task for processing using MergeArrangementsTask.submit().\nIf you do not specify any revenue arrangement record IDs, a NO_REVENUE_ARRANGEMENT_IDS_ARE_INCLUDED_IN_YOUR_INPUT error is thrown when you call MergeArrangementsTask.submit() for the task. Invalid IDs are ignored. If no revenue elements were found for the specified revenue arrangement record IDs, a NO_REVENUE_ELEMENTS_WERE_FOUND_FOR_THE_REVENUE_ARRANGEMENT_IDS_YOU_INPUT error is thrown when you call MergeArrangementsTask.submit().\n",
            "Type:\nArray<number | string>\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.arrangements\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.contractAcquisitionDeferredExpenseAccount": {
        "prefix": "MergeArrangementsTask.contractAcquisitionDeferredExpenseAccount",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.contractAcquisitionDeferredExpenseAccount for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.contractAcquisitionDeferredExpenseAccount\n",
            "Property Description:\nReferences the contract acquisition deferred expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization. If this preference is not enabled, this property is ignored.\nThis property is optional. The default value is the account specified by the accounting preference Contract Acquisition Deferred Expense Account in your account.\n",
            "Type:\nnumber | string\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.contractAcquisitionDeferredExpenseAccount\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.contractAcquisitionExpenseAccount": {
        "prefix": "MergeArrangementsTask.contractAcquisitionExpenseAccount",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.contractAcquisitionExpenseAccount for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.contractAcquisitionExpenseAccount\n",
            "Property Description:\nReferences the contract acquisition expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization. If this preference is not enabled, this property is ignored.\nThis property is optional. The default value is the account specified by the accounting preference Contract Acquisition Expense Account in your account.\n",
            "Type:\nnumber | string\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.contractAcquisitionExpenseAccount\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.contractCostAccrualDate": {
        "prefix": "MergeArrangementsTask.contractCostAccrualDate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.contractCostAccrualDate for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.contractCostAccrualDate\n",
            "Property Description:\nDescribes the contract cost accrual date to use for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization. If this preference is not enabled, this property is ignored.\nThis property is optional. The default value is today’s date. If you specify an invalid date format, a WRONG_PARAMETER_TYPE error is thrown when you call MergeArrangementsTask.submit() for the task.\n",
            "Type:\nJavaScript Date\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.contractCostAccrualDate\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.mergeResidualRevenueAmounts": {
        "prefix": "MergeArrangementsTask.mergeResidualRevenueAmounts",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.mergeResidualRevenueAmounts for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.mergeResidualRevenueAmounts\n",
            "Property Description:\nIndicates whether the revenue arrangements are merged prospectively. For more information about prospective merges, see Prospective Merges.\nThis property is optional. The default value is false.\n",
            "Type:\nboolean\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.mergeResidualRevenueAmounts\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.recalculateResidualFairValue": {
        "prefix": "MergeArrangementsTask.recalculateResidualFairValue",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.recalculateResidualFairValue for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.recalculateResidualFairValue\n",
            "Property Description:\nIndicates whether to recalculate the fair value on residual elements when revenue arrangements are prospectively merged. For more information about prospective merges, see Prospective Merges.\nThis property is optional. This property can be set to true only if the MergeArrangementsTask.mergeResidualRevenueAmounts property is also set to true. If the MergeArrangementsTask.mergeResidualRevenueAmounts property is false, this property is ignored. The default value of this property is false.\n",
            "Type:\nboolean\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.recalculateResidualFairValue\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTask.revenueArrangementDate": {
        "prefix": "MergeArrangementsTask.revenueArrangementDate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.revenueArrangementDate for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTask.revenueArrangementDate\n",
            "Property Description:\nDescribes the date of the new revenue arrangement.\nThis property is optional. The default value is today’s date. If you specify an invalid date format, a WRONG_PARAMETER_TYPE error is thrown when you call MergeArrangementsTask.submit() for the task.\n",
            "Type:\nJavaScript Date\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTask\n",
            "Sibling Object Members:\nMergeArrangementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTask.revenueArrangementDate\n"
        ]
    },
    "(N/task/accounting/recognition) recognition.MergeArrangementsTaskStatus": {
        "prefix": "recognition.MergeArrangementsTaskStatus",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=recognition.MergeArrangementsTaskStatus for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "recognition.MergeArrangementsTaskStatus\n",
            "Object Description:\nEncapsulates the current status of a submitted merge task.\nUse recognition.checkStatus(options) to create this object. The current status corresponds to one of the values in the recognition.TaskStatus enum: PENDING, PROCESSING, COMPLETE, or FAILED.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Methods and Properties:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recognition.MergeArrangementsTaskStatus\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTaskStatus.errorMessage": {
        "prefix": "MergeArrangementsTaskStatus.errorMessage",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.errorMessage for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTaskStatus.errorMessage\n",
            "Property Description:\nHolds an error message that describes the failure of the merge task. This property is valid only if the value of the MergeArrangementsTaskStatus.status property is TaskStatus.FAILED.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTaskStatus\n",
            "Sibling Object Members:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.errorMessage\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTaskStatus.inputArrangements": {
        "prefix": "MergeArrangementsTaskStatus.inputArrangements",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.inputArrangements for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTaskStatus.inputArrangements\n",
            "Property Description:\nHolds an array of internal IDs of the revenue arrangement records to merge. This property is valid only if the merge task was created using a task type of TaskType.MERGE_ARRANGEMENTS_TASK.\nThis property has a potential governance value of 10 units. For more information about governance, see SuiteScript Governance.\n",
            "Type:\nnumber[] (read-only)\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTaskStatus\n",
            "Sibling Object Members:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.inputArrangements\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTaskStatus.inputElements": {
        "prefix": "MergeArrangementsTaskStatus.inputElements",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.inputElements for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTaskStatus.inputElements\n",
            "Property Description:\nHolds an array of internal IDs of the revenue elements to merge. This property is valid only if the merge task was created using a task type of TaskType.MERGE_ELEMENTS_TASK.\n",
            "Type:\nnumber[] (read-only)\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTaskStatus\n",
            "Sibling Object Members:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.inputElements\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTaskStatus.resultingArrangement": {
        "prefix": "MergeArrangementsTaskStatus.resultingArrangement",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.resultingArrangement for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTaskStatus.resultingArrangement\n",
            "Property Description:\nReferences the internal ID of the new revenue arrangement that was created. This property is valid only if the value of the MergeArrangementsTaskStatus.status property is TaskStatus.COMPLETE.\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTaskStatus\n",
            "Sibling Object Members:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.resultingArrangement\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTaskStatus.status": {
        "prefix": "MergeArrangementsTaskStatus.status",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.status for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTaskStatus.status\n",
            "Property Description:\nRepresents the current status of the merge task.\nThis property uses values in the recognition.TaskStatus enum.\n",
            "Type:\nstring (read-only)\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTaskStatus\n",
            "Sibling Object Members:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.status\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTaskStatus.submissionId": {
        "prefix": "MergeArrangementsTaskStatus.submissionId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.submissionId for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTaskStatus.submissionId\n",
            "Property Description:\nReferences the submission ID of the merge arrangements bulk process.\nThis ID is the same as the task ID that is returned by MergeArrangementsTask.submit() or MergeElementsTask.submit().\n",
            "Type:\nnumber (read-only)\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTaskStatus\n",
            "Sibling Object Members:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.submissionId\n"
        ]
    },
    "(N/task/accounting/recognition) MergeArrangementsTaskStatus.taskId": {
        "prefix": "MergeArrangementsTaskStatus.taskId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.taskId for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeArrangementsTaskStatus.taskId\n",
            "Property Description:\nHolds the task ID of the merge task. The task ID is assigned to the merge task when you call MergeArrangementsTask.submit() or MergeElementsTask.submit() for the task.\n",
            "Type:\nnumber | string (read-only)\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeArrangementsTaskStatus\n",
            "Sibling Object Members:\nMergeArrangementsTaskStatus Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeArrangementsTaskStatus.taskId\n"
        ]
    },
    "(N/task/accounting/recognition) recognition.MergeElementsTask": {
        "prefix": "recognition.MergeElementsTask",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=recognition.MergeElementsTask for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "recognition.MergeElementsTask\n",
            "Object Description:\nEncapsulates a task to merge all of the specified revenue elements.\nUse recognition.create(options) to create this object. After you create the object, you can populate its properties and submit the task for processing. The MergeElementsTask.elements property is required, and all other properties are optional.\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Methods and Properties:\nMergeElementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recognition.MergeElementsTask\n"
        ]
    },
    "(N/task/accounting/recognition) MergeElementsTask.submit()": {
        "prefix": "MergeElementsTask.submit()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.submit() for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeElementsTask.submit()\n",
            "Method Description:\nSubmits the merge task for processing.\nThis method returns a task ID that uniquely identifies the merge task. This task ID also represents the submission ID of the internal bulk process that performs the merge.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n20 units\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeElementsTask\n",
            "Sibling Object Members:\nMergeElementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.submit()\n"
        ]
    },
    "(N/task/accounting/recognition) MergeElementsTask.contractAcquisitionDeferredExpenseAccount": {
        "prefix": "MergeElementsTask.contractAcquisitionDeferredExpenseAccount",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.contractAcquisitionDeferredExpenseAccount for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeElementsTask.contractAcquisitionDeferredExpenseAccount\n",
            "Property Description:\nReferences the contract acquisition deferred expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization. If this preference is not enabled, this property is ignored.\nThis property is optional. The default value is the account specified by the accounting preference Contract Acquisition Deferred Expense Account in your account.\n",
            "Type:\nnumber | string\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeElementsTask\n",
            "Sibling Object Members:\nMergeElementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.contractAcquisitionDeferredExpenseAccount\n"
        ]
    },
    "(N/task/accounting/recognition) MergeElementsTask.contractAcquisitionExpenseAccount": {
        "prefix": "MergeElementsTask.contractAcquisitionExpenseAccount",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.contractAcquisitionExpenseAccount for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeElementsTask.contractAcquisitionExpenseAccount\n",
            "Property Description:\nReferences the contract acquisition expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization. If this preference is not enabled, this property is ignored.\nThis property is optional. The default value is the account specified by the accounting preference Contract Acquisition Expense Account in your account.\n",
            "Type:\nnumber | string\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeElementsTask\n",
            "Sibling Object Members:\nMergeElementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.contractAcquisitionExpenseAccount\n"
        ]
    },
    "(N/task/accounting/recognition) MergeElementsTask.contractCostAccrualDate": {
        "prefix": "MergeElementsTask.contractCostAccrualDate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.contractCostAccrualDate for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeElementsTask.contractCostAccrualDate\n",
            "Property Description:\nDescribes the contract cost accrual date to use for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization.\nThis property is optional. The default value is today’s date. If you specify an invalid date format, a WRONG_PARAMETER_TYPE error is thrown when you call MergeElementsTask.submit() for the task.\n",
            "Type:\nJavaScript Date\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeElementsTask\n",
            "Sibling Object Members:\nMergeElementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.contractCostAccrualDate\n"
        ]
    },
    "(N/task/accounting/recognition) MergeElementsTask.elements": {
        "prefix": "MergeElementsTask.elements",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.elements for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeElementsTask.elements\n",
            "Property Description:\nHolds an array of internal IDs of the revenue element records to merge.\nThis property is required. You must specify a value for this property before you can submit the task for processing using MergeElementsTask.submit().\n",
            "Type:\nArray<number | string>\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeElementsTask\n",
            "Sibling Object Members:\nMergeElementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.elements\n"
        ]
    },
    "(N/task/accounting/recognition) MergeElementsTask.revenueArrangementDate": {
        "prefix": "MergeElementsTask.revenueArrangementDate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.revenueArrangementDate for more information.",
        "description": [
            "N/task/accounting/recognition Module",
            "MergeElementsTask.revenueArrangementDate\n",
            "Property Description:\nDescribes the date of the new revenue arrangement.\nThis property is optional. The default value is today’s date. If you specify an invalid date format, a WRONG_PARAMETER_TYPE error is thrown when you call MergeElementsTask.submit() for the task.\n",
            "Type:\nJavaScript Date\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Parent Object:\nrecognition.MergeElementsTask\n",
            "Sibling Object Members:\nMergeElementsTask Object Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MergeElementsTask.revenueArrangementDate\n"
        ]
    },
    "(N/task/accounting/recognition) recognition.checkStatus(options)": {
        "prefix": "recognition.checkStatus(options)",
        "body": [
            "${1:recognition}.checkStatus({",
            "\ttaskId: ${2:number | string*}",
            "})"
        ],
        "description": [
            "N/task/accounting/recognition Module",
            "recognition.checkStatus()\n",
            "Method Description:\nChecks the status of a submitted merge task.\n",
            "Returns:\nrecognition.MergeArrangementsTaskStatus\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n50 units\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Sibling Module Members:\nN/task/accounting/recognition Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recognition.checkStatus(options)\n"
        ]
    },
    "(N/task/accounting/recognition) recognition.create(options)": {
        "prefix": "recognition.create(options)",
        "body": [
            "${1:recognition}.create({",
            "\ttaskType: ${2:string*}",
            "})"
        ],
        "description": [
            "N/task/accounting/recognition Module",
            "recognition.create()\n",
            "Method Description:\nCreates a merge task that combines entire revenue arrangements or individual revenue elements.\nUse values in the recognition.TaskType enum to specify the type of merge task to create. After you call this method to create a merge task, you must specify the properties of the merge task (such as MergeArrangementsTask.arrangements or MergeElementsTask.elements) before you submit the task using MergeArrangementsTask.submit() or MergeElementsTask.submit().\n",
            "Returns:\nrecognition.MergeArrangementsTask | recognition.MergeElementsTask\n",
            "Supported Script Types:\nServer-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Sibling Module Members:\nN/task/accounting/recognition Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recognition.create(options)\n"
        ]
    },
    "(N/task/accounting/recognition) recognition.TaskStatus": {
        "prefix": "recognition.TaskStatus",
        "body": "recognition.TaskStatus.${1|COMPLETE,FAILED,PENDING,PROCESSING|}",
        "description": [
            "N/task/accounting/recognition Module",
            "recognition.TaskStatus\n",
            "Enum Description:\nHolds the string values for supported merge task statuses.\nThis enum is used to represent the task status in a recognition.MergeArrangementsTaskStatus object.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Type:\nenum\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Sibling Module Members:\nN/task/accounting/recognition Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recognition.TaskStatus\n"
        ]
    },
    "(N/task/accounting/recognition) recognition.TaskType": {
        "prefix": "recognition.TaskType",
        "body": "recognition.TaskType.${1|MERGE_ARRANGEMENTS_TASK,MERGE_ELEMENTS_TASK|}",
        "description": [
            "N/task/accounting/recognition Module",
            "recognition.TaskType\n",
            "Enum Description:\nHolds the string values for supported merge task types.\nThis enum is used to pass the task type argument to recognition.create(options).\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Type:\nenum\n",
            "Module:\nN/task/accounting/recognition Module\n",
            "Sibling Module Members:\nN/task/accounting/recognition Module Members\n",
            "Since:\n2019.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=recognition.TaskType\n"
        ]
    },
    "(N/transaction) transaction.void(options)": {
        "prefix": "transaction.void(options)",
        "body": [
            "${1:transaction}.void({",
            "\tid: ${2:number | string*},",
            "\ttype: ${3:string*}",
            "})"
        ],
        "description": [
            "N/transaction Module",
            "transaction.void()\n",
            "Method Description:\nMethod used to void a transaction record object and return an id that indicates the type of void performed.\nThe type of void performed depends on the targeted account’s preference settings.\nAfter you void a transaction, you cannot make changes to the transaction that impact the general ledger.\n",
            "Returns:\nAn ID returned as a number.\nIf a direct void is performed, returns the ID of the record voided.\nIf a void by reversing journal is performed, returns the ID of the newly created voiding journal.\n",
            "Supported Script Types:\nAll client and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/transaction Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=transaction.void(options)\n"
        ]
    },
    "(N/transaction) transaction.void.promise(options)": {
        "prefix": "transaction.void.promise(options)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=transaction.void.promise(options) for more information.",
        "description": [
            "N/transaction Module",
            "transaction.void.promise()\n",
            "Method Description:\nMethod used to void a transaction record object asynchronously and return an ID that indicates the type of void performed:\nIf a direct void is performed, this method returns the ID of the record that was voided.\nIf a void by reversing journal is performed, this method returns the ID of the newly created voiding journal.\nThe type of void performed depends on the targeted account’s preference settings.\nAfter you void a transaction, you cannot make changes to the transaction that impact the general ledger.\nThe parameters and errors thrown for this method are the same as those for transaction.void(options). For more information on promises, see Promise Object.\n",
            "Returns:\nPromise Object\n",
            "Synchronous Version:\ntransaction.void(options)\n",
            "Supported Script Types:\nAll client-side scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\n10 units\n",
            "Module:\nN/transaction Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=transaction.void.promise(options)\n"
        ]
    },
    "(N/transaction) transaction.Type": {
        "prefix": "transaction.Type",
        "body": "transaction.Type.${1|ASSEMBLY_BUILD,ASSEMBLY_UNBUILD,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,CASH_REFUND,CASH_SALE,CHECK,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CUSTOM_PURCHASE,CUSTOM_SALE,CUSTOMER_DEPOSIT,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOMER_REFUND,CUSTOM_TRANSACTION,DEPOSIT,DEPOSIT_APPLICATION,ESTIMATE,EXPENSE_REPORT,FULFILLMENT_REQUEST,INBOUND_SHIPMENT,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ITEM_FULFILLMENT,ITEM_RECEIPT,JOURNAL_ENTRY,OPPORTUNITY,PAYCHECK,PAYCHECK_JOURNAL,PERIOD_END_JOURNAL,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,SALES_ORDER,STORE_PICKUP_FULFILLMENT,TRANSFER_ORDER,VENDOR_BILL,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,WAVE,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE|}",
        "description": [
            "N/transaction Module",
            "transaction.Type\n",
            "Enum Description:\nEnumeration that holds the string values for supported transaction record types.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nAll client and server-side scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/transaction Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=transaction.Type\n"
        ]
    },
    "(N/translation) translation.Handle": {
        "prefix": "translation.Handle",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=translation.Handle for more information.",
        "description": [
            "N/translation Module",
            "translation.Handle\n",
            "Object Description:\nEncapsulates a Translation Collection for a locale.\nUse translation.load(options) to create a translation.Handle object with translations for the specified Translation Collections and locales. Use translation.selectLocale(options) to create a translation.Handle object in the specified locale from an existing translation.Handle object.\nThe translation.Handle object is a hierarchical object, which means that each node in the object is either another translation.Handle object or a translation.Translator function. Translator functions combine strings with parameters. When you create a Translation Collection in the NetSuite UI, you can include parameter placeholders in your translation strings. The translator function injects the specified parameter values into the placeholders in the returned translation string.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/translation Module\n",
            "Sibling Object Members:\nN/translation Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=translation.Handle\n"
        ]
    },
    "(N/translation) translation.Translator": {
        "prefix": "translation.Translator",
        "body": [
            "${1:translation}.Translator{",
            "\tparams: ${2:string[]}",
            "})"
        ],
        "description": [
            "N/translation Module",
            "translation.Translator\n",
            "Object / Function Description:\nRepresents a translator function that returns translated strings.\nUse translation.get(options) to obtain this function for the specified Translation Collection and locale. The translator function is called with any parameters that you specify, and the translator function returns the appropriate translated string.\nWhen you create a Translation Collection in the NetSuite UI, you can include parameter placeholders in your translation strings. Translation strings that include placeholders are called parametrized translation strings. Placeholders use braces and a number (starting from 1). The translator function injects the specified parameter values into the placeholders in the translation string.\nFor example, “Hello, {1}!” is a valid translation string, where {1} is a placeholder for a parameter. If you call translation.get(options) and specify a parameter of “NetSuite”, the translator function returns “Hello, NetSuite!” in the appropriate locale.\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/translation Module\n",
            "Sibling Object Members:\nN/translation Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=translation.Translator\n"
        ]
    },
    "(N/translation) translation.get(options)": {
        "prefix": "translation.get(options)",
        "body": [
            "${1:translation}.get({",
            "\tcollection: ${2:string*},",
            "\tkey: ${3:string*},",
            "\tlocale: ${4:string}",
            "})"
        ],
        "description": [
            "N/translation Module",
            "translation.get()\n",
            "Method Description:\nCreates a translator function for a key in the specified Translation Collection and locale.\nThis method returns a translator function, which is subsequently called with any specified parameters. When you call translation.get(options) and do not specify a locale, the method uses the current user's session locale. You can use the options.locale parameter to specify another locale. The translation.Locale enum lists all locales that are enabled for a company, and you can use these locales in translation.get(options).\n",
            "Returns:\ntranslation.Translator\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/translation Module\n",
            "Sibling Object Members:\nN/translation Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=translation.get(options)\n"
        ]
    },
    "(N/translation) translation.load(options)": {
        "prefix": "translation.load(options)",
        "body": [
            "${1:translation}.load({",
            "\tcollections: {",
            "\t\talias: ${3:string*},",
            "\t\tcollection: ${4:string*},",
            "\t\tkeys: ${5:string[]*}",
            "\t\t},",
            "\tlocales: ${6:string[]}",
            "})"
        ],
        "description": [
            "N/translation Module",
            "translation.load()\n",
            "Method Description:\nCreates a translation.Handle object with translations for the specified Translation Collections and locales.\nThis method returns a translation.Handle object with translation strings organized by collection and ID. Every node in a translation.Handle object is either another translation.Handle object or a translation.Translator function.\nYou can load translation strings from multiple Translation Collections in a single call of translation.load(options). You must specify the keys of individual translation strings that you want to load. You cannot load all of the terms in a Translation Collection at one time. The translation.load(options) method can load a maximum of 1,000 translation strings, regardless of whether the strings are loaded from one collection or multiple collections.\nWhen you load translation strings using translation.load(options), you can specify a list of valid locales for the strings. You can use these locales when you select a locale using translation.selectLocale(options). If you specify more than one locale when you call translation.load(options), the first specified locale in the list is used for the created translation.Handle object. If you want to use a different locale from the list, use translation.selectLocale(options), which returns a translation.Handle object in the specified locale. You must load a locale using translation.load(options) before you can select it using translation.selectLocale(options).\n",
            "Returns:\ntranslation.Handle\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/translation Module\n",
            "Sibling Object Members:\nN/translation Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=translation.load(options)\n"
        ]
    },
    "(N/translation) translation.selectLocale(options)": {
        "prefix": "translation.selectLocale(options)",
        "body": [
            "${1:translation}.selectLocale({",
            "\thandle: ${2:translation.Handle*},",
            "\tlocale: ${3:string*}",
            "})"
        ],
        "description": [
            "N/translation Module",
            "translation.selectLocale()\n",
            "Method Description:\nCreates a translation.Handle object in the specified locale from an existing translation.Handle object.\nThis method returns a translation.Handle object that contains the same translation strings as the options.handle object, and the strings are in the options.locale locale. Before you can use this method to select a locale, the locale must be loaded using the locales parameter of translation.load(options).\n",
            "Returns:\ntranslation.Handle\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/translation Module\n",
            "Sibling Object Members:\nN/translation Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=translation.selectLocale(options)\n"
        ]
    },
    "(N/translation) translation.Locale": {
        "prefix": "translation.Locale",
        "body": "translation.Locale.${1||}",
        "description": [
            "N/translation Module",
            "translation.Locale\n",
            "Enum Description:\nHolds the string values for supported locales for Translation Collections. This enum is used to pass the locale argument to translation.get(options), translation.selectLocale(options), and translation.load(options).\nThis enum lists all locales that are enabled for a company. This enum also includes two special values: CURRENT and COMPANY_DEFAULT. The CURRENT value represents the current user’s locale, and the COMPANY_DEFAULT value represents the default locale for the company.\n",
            "Type:\nenum\n",
            "Supported Script Types:\nClient and server-side scripts\nFor additional information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/translation Module\n",
            "Sibling Object Members:\nN/translation Module Members\n",
            "Since:\n2019.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=translation.Locale\n"
        ]
    },
    "(N/ui/dialog) dialog.alert(options)": {
        "prefix": "dialog.alert(options)",
        "body": [
            "${1:dialog}.alert({",
            "\ttitle: ${2:string},",
            "\tmessage: ${3:string}",
            "})"
        ],
        "description": [
            "N/ui/dialog Module",
            "dialog.alert()\n",
            "Method Description:\nCreates an Alert dialog with an OK button.\n",
            "Returns:\nPromise Object. To run a callback function when the OK button is clicked, pass a function to the then portion of the Promise object. When the OK button is clicked, true is passed to the callback. You do not have to utilize the Promise object unless there is an action you want performed after the user clicks the OK button.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/dialog Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dialog.alert(options)\n"
        ]
    },
    "(N/ui/dialog) dialog.confirm(options)": {
        "prefix": "dialog.confirm(options)",
        "body": [
            "${1:dialog}.confirm({",
            "\ttitle: ${2:string},",
            "\tmessage: ${3:string}",
            "})"
        ],
        "description": [
            "N/ui/dialog Module",
            "dialog.confirm()\n",
            "Method Description:\nCreates a Confirm dialog with OK and Cancel buttons.\n",
            "Returns:\nPromise Object. To run a callback function when the OK button is pressed, pass a function to the then portion of the Promise object. The value of the pressed button, where OK is true and Cancel is false, is passed to the callback.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/dialog Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dialog.confirm(options)\n"
        ]
    },
    "(N/ui/dialog) dialog.create(options)": {
        "prefix": "dialog.create(options)",
        "body": [
            "${1:dialog}.create({",
            "\tbuttons: ${2:string[]},",
            "\ttitle: ${3:string},",
            "\tmessage: ${4:string}",
            "})"
        ],
        "description": [
            "N/ui/dialog Module",
            "dialog.create()\n",
            "Method Description:\nCreates a dialog with specified buttons.\n",
            "Returns:\nPromise Object. To run a callback function when a button is pressed, pass a function to the then portion of the Promise object. The value of the button pressed is passed to the callback.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/dialog Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=dialog.create(options)\n"
        ]
    },
    "(N/ui/message) message.Message": {
        "prefix": "message.Message",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=message.Message for more information.",
        "description": [
            "N/ui/message Module",
            "message.Message\n",
            "Object Description:\nThe Message object that gets created when calling the create method.\nFor a complete list of this object’s methods, see Message Object Members.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/ui/message Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=message.Message\n"
        ]
    },
    "(N/ui/message) Message.hide()": {
        "prefix": "Message.hide()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Message.hide() for more information.",
        "description": [
            "N/ui/message Module",
            "Message.hide()\n",
            "Method Description:\nHides the message.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/message Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Message.hide()\n"
        ]
    },
    "(N/ui/message) Message.show()": {
        "prefix": "Message.show()",
        "body": [
            "${1:Message}.show(){",
            "\tduration: ${2:int|string}",
            "})"
        ],
        "description": [
            "N/ui/message Module",
            "Message.show()\n",
            "Method Description:\nShows the message.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/message Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Message.show()\n"
        ]
    },
    "(N/ui/message) message.create(options)": {
        "prefix": "message.create(options)",
        "body": [
            "${1:message}.create({",
            "\ttype: ${2:message.Type*},",
            "\ttitle: ${3:string},",
            "\tmessage: ${4:string},",
            "\tduration: ${5:int|string}",
            "})"
        ],
        "description": [
            "N/ui/message Module",
            "message.create()\n",
            "Method Description:\nCreates a message that can be displayed or hidden near the top of the page.\n",
            "Returns:\nmessage.Message.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/message Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=message.create(options)\n"
        ]
    },
    "(N/ui/message) message.Type": {
        "prefix": "message.Type",
        "body": "message.Type.${1|CONFIRMATION,INFORMATION,WARNING,ERROR|}",
        "description": [
            "N/ui/message Module",
            "message.Type\n",
            "Enum Description:\nIndicates the type of message to display, which specifies the background color of the message and other message indicators.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation uses the term enumeration (or enum) to describe a plain JavaScript object with a flat, map-like structure. In this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nClient scripts\nFor more information, see SuiteScript 2.0 Client Script Type.\n",
            "Module:\nN/ui/message Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=message.Type\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.Assistant": {
        "prefix": "serverWidget.Assistant",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Assistant for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.Assistant\n",
            "Object Description:\nA scriptable, multi-step NetSuite assistant. An assistant contains a series of step that a user must complete to accomplish a larger goal. An assistant can be sequential, or non-sequential and include optional steps. Each page of the assistant is defined by a step.\nAll data and states for an assistant are tracked automatically throughout the user's session until completion of the assistant.\nYou can create a new assistant with the serverWidget.createAssistant(options) method.\nAfter you create an Assistant object, you can:\nBuild and run an assistant in your NetSuite account.\nAdd a variety of scriptable elements to the assistant including fields, steps, buttons, tabs, and sublists.\nFor a complete list of this object’s methods and properties, see Assistant Object Members.\nThe assistant cannot be used on externally available Suitelets.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Assistant\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.addField(options)": {
        "prefix": "Assistant.addField(options)",
        "body": [
            "${1:Assistant}.addField({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttype: ${4:string*},",
            "\tsource: ${5:string},",
            "\tcontainer: ${6:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.addField()\n",
            "Method Description:\nAdds a field to an assistant. Use fields to record or display information specific to your needs.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.addField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.addFieldGroup(options)": {
        "prefix": "Assistant.addFieldGroup(options)",
        "body": [
            "${1:Assistant}.addFieldGroup({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.addFieldGroup()\n",
            "Method Description:\nAdds a field group to the assistant. A field group is a collection of fields that can be displayed in a one or two column format. Assign a field to a field group in order to label, hide or collapse a group of fields.\nBy default, the field group is collapsible and appears expanded on the assistant page. To change this behavior, set the FieldGroup.isCollapsed and FieldGroup.isCollapsible properties.\n",
            "Returns:\nserverWidget.FieldGroup object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.addFieldGroup(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.addStep(options)": {
        "prefix": "Assistant.addStep(options)",
        "body": [
            "${1:Assistant}.addStep({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.addStep()\n",
            "Method Description:\nAdds a step to an assistant. Steps define each page of the assistant.\nUse Assistant.isNotOrdered to control if the steps must be completed sequentially or in no specific order.\nIf you want to create help text for the step, you can use AssistantStep.helpText on the object returned.\n",
            "Returns:\nserverWidget.AssistantStep object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.addStep(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.addSublist(options)": {
        "prefix": "Assistant.addSublist(options)",
        "body": [
            "${1:Assistant}.addSublist({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttype: ${4:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.addSublist()\n",
            "Method Description:\nAdds a sublist to an assistant.\nOnly inline editor sublists are added. Other sublist types are not supported.\n",
            "Returns:\nserverWidget.Sublist object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.addSublist(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getField(options)": {
        "prefix": "Assistant.getField(options)",
        "body": [
            "${1:Assistant}.getField({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getField()\n",
            "Method Description:\nReturns a field object on an assistant page.\n",
            "Returns:\nserverWidget.Field\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getFieldGroup(options)": {
        "prefix": "Assistant.getFieldGroup(options)",
        "body": [
            "${1:Assistant}.getFieldGroup({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getFieldGroup()\n",
            "Method Description:\nReturns a field group on an assistant page.\n",
            "Returns:\nserverWidget.FieldGroup object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getFieldGroup(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getFieldGroupIds()": {
        "prefix": "Assistant.getFieldGroupIds()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getFieldGroupIds() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getFieldGroupIds()\n",
            "Method Description:\nRetrieves all the internal IDs for field groups in an assistant.\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getFieldGroupIds()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getFieldIds()": {
        "prefix": "Assistant.getFieldIds()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getFieldIds() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getFieldIds()\n",
            "Method Description:\nGets all the internal IDs for fields in an assistant.\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getFieldIds()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getFieldIdsByFieldGroup(fieldGroup)": {
        "prefix": "Assistant.getFieldIdsByFieldGroup(fieldGroup)",
        "body": [
            "${1:Assistant}.getFieldIdsByFieldGroup(fieldGroup){",
            "\tfieldGroup: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getFieldIdsByFieldGroup(fieldGroup)\n",
            "Method Description:\nGets all field IDs in the assistant field group.\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getFieldIdsByFieldGroup(fieldGroup)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getLastAction()": {
        "prefix": "Assistant.getLastAction()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getLastAction() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getLastAction()\n",
            "Method Description:\nGets the last action taken by the user.\nTo identify the step that the last action came from, use Assistant.getLastStep().\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getLastAction()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getLastStep()": {
        "prefix": "Assistant.getLastStep()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getLastStep() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getLastStep()\n",
            "Method Description:\nGets the step that the last submitted action came from.\n",
            "Returns:\nA serverWidget.AssistantStep object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getLastStep()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getNextStep()": {
        "prefix": "Assistant.getNextStep()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getNextStep() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getNextStep()\n",
            "Method Description:\nGets the next step corresponding to the user's last submitted action in the assistant.\nIf you need information about the last step, use Assistant.getLastStep() before you use this method.\n",
            "Returns:\nserverWidget.AssistantStep object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getNextStep()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getStep(options)": {
        "prefix": "Assistant.getStep(options)",
        "body": [
            "${1:Assistant}.getStep({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getStep()\n",
            "Method Description:\nReturns a step in an assistant.\n",
            "Returns:\nserverWidget.AssistantStep object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getStep(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getStepCount()": {
        "prefix": "Assistant.getStepCount()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getStepCount() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getStepCount()\n",
            "Method Description:\nGets the total number of steps in an assistant.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getStepCount()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getSteps()": {
        "prefix": "Assistant.getSteps()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getSteps() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getSteps()\n",
            "Method Description:\nGets all the steps in an assistant.\n",
            "Returns:\nserverWidget.AssistantStep[] object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getSteps()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getSublist(options)": {
        "prefix": "Assistant.getSublist(options)",
        "body": [
            "${1:Assistant}.getSublist({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getSublist()\n",
            "Method Description:\nReturns a sublist in an assistant.\n",
            "Returns:\nserverWidget.Sublist object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getSublist(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.getSublistIds()": {
        "prefix": "Assistant.getSublistIds()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getSublistIds() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.getSublistIds()\n",
            "Method Description:\nGets the IDs for all the sublists in an assistant.\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.getSublistIds()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.hasErrorHtml()": {
        "prefix": "Assistant.hasErrorHtml()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.hasErrorHtml() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.hasErrorHtml()\n",
            "Method Description:\nIndicates whether an assistant has an error message set.\ntrue if Assistant.errorHtml contains a value.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.hasErrorHtml()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.isFinished()": {
        "prefix": "Assistant.isFinished()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.isFinished() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.isFinished()\n",
            "Method Description:\nIndicates whether all steps in an assistant are completed.\nIf true, the assistant is finished and a completion message is displayed. To set the text for the completion message, use the Assistant.finishedHtml property.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.isFinished()\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.sendRedirect(options)": {
        "prefix": "Assistant.sendRedirect(options)",
        "body": [
            "${1:Assistant}.sendRedirect({",
            "\tresponse: ${2:response*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.sendRedirect()\n",
            "Method Description:\nManages redirects in an assistant.\nThis method also addresses the case in which one assistant redirects to another assistant. In this scenario, the second assistant must return to the first assistant if the user Cancels or Finishes. This method, when used in the second assistant, ensures that users are redirected back to the first assistant.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.sendRedirect(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.setSplash(options)": {
        "prefix": "Assistant.setSplash(options)",
        "body": [
            "${1:Assistant}.setSplash({",
            "\ttitle: ${2:string*},",
            "\ttext1: ${3:string*},",
            "\ttext2: ${4:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.setSplash()\n",
            "Method Description:\nDefines a splash message.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.setSplash(options)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.updateDefaultValues(values)": {
        "prefix": "Assistant.updateDefaultValues(values)",
        "body": [
            "${1:Assistant}.updateDefaultValues(values){",
            "\tvalues: ${2:Object[]*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.updateDefaultValues(values)\n",
            "Method Description:\nSets the default values of an array of fields that are specific to the assistant.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.updateDefaultValues(values)\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.clientScriptFileId": {
        "prefix": "Assistant.clientScriptFileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.clientScriptFileId for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.clientScriptFileId\n",
            "Property Description:\nThe File Cabinet ID of client script file to be used in this assistant.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.clientScriptFileId\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.currentStep": {
        "prefix": "Assistant.currentStep",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.currentStep for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.currentStep\n",
            "Property Description:\nThe current step.\nYou can set any step as the current step.\n",
            "Type:\nserverWidget.AssistantStep (read-only)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.currentStep\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.errorHtml": {
        "prefix": "Assistant.errorHtml",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.errorHtml for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.errorHtml\n",
            "Property Description:\nError message text for the current step.\nOptionally, you can use HTML tags to format the message.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.errorHtml\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.finishedHtml": {
        "prefix": "Assistant.finishedHtml",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.finishedHtml for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.finishedHtml\n",
            "Property Description:\nThe text to display after the assistant finishes. For example “You have completed the Small Business Setup Assistant. Take the rest of the day off”.\nTo trigger display of the completion message, call Assistant.isFinished().\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.finishedHtml\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.hideAddToShortcutsLink": {
        "prefix": "Assistant.hideAddToShortcutsLink",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.hideAddToShortcutsLink for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.hideAddToShortcutsLink\n",
            "Property Description:\nWhether to show or hide the Add to Shortcuts link that appears in the top-right corner of an assistant page.\nBy default, the value is false, which means the Add to Shortcuts link is visible in the UI.\nIf set to true, the Add To Shortcuts link is not visible on an Assistant page.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.hideAddToShortcutsLink\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.hideStepNumber": {
        "prefix": "Assistant.hideStepNumber",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.hideStepNumber for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.hideStepNumber\n",
            "Property Description:\nWhether assistant steps are displayed with numbers.\nBy default, the value is false, which means that steps are numbered.\nIf set to true, the assistant does not use step numbers.\nTo change step ordering, set Assistant.isNotOrdered.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.hideStepNumber\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.isNotOrdered": {
        "prefix": "Assistant.isNotOrdered",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.isNotOrdered for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.isNotOrdered\n",
            "Property Description:\nWhether steps must be completed in a particular sequence. If steps are ordered, users must complete the current step before proceeding to the next step. \nThe default value is false, which means the steps are ordered.  Ordered steps appear vertically in the left panel of the assistant\nIf set to true, steps can be completed in any order. In the UI, unordered steps appear horizontally and below the assistant title\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.isNotOrdered\n"
        ]
    },
    "(N/ui/serverWidget) Assistant.title": {
        "prefix": "Assistant.title",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.title for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Assistant.title\n",
            "Property Description:\nThe title for the assistant. The title appears at the top of all assistant pages.\nThis value overrides the title specified in serverWidget.createAssistant(options).\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Assistant.title\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.AssistantStep": {
        "prefix": "serverWidget.AssistantStep",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.AssistantStep for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.AssistantStep\n",
            "Object Description:\nA step within a custom NetSuite assistant.\nCreate a step by calling Assistant.addStep(options).\nFor a complete list of this object’s methods and properties, see AssistantStep Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.AssistantStep\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.getFieldIds()": {
        "prefix": "AssistantStep.getFieldIds()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getFieldIds() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.getFieldIds()\n",
            "Method Description:\nGets the IDs for all the fields in a step.\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getFieldIds()\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.getLineCount(options)": {
        "prefix": "AssistantStep.getLineCount(options)",
        "body": [
            "${1:AssistantStep}.getLineCount({",
            "\tgroup: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.getLineCount()\n",
            "Method Description:\nGets the number of lines on a sublist in a step.\nThe first line number on a sublist is 0 (not 1).\n",
            "Returns:\nnumber (the count of line items on a sublist)\nif the sublist does not exist, -1 is returned.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getLineCount(options)\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.getSublistFieldIds(options)": {
        "prefix": "AssistantStep.getSublistFieldIds(options)",
        "body": [
            "${1:AssistantStep}.getSublistFieldIds({",
            "\tgroup: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.getSublistFieldIds()\n",
            "Method Description:\nGets the IDs for all the sublist fields (line items) in a step.\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getSublistFieldIds(options)\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.getSublistValue(options)": {
        "prefix": "AssistantStep.getSublistValue(options)",
        "body": [
            "${1:AssistantStep}.getSublistValue({",
            "\tgroup: ${2:string*},",
            "\tid: ${3:string*},",
            "\tline: ${4:number*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.getSublistValue()\n",
            "Method Description:\nGets the current value of a sublist field (line item) in a step.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getSublistValue(options)\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.getSubmittedSublistIds()": {
        "prefix": "AssistantStep.getSubmittedSublistIds()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getSubmittedSublistIds() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.getSubmittedSublistIds()\n",
            "Method Description:\nGets the IDs for all the sublists submitted in a step.\n",
            "Returns:\nstring[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getSubmittedSublistIds()\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.getValue(options)": {
        "prefix": "AssistantStep.getValue(options)",
        "body": [
            "${1:AssistantStep}.getValue({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.getValue()\n",
            "Method Description:\nGets the current value(s) of a field or multi-select field.\n",
            "Returns:\nstring (for standard fields) | string[] (for multi-select fields)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.getValue(options)\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.helpText": {
        "prefix": "AssistantStep.helpText",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.helpText for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.helpText\n",
            "Property Description:\nThe help text for a step.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.helpText\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.id": {
        "prefix": "AssistantStep.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.id for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.id\n",
            "Property Description:\nThe internal ID of the step.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.id\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.label": {
        "prefix": "AssistantStep.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.label for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.label\n",
            "Property Description:\nThe label for the step.\nTo create a label when the step is first added to the assistant, you can use the Assistant.addStep(options) method.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.label\n"
        ]
    },
    "(N/ui/serverWidget) AssistantStep.stepNumber": {
        "prefix": "AssistantStep.stepNumber",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.stepNumber for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "AssistantStep.stepNumber\n",
            "Property Description:\nThe numerical order of the step.\n",
            "Type:\nnumber\nA sequence of assistant steps starts at 1.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=AssistantStep.stepNumber\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.Button": {
        "prefix": "serverWidget.Button",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Button for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.Button\n",
            "Object Description:\nA button that appears in a UI object.\nTo add a button, use Form.addButton(options) or Sublist.addButton(options). When adding a button to a record or form, consider using a beforeLoad user event script.\nCustom buttons only appear during Edit mode. On records, custom buttons appear to the left of the printer icon.\nCurrently you cannot use SuiteScript to add or remove a custom button to or from the More Actions menu. You can, however, do this using SuiteBuilder point-and-click customization. See Configuring Buttons and Actions.\nFor a complete list of this object’s properties, see Button Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Button\n"
        ]
    },
    "(N/ui/serverWidget) Button.isDisabled": {
        "prefix": "Button.isDisabled",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Button.isDisabled for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Button.isDisabled\n",
            "Property Description:\nWhether a button is grayed-out and disabled.\nThe default value is false.\nIf set to true, the button appears grayed-out in the and cannot be clicked.\nThis method is not supported for standard NetSuite buttons. This method can be used with custom buttons only.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Button.isDisabled\n"
        ]
    },
    "(N/ui/serverWidget) Button.isHidden": {
        "prefix": "Button.isHidden",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Button.isHidden for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Button.isHidden\n",
            "Property Description:\nWhether the button is hidden in the UI.\nThe default value is false, which means the button is visible.\nIf set to true, the button is not visible in the UI.\nThis property is supported on custom buttons and on some standard NetSuite buttons. For a list of supported standard buttons, see Button IDs.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Button.isHidden\n"
        ]
    },
    "(N/ui/serverWidget) Button.label": {
        "prefix": "Button.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Button.label for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Button.label\n",
            "Property Description:\nThe label for the button.\nYou can use this property to rename a button based on context, for example to re-label a button for particular users that are viewing a page.\nThis property is supported on custom buttons and most standard buttons.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Button.label\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.Field": {
        "prefix": "serverWidget.Field",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Field for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.Field\n",
            "Object Description:\nA body or sublist field. Use fields to record or display information specific to your needs.\nTo add a Field object, use Assistant.addField(options), Form.addField(options), or Sublist.addField(options).\nFor a complete list of this object’s methods and properties, see Field Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Field\n"
        ]
    },
    "(N/ui/serverWidget) Field.addSelectOption(options)": {
        "prefix": "Field.addSelectOption(options)",
        "body": [
            "${1:Field}.addSelectOption({",
            "\tvalue: ${2:string*},",
            "\ttext: ${3:string*},",
            "\tisSelected: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Field.addSelectOption()\n",
            "Method Description:\nAdds the select options that appears in the dropdown of a field.\nAfter you create a select or multi-select field that is sourced from a record or list, you cannot add additional values with Field.addSelectOption(options). The select values are determined by the source record or list.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.addSelectOption(options)\n"
        ]
    },
    "(N/ui/serverWidget) Field.getSelectOptions(options)": {
        "prefix": "Field.getSelectOptions(options)",
        "body": [
            "${1:Field}.getSelectOptions({",
            "\tfilter: ${2:string},",
            "\tfilteroperator: ${3:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Field.getSelectOptions()\n",
            "Method Description:\nObtains a list of available options on a select field.\nThe internal ID and label of the options for a select field as name/value pairs is returned.\nThe first 1,000 available options are returned.\nIf you attempt to get select options on a field that is not a select field, if it is a popup select field, or if you reference a field that does not exist on the form, null is returned.\nA call to this method may return different results for the same field for different roles.\n",
            "Returns:\nObject[]\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.getSelectOptions(options)\n"
        ]
    },
    "(N/ui/serverWidget) Field.setHelpText(options)": {
        "prefix": "Field.setHelpText(options)",
        "body": [
            "${1:Field}.setHelpText({",
            "\thelp: ${2:string*},",
            "\tshowInlineForAssistant: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Field.setHelpText()\n",
            "Method Description:\nSets the help text for the field.\nWhen the field label is clicked, a popup displays the help text defined using this method.\n",
            "Returns:\nThe serverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.setHelpText(options)\n"
        ]
    },
    "(N/ui/serverWidget) Field.updateBreakType(options)": {
        "prefix": "Field.updateBreakType(options)",
        "body": [
            "${1:Field}.updateBreakType({",
            "\tbreakType: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Field.updateBreakType()\n",
            "Method Description:\nUpdates the break type of the field. Set this value using the FieldBreakType enum The break type is used to add a break in flow layout for the field.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.updateBreakType(options)\n"
        ]
    },
    "(N/ui/serverWidget) Field.updateDisplaySize(options)": {
        "prefix": "Field.updateDisplaySize(options)",
        "body": [
            "${1:Field}.updateDisplaySize({",
            "\theight: ${2:number*},",
            "\twidth: ${3:number*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Field.updateDisplaySize()\n",
            "Method Description:\nUpdates the width and height of the field.\nOnly supported on multi-selects, long text, and fields that get rendered as INPUT (type=text) fields. This function is not supported on list/record fields or rich text fields.\nTo set height and width for rich text fields, use Field.richTextWidth and Field.richTextHeight.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.updateDisplaySize(options)\n"
        ]
    },
    "(N/ui/serverWidget) Field.updateDisplayType(options)": {
        "prefix": "Field.updateDisplayType(options)",
        "body": [
            "${1:Field}.updateDisplayType({",
            "\tdisplayType: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Field.updateDisplayType()\n",
            "Method Description:\nUpdates the display type for the field.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.updateDisplayType(options)\n"
        ]
    },
    "(N/ui/serverWidget) Field.updateLayoutType(options)": {
        "prefix": "Field.updateLayoutType(options)",
        "body": [
            "${1:Field}.updateLayoutType({",
            "\tlayoutType: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Field.updateLayoutType()\n",
            "Method Description:\nUpdates the layout type for the field.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.updateLayoutType(options)\n"
        ]
    },
    "(N/ui/serverWidget) Field.alias": {
        "prefix": "Field.alias",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.alias for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.alias\n",
            "Property Description:\nAn alternate name that you can assign to a serverWidget.Field object.\nBy default, the alias is equal to the field's internal ID.\nThis property is only supported on scripted fields created using the N/ui/serverWidget Module.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.alias\n"
        ]
    },
    "(N/ui/serverWidget) Field.defaultValue": {
        "prefix": "Field.defaultValue",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.defaultValue for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.defaultValue\n",
            "Property Description:\n The default value for this field.\n If you pass an empty string or any value that is not a number, such as undefined, the field defaults to a blank field in the UI.\nThis property is supported only on scripted fields created using the N/ui/serverWidget Module.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.defaultValue\n"
        ]
    },
    "(N/ui/serverWidget) Field.helpText": {
        "prefix": "Field.helpText",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.helpText for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.helpText\n",
            "Property Description:\nThe help text for the field.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n–\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.helpText\n"
        ]
    },
    "(N/ui/serverWidget) Field.id": {
        "prefix": "Field.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.id for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.id\n",
            "Property Description:\nThe field internal ID.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.id\n"
        ]
    },
    "(N/ui/serverWidget) Field.isMandatory": {
        "prefix": "Field.isMandatory",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.isMandatory for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.isMandatory\n",
            "Property Description:\nWhether the field is mandatory or optional.\nIf set to true, then the field is defined as mandatory.\nThe default value is false.\nThis property is supported only on scripted fields created using the N/ui/serverWidget Module.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.isMandatory\n"
        ]
    },
    "(N/ui/serverWidget) Field.label": {
        "prefix": "Field.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.label for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.label\n",
            "Property Description:\nThe field label.\nThere is a 40-character limit for custom field labels.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.label\n"
        ]
    },
    "(N/ui/serverWidget) Field.linkText": {
        "prefix": "Field.linkText",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.linkText for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.linkText\n",
            "Property Description:\nThe text displayed for a link in place of the URL.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.linkText\n"
        ]
    },
    "(N/ui/serverWidget) Field.maxLength": {
        "prefix": "Field.maxLength",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.maxLength for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.maxLength\n",
            "Property Description:\nThe maximum length, in characters, of the field (only valid for text, rich text, long text, and textarea fields).\nThis property is supported only on scripted fields created using the N/ui/serverWidget Module.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.maxLength\n"
        ]
    },
    "(N/ui/serverWidget) Field.padding": {
        "prefix": "Field.padding",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.padding for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.padding\n",
            "Property Description:\nThe number of empty vertical character spaces above the field.\nThis property is supported only on scripted fields created using the N/ui/serverWidget Module.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.padding\n"
        ]
    },
    "(N/ui/serverWidget) Field.richTextHeight": {
        "prefix": "Field.richTextHeight",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.richTextHeight for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.richTextHeight\n",
            "Property Description:\nThe height of a rich text field, in pixels.\nThe minimum value is 100 pixels and the maximum value is 500 pixels.\nRich Text Editing must be enabled.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.richTextHeight\n"
        ]
    },
    "(N/ui/serverWidget) Field.richTextWidth": {
        "prefix": "Field.richTextWidth",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.richTextWidth for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.richTextWidth\n",
            "Property Description:\nThe width of a rich text field, in pixels.\nThe minimum value is 250 pixels and the maximum value is 800 pixels.\nRich Text Editing must be enabled.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.richTextWidth\n"
        ]
    },
    "(N/ui/serverWidget) Field.type": {
        "prefix": "Field.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Field.type for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Field.type\n",
            "Property Description:\nReturns the type of a body or sublist field.\nFor example, the value can return text, date, currency, select, checkbox, etc. For more information on possible return values, see format.Type.\nThe maximum character limit for select field types is 801.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Field.type\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.FieldGroup": {
        "prefix": "serverWidget.FieldGroup",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.FieldGroup for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.FieldGroup\n",
            "Object Description:\nA field group on serverWidget.Assistant objects and on serverWidget.Form objects. A field group is a collection of fields that can be displayed in a one or two column format. Assign a field to a field group in order to label, hide or collapse a group of fields.\nFor a complete list of this object’s properties, see FieldGroup Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.FieldGroup\n"
        ]
    },
    "(N/ui/serverWidget) FieldGroup.isBorderHidden": {
        "prefix": "FieldGroup.isBorderHidden",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isBorderHidden for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "FieldGroup.isBorderHidden\n",
            "Property Description:\nIndicates whether the field group border is hidden.\nIf set to false, a border around the field group is displayed.\nThe default value is false.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isBorderHidden\n"
        ]
    },
    "(N/ui/serverWidget) FieldGroup.isCollapsible": {
        "prefix": "FieldGroup.isCollapsible",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isCollapsible for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "FieldGroup.isCollapsible\n",
            "Property Description:\nIndicates whether the field group can be collapsed.\nThe default value is false, which means the field group displays as a static group that cannot be opened or closed.\nIf set to true, the field group can be collapsed.\nOnly supported for fields on serverWidget.Assistant objects\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isCollapsible\n"
        ]
    },
    "(N/ui/serverWidget) FieldGroup.isCollapsed": {
        "prefix": "FieldGroup.isCollapsed",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isCollapsed for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "FieldGroup.isCollapsed\n",
            "Property Description:\nIndicates whether field group is collapsed or expanded.\nThe default value is false, which means that when the page loads, the field group will not appear collapsed.\nIf set to true, the field group is collapsed.\nOnly supported for fields on serverWidget.Assistant objects\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isCollapsed\n"
        ]
    },
    "(N/ui/serverWidget) FieldGroup.isSingleColumn": {
        "prefix": "FieldGroup.isSingleColumn",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isSingleColumn for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "FieldGroup.isSingleColumn\n",
            "Property Description:\nIndicates whether the field group is displayed into a single column.\nThe default value is false.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.isSingleColumn\n"
        ]
    },
    "(N/ui/serverWidget) FieldGroup.label": {
        "prefix": "FieldGroup.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.label for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "FieldGroup.label\n",
            "Property Description:\nThe label for the field group.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=FieldGroup.label\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.Form": {
        "prefix": "serverWidget.Form",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Form for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.Form\n",
            "Object Description:\nA NetSuite-looking form\nAfter you create a Form object, you can:\nAdd a variety of scriptable elements to the form including fields, links, buttons, tabs, and sublists.\nFor a complete list of this object’s methods and properties, see Form Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Form\n"
        ]
    },
    "(N/ui/serverWidget) Form.addButton(options)": {
        "prefix": "Form.addButton(options)",
        "body": [
            "${1:Form}.addButton({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\tfunctionName: ${4:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addButton()\n",
            "Method Description:\nAdds a button to a form.\n",
            "Returns:\nserverWidget.Button object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addButton(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addCredentialField(options)": {
        "prefix": "Form.addCredentialField(options)",
        "body": [
            "${1:Form}.addCredentialField({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\trestrictToDomains: ${4:string | string[]*},",
            "\trestrictToScriptIds: ${5:string | string[]*},",
            "\trestrictToCurrentUser: ${6:boolean},",
            "\tcontainer: ${7:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addCredentialField()\n",
            "Method Description:\nAdds a text field that lets you store credentials in NetSuite to be used when invoking services provided by third parties. The GUID generated by this field can be reused multiple times until the script executes again.\nFor example, when executing credit card transactions, merchants need to store credentials in NetSuite that are used to communicate with Payment Gateway providers.\nThe credentials added with this method can be used with the N/sftp Module and the N/https Module.\nNote the following about this method:\nCredentials associated with this field are stored in encrypted form.\nNo piece of SuiteScript holds a credential in clear text mode.\nNetSuite reports or forms will never provide to the end user the clear text form of a credential.\nAny exchange of the clear text version of a credential with a third party must occur over SSL.\nFor no reason will NetSuite ever log the clear text value of a credential (for example, errors, debug message, alerts, system notes, and so on).\nDecryption occurs though the scripts listed in the restrictToScriptIds parameter. These scripts can call https.createSecureString(options) to decrypt the GUID and create a SecureString instance.\nThe default maximum length for a credential field is 32 characters. If needed, use the Field.maxLength property to change this value.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addCredentialField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addField(options)": {
        "prefix": "Form.addField(options)",
        "body": [
            "${1:Form}.addField({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttype: ${4:string*},",
            "\tsource: ${5:string},",
            "\tcontainer: ${6:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addField()\n",
            "Method Description:\nAdds a field to a form.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addFieldGroup(options)": {
        "prefix": "Form.addFieldGroup(options)",
        "body": [
            "${1:Form}.addFieldGroup({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttab: ${4:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addFieldGroup()\n",
            "Method Description:\nAdds a group of fields to a form.\n",
            "Returns:\nserverWidget.FieldGroup object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addFieldGroup(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addPageInitMessage(options)": {
        "prefix": "Form.addPageInitMessage(options)",
        "body": [
            "${1:Form}.addPageInitMessage({",
            "\tmessage: ${2:message.Message*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addPageInitMessage()\n",
            "Method Description:\nShows a message when users view a record or Suitelet. User event context can be used to control whether the message is shown on records in view, create, or edit mode (not applicable for Suitelets). See context.UserEventType.\nThis method is called during a beforeLoad user event or in a Suitelet, and the message is later displayed on the client side, after the pageInit script is completed.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2018.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addPageInitMessage(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addPageLink(options)": {
        "prefix": "Form.addPageLink(options)",
        "body": [
            "${1:Form}.addPageLink({",
            "\ttitle: ${2:string*},",
            "\ttype: ${3:string*},",
            "\turl: ${4:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addPageLink()\n",
            "Method Description:\nAdds a link to a form.\nYou cannot choose where the page link appears.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addPageLink(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addResetButton(options)": {
        "prefix": "Form.addResetButton(options)",
        "body": [
            "${1:Form}.addResetButton({",
            "\tlabel: ${2:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addResetButton()\n",
            "Method Description:\nAdds a reset button to a form. The reset buttons enables a user to clear the entries.\n",
            "Returns:\nserverWidget.Button object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addResetButton(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addSecretKeyField(options)": {
        "prefix": "Form.addSecretKeyField(options)",
        "body": [
            "${1:Form}.addSecretKeyField({",
            "\tid: ${2:string*},",
            "\trestrictToScriptIds: ${3:string | string[]*},",
            "\tlabel: ${4:string*},",
            "\trestrictToCurrentUser: ${5:boolean},",
            "\tcontainer: ${6:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addSecretKeyField()\n",
            "Method Description:\nAdds a secret key field to the form.\nThis key can be used in crypto modules to perform encryption or hashing.\nThe default maximum length for a secret key field is 32 characters. If needed, use the Field.maxLength property to change this value.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addSecretKeyField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addSublist(options)": {
        "prefix": "Form.addSublist(options)",
        "body": [
            "${1:Form}.addSublist({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttab: ${4:string},",
            "\ttype: ${5:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addSublist()\n",
            "Method Description:\nAdd a sublist to a form.\nIf the row count exceeds 25, sorting is not supported on static sublists created using this method.\n",
            "Returns:\nA serverWidget.Sublist object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addSublist(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addSubmitButton(options)": {
        "prefix": "Form.addSubmitButton(options)",
        "body": [
            "${1:Form}.addSubmitButton({",
            "\tlabel: ${2:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addSubmitButton()\n",
            "Method Description:\nAdds a submit button to a form.\nIf the row count exceeds 25, sorting is not supported on static sublists created using this method.\n",
            "Returns:\nserverWidget.Button object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addSubmitButton(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addSubtab(options)": {
        "prefix": "Form.addSubtab(options)",
        "body": [
            "${1:Form}.addSubtab({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttab: ${4:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addSubtab()\n",
            "Method Description:\nAdds a subtab to a form.\nIn order for your subtab to appear on your form, there must be at least one object assigned to the subtab. Otherwise, the subtab will not appear.\nIf you have less than two subtabs on your form, the subtab will not appear. Instead the fields assigned to the tab will appear at the bottom of the form.\n",
            "Returns:\nserverWidget.Tab object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addSubtab(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.addTab(options)": {
        "prefix": "Form.addTab(options)",
        "body": [
            "${1:Form}.addTab({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.addTab()\n",
            "Method Description:\nAdds a tab to a form.\nIn order for your tab to appear on your form, there must be at least one object assigned to the tab. Otherwise, the tab will not appear.\nIf you have less than two tabs on your form, the tab will not appear. Instead the fields assigned to the tab will appear at the bottom of the form.\n",
            "Returns:\nserverWidget.Tab object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.addTab(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.getButton(options)": {
        "prefix": "Form.getButton(options)",
        "body": [
            "${1:Form}.getButton({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.getButton()\n",
            "Method Description:\nReturns a Button object by internal ID.\n",
            "Returns:\nserverWidget.Button object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.getButton(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.getField(options)": {
        "prefix": "Form.getField(options)",
        "body": [
            "${1:Form}.getField({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.getField()\n",
            "Method Description:\nReturns a Field object by internal ID.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.getField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.getSublist(options)": {
        "prefix": "Form.getSublist(options)",
        "body": [
            "${1:Form}.getSublist({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.getSublist()\n",
            "Method Description:\nReturns a Sublist object by internal ID.\n",
            "Returns:\nserverWidget.Sublist object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.getSublist(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.getSubtab(options)": {
        "prefix": "Form.getSubtab(options)",
        "body": [
            "${1:Form}.getSubtab({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.getSubtab()\n",
            "Method Description:\nReturns a subtab by internal ID.\n",
            "Returns:\nserverWidget.Tab object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.getSubtab(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.getTab(options)": {
        "prefix": "Form.getTab(options)",
        "body": [
            "${1:Form}.getTab({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.getTab()\n",
            "Method Description:\nReturns a tab object from its internal ID.\n",
            "Returns:\nserverWidget.Tab object.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.getTab(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.getTabs()": {
        "prefix": "Form.getTabs()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Form.getTabs() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Form.getTabs()\n",
            "Method Description:\nReturns an array that contains all the tabs in a form.\n",
            "Returns:\nserverWidget.Tab[] objects\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.getTabs()\n"
        ]
    },
    "(N/ui/serverWidget) Form.insertField(options)": {
        "prefix": "Form.insertField(options)",
        "body": [
            "${1:Form}.insertField({",
            "\tfield: ${2:serverWidget.Field*},",
            "\tnextfield: ${3:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.insertField()\n",
            "Method Description:\nInserts a field in front of another field.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.insertField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.insertSublist(options)": {
        "prefix": "Form.insertSublist(options)",
        "body": [
            "${1:Form}.insertSublist({",
            "\tsublist: ${2:serverWidget.Sublist*},",
            "\tnextsublist: ${3:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.insertSublist()\n",
            "Method Description:\nInserts a sublist in front of another sublist.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.insertSublist(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.insertSubtab(options)": {
        "prefix": "Form.insertSubtab(options)",
        "body": [
            "${1:Form}.insertSubtab({",
            "\tsubtab: ${2:serverWidget.Tab*},",
            "\tnextsubtab: ${3:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.insertSubtab()\n",
            "Method Description:\nInserts a subtab in front of another subtab.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.insertSubtab(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.insertTab(options)": {
        "prefix": "Form.insertTab(options)",
        "body": [
            "${1:Form}.insertTab({",
            "\ttab: ${2:serverWidget.Tab*},",
            "\tnexttab: ${3:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.insertTab()\n",
            "Method Description:\nInserts a tab in front of another tab.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.insertTab(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.removeButton(options)": {
        "prefix": "Form.removeButton(options)",
        "body": [
            "${1:Form}.removeButton({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.removeButton()\n",
            "Method Description:\nRemoves a button.\nThis method can be used on custom buttons and certain built-in NetSuite buttons. For more information about built-in NetSuite buttons, see Button IDs.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.removeButton(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.updateDefaultValues(options)": {
        "prefix": "Form.updateDefaultValues(options)",
        "body": [
            "${1:Form}.updateDefaultValues({",
            "\tvalues: ${2:Object[]*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Form.updateDefaultValues()\n",
            "Method Description:\nUpdates the default values of multiple fields on the form.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.updateDefaultValues(options)\n"
        ]
    },
    "(N/ui/serverWidget) Form.clientScriptFileId": {
        "prefix": "Form.clientScriptFileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Form.clientScriptFileId for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Form.clientScriptFileId\n",
            "Property Description:\nThe internal file ID of client script file to be used in this form.\nUse this property when attaching an on demand client script to a server-side script.\nIf you deploy a client script to a form using Form.clientScriptFileId or Form.clientScriptModulePath, using the N/log Module adds the logs to the deployment of the parent script. The parent script can be either a beforeLoad user event script or a SuiteScript 2.0 Suitelet Script Type.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.clientScriptFileId\n"
        ]
    },
    "(N/ui/serverWidget) Form.title": {
        "prefix": "Form.title",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Form.title for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Form.title\n",
            "Property Description:\nThe title used for the form.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Form.title\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.List": {
        "prefix": "serverWidget.List",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.List for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.List\n",
            "Object Description:\nA list page.\nFor a complete list of this object’s methods and properties, see List Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.List\n"
        ]
    },
    "(N/ui/serverWidget) List.addButton(options)": {
        "prefix": "List.addButton(options)",
        "body": [
            "${1:List}.addButton({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\tfunctionName: ${4:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "List.addButton()\n",
            "Method Description:\nAdds a button to a list.\n",
            "Returns:\nserverWidget.Button object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.addButton(options)\n"
        ]
    },
    "(N/ui/serverWidget) List.addColumn(options)": {
        "prefix": "List.addColumn(options)",
        "body": [
            "${1:List}.addColumn({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttype: ${4:string*},",
            "\talign: ${5:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "List.addColumn()\n",
            "Method Description:\nAdds a column to a list.\n",
            "Returns:\nserverWidget.ListColumn object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.addColumn(options)\n"
        ]
    },
    "(N/ui/serverWidget) List.addEditColumn(options)": {
        "prefix": "List.addEditColumn(options)",
        "body": [
            "${1:List}.addEditColumn({",
            "\tcolumn: ${2:serverWidget.ListColumn*},",
            "\tshowHrefCol: ${3:boolean},",
            "\tshowView: ${4:boolean},",
            "\tlink: ${5:string},",
            "\tlinkParam: ${6:string},",
            "\tlinkParamName: ${7:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "List.addEditColumn()\n",
            "Method Description:\nAdds a column containing Edit or Edit/View links to a Suitelet or Portlet list.\nThese Edit or Edit/View links appear to the left of a previously existing column.\n",
            "Returns:\nserverWidget.ListColumn object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.addEditColumn(options)\n"
        ]
    },
    "(N/ui/serverWidget) List.addPageLink(options)": {
        "prefix": "List.addPageLink(options)",
        "body": [
            "${1:List}.addPageLink({",
            "\ttitle: ${2:string*},",
            "\ttype: ${3:string*},",
            "\turl: ${4:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "List.addPageLink()\n",
            "Method Description:\nAdds a link to a list.\n",
            "Returns:\nserverWidget.List (it return itself)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.addPageLink(options)\n"
        ]
    },
    "(N/ui/serverWidget) List.addRow(options)": {
        "prefix": "List.addRow(options)",
        "body": [
            "${1:List}.addRow({",
            "\trow: ${2:Object[]*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "List.addRow()\n",
            "Method Description:\nAdds a single row to a list.\n",
            "Returns:\nserverWidget.List\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.addRow(options)\n"
        ]
    },
    "(N/ui/serverWidget) List.addRows(options)": {
        "prefix": "List.addRows(options)",
        "body": [
            "${1:List}.addRows({",
            "\trows: ${2:Object[]*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "List.addRows()\n",
            "Method Description:\nAdds multiple rows to a list.\n",
            "Returns:\nserverWidget.List\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.addRows(options)\n"
        ]
    },
    "(N/ui/serverWidget) List.clientScriptFileId": {
        "prefix": "List.clientScriptFileId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=List.clientScriptFileId for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "List.clientScriptFileId\n",
            "Property Description:\nThe File Cabinet ID of client script file to be used in this list.\n",
            "Type:\nnumber\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.clientScriptFileId\n"
        ]
    },
    "(N/ui/serverWidget) List.style": {
        "prefix": "List.style",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=List.style for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "List.style\n",
            "Property Description:\nThe display style for this list.\nFor more information about possible values, see serverWidget.ListStyle.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.style\n"
        ]
    },
    "(N/ui/serverWidget) List.title": {
        "prefix": "List.title",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=List.title for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "List.title\n",
            "Property Description:\nThe list title.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=List.title\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.ListColumn": {
        "prefix": "serverWidget.ListColumn",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.ListColumn for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.ListColumn\n",
            "Object Description:\nA list column\nFor a complete list of this object’s methods and properties, see ListColumn Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.ListColumn\n"
        ]
    },
    "(N/ui/serverWidget) ListColumn.addParamToURL(options)": {
        "prefix": "ListColumn.addParamToURL(options)",
        "body": [
            "${1:ListColumn}.addParamToURL({",
            "\tparam: ${2:string*},",
            "\tvalue: ${3:string*},",
            "\tdynamic: ${4:boolean}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "ListColumn.addParamToURL()\n",
            "Method Description:\nAdds a URL parameter (optionally defined per row) to the list column's URL.\n",
            "Returns:\nserverWidget.ListColumn object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ListColumn.addParamToURL(options)\n"
        ]
    },
    "(N/ui/serverWidget) ListColumn.setURL(options)": {
        "prefix": "ListColumn.setURL(options)",
        "body": [
            "${1:ListColumn}.setURL({",
            "\turl: ${2:string*},",
            "\tdynamic: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "ListColumn.setURL()\n",
            "Method Description:\nSets the base URL for the list column.\n",
            "Returns:\nserverWidget.ListColumn\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ListColumn.setURL(options)\n"
        ]
    },
    "(N/ui/serverWidget) ListColumn.label": {
        "prefix": "ListColumn.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ListColumn.label for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "ListColumn.label\n",
            "Property Description:\nThis list column label.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ListColumn.label\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.Sublist": {
        "prefix": "serverWidget.Sublist",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Sublist for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.Sublist\n",
            "Object Description:\nA sublist on a serverWidget.Form or an serverWidget.Assistant object.\nTo add a sublist, use Assistant.addSublist(options) or Form.addSublist(options).\nThis object is read-only except for instances created via the serverWidget module using Suitelets or beforeLoad user event scripts.\nFor a complete list of this object’s methods and properties, see Sublist Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Sublist\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.addButton(options)": {
        "prefix": "Sublist.addButton(options)",
        "body": [
            "${1:Sublist}.addButton({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\tfunctionName: ${4:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.addButton()\n",
            "Method Description:\nAdds a button to a sublist.\n",
            "Returns:\nserverWidget.Button\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.addButton(options)\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.addField(options)": {
        "prefix": "Sublist.addField(options)",
        "body": [
            "${1:Sublist}.addField({",
            "\tid: ${2:string*},",
            "\tlabel: ${3:string*},",
            "\ttype: ${4:string*},",
            "\tsource: ${5:string},",
            "\tcontainer: ${6:string}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.addField()\n",
            "Method Description:\nAdds a field to a sublist.\n",
            "Returns:\nserverWidget.Field object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.addField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.addMarkAllButtons()": {
        "prefix": "Sublist.addMarkAllButtons()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.addMarkAllButtons() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.addMarkAllButtons()\n",
            "Method Description:\nAdds a Mark All and an Unmark All button to a LIST type of sublist.\nSee Using Buttons in NetSuite for information on how Mark All/Unmark All Buttons works in NetSuite.\n",
            "Returns:\nA serverWidget.Button[] object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.addMarkAllButtons()\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.addRefreshButton()": {
        "prefix": "Sublist.addRefreshButton()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.addRefreshButton() for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.addRefreshButton()\n",
            "Method Description:\nAdds a Refresh button to a LIST type of sublist.\n",
            "Returns:\nserverWidget.Button object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.addRefreshButton()\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.getField(options)": {
        "prefix": "Sublist.getField(options)",
        "body": [
            "${1:Sublist}.getField({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.getField()\n",
            "Method Description:\nReturns a Field object on a sublist.\n",
            "Returns:\nserverWidget.Field\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2016.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.getField(options)\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.getSublistValue(options)": {
        "prefix": "Sublist.getSublistValue(options)",
        "body": [
            "${1:Sublist}.getSublistValue({",
            "\tid: ${2:string*},",
            "\tline: ${3:number*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.getSublistValue()\n",
            "Method Description:\nGets a field value on a sublist.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.getSublistValue(options)\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.setSublistValue(options)": {
        "prefix": "Sublist.setSublistValue(options)",
        "body": [
            "${1:Sublist}.setSublistValue({",
            "\tid: ${2:string*},",
            "\tline: ${3:number*},",
            "\tvalue: ${4:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.setSublistValue()\n",
            "Method Description:\nSets the value of a sublist field.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.setSublistValue(options)\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.updateTotallingFieldId(options)": {
        "prefix": "Sublist.updateTotallingFieldId(options)",
        "body": [
            "${1:Sublist}.updateTotallingFieldId({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.updateTotallingFieldId()\n",
            "Method Description:\nSets a field as a totalling column, which is used to calculate and display a running total for the sublist.\n",
            "Returns:\nserverWidget.Sublist object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.updateTotallingFieldId(options)\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.updateUniqueFieldId(options)": {
        "prefix": "Sublist.updateUniqueFieldId(options)",
        "body": [
            "${1:Sublist}.updateUniqueFieldId({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.updateUniqueFieldId()\n",
            "Method Description:\nIndicates a field that must have unique values across the rows in the sublist.\nThis method is available on inlineeditor and editor sublists only.\n",
            "Returns:\nserverWidget.Sublist object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.updateUniqueFieldId(options)\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.displayType": {
        "prefix": "Sublist.displayType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.displayType for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.displayType\n",
            "Property Description:\nThe display style for a sublist.\nUse the serverWidget.SublistDisplayType enum to set this value.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.displayType\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.helpText": {
        "prefix": "Sublist.helpText",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.helpText for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.helpText\n",
            "Property Description:\nThe inline help text for a sublist.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.helpText\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.label": {
        "prefix": "Sublist.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.label for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.label\n",
            "Property Description:\nThe label for this sublist.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.label\n"
        ]
    },
    "(N/ui/serverWidget) Sublist.lineCount": {
        "prefix": "Sublist.lineCount",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.lineCount for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Sublist.lineCount\n",
            "Property Description:\nThe number of line items on a sublist.\nThe first line number on a sublist is 0  (not 1).\n",
            "Type:\nnumber (read-only)\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sublist.lineCount\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.Tab": {
        "prefix": "serverWidget.Tab",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Tab for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.Tab\n",
            "Object Description:\nA tab or subtab on a serverWidget.Form object.\nYou can add a new tab or subtab to a form using one of the following methods:\nForm.addSubtab(options)\nForm.addTab(options)\nForm.insertSubtab(options)\nForm.insertTab(options)\nThe internal ID must be in lowercase, contain no spaces, and include the prefix custpage if you are adding the field to an existing page.\nIn order for your tab to appear on your form, there must be at least one object assigned to the tab. Otherwise, the tab will not appear.\nIf you have less than two tabs on your form, the tab will not appear. Instead the fields assigned to the tab will appear at the bottom of the form.\nFor a complete list of this object’s properties, see Tab Object Members.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.Tab\n"
        ]
    },
    "(N/ui/serverWidget) Tab.helpText": {
        "prefix": "Tab.helpText",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Tab.helpText for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Tab.helpText\n",
            "Property Description:\nThe inline help text for a tab or subtab.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Tab.helpText\n"
        ]
    },
    "(N/ui/serverWidget) Tab.label": {
        "prefix": "Tab.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Tab.label for more information.",
        "description": [
            "N/ui/serverWidget Module",
            "Tab.label\n",
            "Property Description:\nThe label for a tab or subtab.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Tab.label\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.createAssistant(options)": {
        "prefix": "serverWidget.createAssistant(options)",
        "body": [
            "${1:serverWidget}.createAssistant({",
            "\ttitle: ${2:string*},",
            "\thideNavBar: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.createAssistant()\n",
            "Method Description:\nCreates an assistant object.\nThe assistant cannot be used on externally available Suitelets.\n",
            "Returns:\nserverWidget.Assistant object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.createAssistant(options)\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.createForm(options)": {
        "prefix": "serverWidget.createForm(options)",
        "body": [
            "${1:serverWidget}.createForm({",
            "\ttitle: ${2:string*},",
            "\thideNavBar: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.createForm()\n",
            "Method Description:\nCreates a form object.\n",
            "Returns:\nserverWidget.Form object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.createForm(options)\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.createList(options)": {
        "prefix": "serverWidget.createList(options)",
        "body": [
            "${1:serverWidget}.createList({",
            "\ttitle: ${2:string*},",
            "\thideNavBar: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.createList()\n",
            "Method Description:\nCreates a standalone list.\n",
            "Returns:\nserverWidget.List object\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Governance:\nNone\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.createList(options)\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.AssistantSubmitAction": {
        "prefix": "serverWidget.AssistantSubmitAction",
        "body": "serverWidget.AssistantSubmitAction.${1|BACK,CANCEL,FINISH,JUMP,NEXT|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.AssistantSubmitAction\n",
            "Enum Description:\nHolds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction().\nAfter a finish action is submitted, by default, the text “Congratulations! You have completed the <assistant title>” appears on the finish page.\nIn a non-sequential process (steps are unordered), jump is used to move to the user’s last action.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.AssistantSubmitAction\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.FieldBreakType": {
        "prefix": "serverWidget.FieldBreakType",
        "body": "serverWidget.FieldBreakType.${1|NONE,STARTCOL,STARTROW|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.FieldBreakType\n",
            "Enum Description:\nHolds the string values for supported field break types. This enum is used to set the value of the breakType parameter when Field.updateBreakType(options) is called.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.FieldBreakType\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.FieldDisplayType": {
        "prefix": "serverWidget.FieldDisplayType",
        "body": "serverWidget.FieldDisplayType.${1|DISABLED,ENTRY,HIDDEN,INLINE,NODISPLAY,NORMAL,READONLY|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.FieldDisplayType\n",
            "Enum Description:\nHolds the string values for supported field display types. This enum is used to set the value of the displayType parameter when Field.updateDisplayType(options) is called.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.FieldDisplayType\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.FieldLayoutType": {
        "prefix": "serverWidget.FieldLayoutType",
        "body": "serverWidget.FieldLayoutType.${1|STARTROW,MIDROW,ENDROW,OUTSIDE,OUTSIDEBELOW,OUTSIDEABOVE,NORMAL|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.FieldLayoutType\n",
            "Enum Description:\nHolds the string values for the supported types of field layouts. This enum is used to set the value of the layoutType parameter when Field.updateLayoutType(options) is called.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.FieldLayoutType\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.FieldType": {
        "prefix": "serverWidget.FieldType",
        "body": "serverWidget.FieldType.${1|CHECKBOX,LONGTEXT,CURRENCY,MULTISELECT,DATE,PASSWORD,DATETIME,PERCENT,DATETIMETZ,PHONE,EMAIL,SELECT,FILE,RADIO,FLOAT,RICHTEXT,HELP,TEXT,INLINEHTML,TEXTAREA,INTEGER,TIMEOFDAY,IMAGE,URL,LABEL|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.FieldType\n",
            "Enum Description:\nHolds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\nLong text fields created with SuiteScript have a character limit of 100,000. Long text fields created with SuiteBuilder have a character limit of 1,000,000.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.FieldType\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.FormPageLinkType": {
        "prefix": "serverWidget.FormPageLinkType",
        "body": "serverWidget.FormPageLinkType.${1|BREADCRUMB,CROSSLINK|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.FormPageLinkType\n",
            "Enum Description:\nHolds the string values for supported page link types on a form. This enum is used to set the value of the type parameter when Form.addPageLink(options) is called.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.FormPageLinkType\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.LayoutJustification": {
        "prefix": "serverWidget.LayoutJustification",
        "body": "serverWidget.LayoutJustification.${1|CENTER,LEFT,RIGHT|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.LayoutJustification\n",
            "Enum Description:\nHolds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.LayoutJustification\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.ListStyle": {
        "prefix": "serverWidget.ListStyle",
        "body": "serverWidget.ListStyle.${1|GRID,REPORT,PLAIN,NORMAL|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.ListStyle\n",
            "Enum Description:\nHolds the string values for supported list styles. This enum is used to set the value of the List.style property.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.ListStyle\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.SublistDisplayType": {
        "prefix": "serverWidget.SublistDisplayType",
        "body": "serverWidget.SublistDisplayType.${1|HIDDEN,NORMAL|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.SublistDisplayType\n",
            "Enum Description:\nHolds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.SublistDisplayType\n"
        ]
    },
    "(N/ui/serverWidget) serverWidget.SublistType": {
        "prefix": "serverWidget.SublistType",
        "body": "serverWidget.SublistType.${1|INLINEEDITOR,EDITOR,LIST,STATICLIST|}",
        "description": [
            "N/ui/serverWidget Module",
            "serverWidget.SublistType\n",
            "Enum Description:\nHolds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called\nJavaScript does not include an enumeration type. The SuiteScript 2.0 documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure. Within this object, each key points to a read-only string value.\n",
            "Supported Script Types:\nSuiteScript 2.0 Suitelet Script Type and SuiteScript 2.0 User Event Script Type (beforeLoad(scriptContext))\n",
            "Module:\nN/ui/serverWidget Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=serverWidget.SublistType\n"
        ]
    },
    "(N/url) url.format(options)": {
        "prefix": "url.format(options)",
        "body": [
            "${1:url}.format({",
            "\tdomain: ${2:string*},",
            "\tparams: ${3:Object*}",
            "})"
        ],
        "description": [
            "N/url Module",
            "url.format()\n",
            "Method Description:\nCreates a serialized representation of an object containing query parameters.\nUse the returned value to build a URL query string.\n",
            "Returns:\nURL as a string\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/url Module\n",
            "Since:\n2015.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=url.format(options)\n"
        ]
    },
    "(N/url) url.resolveDomain(options)": {
        "prefix": "url.resolveDomain(options)",
        "body": [
            "${1:url}.resolveDomain({",
            "\thostType: ${2:string*},",
            "\taccountId: ${3:string}",
            "})"
        ],
        "description": [
            "N/url Module",
            "url.resolveDomain()\n",
            "Method Description:\nReturns a domain name for a NetSuite account.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/url Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=url.resolveDomain(options)\n"
        ]
    },
    "(N/url) url.resolveRecord(options)": {
        "prefix": "url.resolveRecord(options)",
        "body": [
            "${1:url}.resolveRecord({",
            "\tisEditMode: ${2:boolean*},",
            "\trecordId: ${3:string*},",
            "\trecordType: ${4:string*},",
            "\tparams: ${5:Object}",
            "})"
        ],
        "description": [
            "N/url Module",
            "url.resolveRecord()\n",
            "Method Description:\nReturns the URL string to a NetSuite record.\n",
            "Returns:\nURL to a NetSuite record as a string\n",
            "Supported Script Types:\nClient and server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/url Module\n",
            "Since:\n2015.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=url.resolveRecord(options)\n"
        ]
    },
    "(N/url) url.resolveScript(options)": {
        "prefix": "url.resolveScript(options)",
        "body": [
            "${1:url}.resolveScript({",
            "\tdeploymentId: ${2:string*},",
            "\tscriptId: ${3:string*},",
            "\tparams: ${4:Object},",
            "\treturnExternalUrl: ${5:boolean}",
            "})"
        ],
        "description": [
            "N/url Module",
            "url.resolveScript()\n",
            "Method Description:\nReturns an external or internal URL string to a script.\n",
            "Returns:\nThe URL as a string\n",
            "Supported Script Types:\nAll server scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/url Module\n",
            "Since:\n2015.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=url.resolveScript(options)\n"
        ]
    },
    "(N/url) url.resolveTaskLink(options)": {
        "prefix": "url.resolveTaskLink(options)",
        "body": [
            "${1:url}.resolveTaskLink({",
            "\tid: ${2:string*},",
            "\tparams: ${3:Map}",
            "})"
        ],
        "description": [
            "N/url Module",
            "url.resolveTaskLink()\n",
            "Method Description:\nReturns the internal URL to a NetSuite tasklink.\n",
            "Returns:\nThe URL as a string\n",
            "Supported Script Types:\nAll server and client scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/url Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=url.resolveTaskLink(options)\n"
        ]
    },
    "(N/url) url.HostType": {
        "prefix": "url.HostType",
        "body": [
            "${1:url}.HostType{",
            "\tAPPLICATION: ${2:The domain for UI access.},",
            "\tFORM: ${3:The domain for forms hosted online, usually in Suitelets.},",
            "\tRESTLET: ${4:The domain for calling a RESTlet from an external source.},",
            "\tSUITETALK: ${5:The domain for SOAP web services requests.}",
            "})"
        ],
        "description": [
            "N/url Module",
            "url.HostType\n",
            "Enum Description:\nEnumeration whose string values each describe a category of domain name. This enum is used to set the value of the hostType parameter of the url.resolveDomain(options) method.\n",
            "Type:\nenum\n",
            "Supported Script Types:\nAll server and client scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/url Module\n",
            "Since:\n2017.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=url.HostType\n"
        ]
    },
    "(N/util) util.each(iterable, callback)": {
        "prefix": "util.each(iterable, callback)",
        "body": [
            "${1:util}.each(iterable, callback){",
            "\titerable: ${2:Object | Array*},",
            "\tcallback: ${3:Function*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.each(iterable, callback)\n",
            "Method Description:\nIterates over each member in an Object or Array.\nThis method calls the callback function on each member of the iterable.\n",
            "Returns:\nThe original collection as an Object | Array\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.each(iterable, callback)\n"
        ]
    },
    "(N/util) util.extend(receiver, contributor)": {
        "prefix": "util.extend(receiver, contributor)",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=util.extend(receiver, contributor) for more information.",
        "description": [
            "N/util Module",
            "util.extend(receiver, contributor)\n",
            "Method Description:\nCopies the properties in a source object to a destination object.\nYou can use this method to merge two objects.\n",
            "Returns:\nThe destination object.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.extend(receiver, contributor)\n"
        ]
    },
    "(N/util) util.isArray(obj)": {
        "prefix": "util.isArray(obj)",
        "body": [
            "${1:util}.isArray(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isArray(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript Array object and false otherwise.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Global object:\nutil Object\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isArray(obj)\n"
        ]
    },
    "(N/util) util.isAsyncFunction(obj)": {
        "prefix": "util.isAsyncFunction(obj)",
        "body": [
            "${1:util}.isAsyncFunction(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isAsyncFunction(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript AsyncFunction and false otherwise.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2020.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isAsyncFunction(obj)\n"
        ]
    },
    "(N/util) util.isBoolean(obj)": {
        "prefix": "util.isBoolean(obj)",
        "body": [
            "${1:util}.isBoolean(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isBoolean(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript Boolean and false otherwise.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isBoolean(obj)\n"
        ]
    },
    "(N/util) util.isDate(obj)": {
        "prefix": "util.isDate(obj)",
        "body": [
            "${1:util}.isDate(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isDate(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript Date object and false otherwise.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isDate(obj)\n"
        ]
    },
    "(N/util) util.isFunction(obj)": {
        "prefix": "util.isFunction(obj)",
        "body": [
            "${1:util}.isFunction(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isFunction(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript Function or AsyncFunction and false otherwise.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isFunction(obj)\n"
        ]
    },
    "(N/util) util.isNumber(obj)": {
        "prefix": "util.isNumber(obj)",
        "body": [
            "${1:util}.isNumber(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isNumber(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript Number object or primitive, and false otherwise.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isNumber(obj)\n"
        ]
    },
    "(N/util) util.isObject(obj)": {
        "prefix": "util.isObject(obj)",
        "body": [
            "${1:util}.isObject(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isObject(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a plain JavaScript object (new Object() or {} for example), and false otherwise.\nUse this method, for example, to verify that a variable is a JavaScript object and not a JavaScript Function.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isObject(obj)\n"
        ]
    },
    "(N/util) util.isRegExp(obj)": {
        "prefix": "util.isRegExp(obj)",
        "body": [
            "${1:util}.isRegExp(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isRegExp(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript RegExp object, and false otherwise.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isRegExp(obj)\n"
        ]
    },
    "(N/util) util.isString(obj)": {
        "prefix": "util.isString(obj)",
        "body": [
            "${1:util}.isString(obj){",
            "\tobj: ${2:Object | Primitive*}",
            "})"
        ],
        "description": [
            "N/util Module",
            "util.isString(obj)\n",
            "Method Description:\nReturns true if the obj parameter is a JavaScript String object or primitive, and false otherwise\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/util Module\n",
            "Since:\n2016.1\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=util.isString(obj)\n"
        ]
    },
    "(N/workbook) workbook.AllSubNodesSelector": {
        "prefix": "workbook.AllSubNodesSelector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.AllSubNodesSelector for more information.",
        "description": [
            "N/workbook Module",
            "workbook.AllSubNodesSelector\n",
            "Object Description:\nA selector that is used to select nodes to use in conditions. It can be used when creating a path selector, a sort definition, a conditional filter, a limiting filter, or a measure sort.\nYou can create an AllSubNodesSelector using workbook.createAllSubNodesSelector().\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nNone\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.AllSubNodesSelector\n"
        ]
    },
    "(N/workbook) workbook.Aspect": {
        "prefix": "workbook.Aspect",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Aspect for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Aspect\n",
            "Object Description:\nAn aspect. Aspects are used when you create a series.\nYou can create an aspect using workbook.createAspect(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nAspect Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Aspect\n"
        ]
    },
    "(N/workbook) Aspect.measure": {
        "prefix": "Aspect.measure",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Aspect.measure for more information.",
        "description": [
            "N/workbook Module",
            "Aspect.measure\n",
            "Property Description:\nThe measure of the aspect.\n",
            "Type:\nworkbook.Measure\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Aspect\n",
            "Sibling Object Members:\nAspect Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Aspect.measure\n"
        ]
    },
    "(N/workbook) Aspect.type": {
        "prefix": "Aspect.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Aspect.type for more information.",
        "description": [
            "N/workbook Module",
            "Aspect.type\n",
            "Property Description:\nThe type of aspect.\n",
            "Type:\nworkbook.AspectType\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Aspect\n",
            "Sibling Object Members:\nAspect Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Aspect.type\n"
        ]
    },
    "(N/workbook) workbook.Category": {
        "prefix": "workbook.Category",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Category for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Category\n",
            "Object Description:\nA category. Categories are used when you create a chart definition.\nYou can create a category using workbook.createCategory(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nCategory Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Category\n"
        ]
    },
    "(N/workbook) Category.axis": {
        "prefix": "Category.axis",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Category.axis for more information.",
        "description": [
            "N/workbook Module",
            "Category.axis\n",
            "Property Description:\nThe axis for the category.\n",
            "Type:\nworkbook.ChartAxis\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Category\n",
            "Sibling Object Members:\nCategory Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Category.axis\n"
        ]
    },
    "(N/workbook) Category.root": {
        "prefix": "Category.root",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Category.root for more information.",
        "description": [
            "N/workbook Module",
            "Category.root\n",
            "Property Description:\nThe root data (i.e., fields) that defines the category.\n",
            "Type:\nworkbook.DataDimension | workbook.Section\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Category\n",
            "Sibling Object Members:\nCategory Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Category.root\n"
        ]
    },
    "(N/workbook) Category.sortDefinitions": {
        "prefix": "Category.sortDefinitions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Category.sortDefinitions for more information.",
        "description": [
            "N/workbook Module",
            "Category.sortDefinitions\n",
            "Property Description:\nThe sort definitions for the category.\n",
            "Type:\nworkbook.SortDefinition[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Category\n",
            "Sibling Object Members:\nCategory Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Category.sortDefinitions\n"
        ]
    },
    "(N/workbook) workbook.ChartAxis": {
        "prefix": "workbook.ChartAxis",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ChartAxis for more information.",
        "description": [
            "N/workbook Module",
            "workbook.ChartAxis\n",
            "Object Description:\nA chart axis. A chart axis is used when you create a category or a legend.\nYou can create a chart axis using workbook.createChartAxis(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nChartAxis Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ChartAxis\n"
        ]
    },
    "(N/workbook) ChartAxis.title": {
        "prefix": "ChartAxis.title",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartAxis.title for more information.",
        "description": [
            "N/workbook Module",
            "ChartAxis.title\n",
            "Property Description:\nThe title of the chart axis.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartAxis\n",
            "Sibling Object Members:\nChartAxis Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartAxis.title\n"
        ]
    },
    "(N/workbook) workbook.ChartDefinition": {
        "prefix": "workbook.ChartDefinition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ChartDefinition for more information.",
        "description": [
            "N/workbook Module",
            "workbook.ChartDefinition\n",
            "Object Description:\nA chart definition. A chart is a workbook component that enables you to visualize your dataset query results using predefined chart and graph types, such as line graphs and bar charts. A chart definition is used when you create a workbook.\nYou can create a chart definition using workbook.createChartDefinition(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ChartDefinition\n"
        ]
    },
    "(N/workbook) ChartDefinition.aggregationFilters": {
        "prefix": "ChartDefinition.aggregationFilters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.aggregationFilters for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.aggregationFilters\n",
            "Property Description:\nThe limiting and conditional filters of the chart definition.\n",
            "Type:\nArray<workbook.LimitingFilter | workbook.ConditionalFilter>\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.aggregationFilters\n"
        ]
    },
    "(N/workbook) ChartDefinition.category": {
        "prefix": "ChartDefinition.category",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.category for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.category\n",
            "Property Description:\nThe category of the chart definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.category\n"
        ]
    },
    "(N/workbook) ChartDefinition.dataset": {
        "prefix": "ChartDefinition.dataset",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.dataset for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.dataset\n",
            "Property Description:\nThe underlying dataset for the chart definition.\n",
            "Type:\ndataset.Dataset\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.dataset\n"
        ]
    },
    "(N/workbook) ChartDefinition.filterExpressions": {
        "prefix": "ChartDefinition.filterExpressions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.filterExpressions for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.filterExpressions\n",
            "Property Description:\nThe filter expressions for the chart definition.\n",
            "Type:\nworkbook.Expression[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.filterExpressions\n"
        ]
    },
    "(N/workbook) ChartDefinition.id": {
        "prefix": "ChartDefinition.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.id for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.id\n",
            "Property Description:\nThe ID of chart definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.id\n"
        ]
    },
    "(N/workbook) ChartDefinition.legend": {
        "prefix": "ChartDefinition.legend",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.legend for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.legend\n",
            "Property Description:\nThe legend of the chart definition.\n",
            "Type:\nworkbook.Legend\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.legend\n"
        ]
    },
    "(N/workbook) ChartDefinition.name": {
        "prefix": "ChartDefinition.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.name for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.name\n",
            "Property Description:\nThe name of the chart definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.name\n"
        ]
    },
    "(N/workbook) ChartDefinition.series": {
        "prefix": "ChartDefinition.series",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.series for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.series\n",
            "Property Description:\nThe series of the chart definition.\n",
            "Type:\nworkbook.Series\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.series\n"
        ]
    },
    "(N/workbook) ChartDefinition.stacking": {
        "prefix": "ChartDefinition.stacking",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.stacking for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.stacking\n",
            "Property Description:\nThe stacking type for the chart definition.\n",
            "Type:\nworkbook.Stacking\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.stacking\n"
        ]
    },
    "(N/workbook) ChartDefinition.subTitle": {
        "prefix": "ChartDefinition.subTitle",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.subTitle for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.subTitle\n",
            "Property Description:\nThe subtitle of the chart definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.subTitle\n"
        ]
    },
    "(N/workbook) ChartDefinition.title": {
        "prefix": "ChartDefinition.title",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.title for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.title\n",
            "Property Description:\nThe title of chart definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.title\n"
        ]
    },
    "(N/workbook) ChartDefinition.type": {
        "prefix": "ChartDefinition.type",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.type for more information.",
        "description": [
            "N/workbook Module",
            "ChartDefinition.type\n",
            "Property Description:\nThe chart type of the chart definition.\n",
            "Type:\nworkbook.ChartType\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ChartDefinition\n",
            "Sibling Object Members:\nChartDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ChartDefinition.type\n"
        ]
    },
    "(N/workbook) workbook.ConditionalFilter": {
        "prefix": "workbook.ConditionalFilter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ConditionalFilter for more information.",
        "description": [
            "N/workbook Module",
            "workbook.ConditionalFilter\n",
            "Object Description:\nA conditional filter. A conditional filter can be used when you create a pivot definition or a chart definition.\nYou can create a conditional filter using workbook.createConditionalFilter(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nConditionalFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ConditionalFilter\n"
        ]
    },
    "(N/workbook) ConditionalFilter.filteredNodesSelector": {
        "prefix": "ConditionalFilter.filteredNodesSelector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.filteredNodesSelector for more information.",
        "description": [
            "N/workbook Module",
            "ConditionalFilter.filteredNodesSelector\n",
            "Property Description:\nThe selected filters in the condition filter.\n",
            "Type:\nworkbook.AllSubNodesSelector | workbook.PathSelector | workbook.DimensionSelector\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ConditionalFilter\n",
            "Sibling Object Members:\nConditionalFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.filteredNodesSelector\n"
        ]
    },
    "(N/workbook) ConditionalFilter.measure": {
        "prefix": "ConditionalFilter.measure",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.measure for more information.",
        "description": [
            "N/workbook Module",
            "ConditionalFilter.measure\n",
            "Property Description:\nThe measure of the conditional filter.\n",
            "Type:\nworkbook.Measure\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ConditionalFilter\n",
            "Sibling Object Members:\nConditionalFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.measure\n"
        ]
    },
    "(N/workbook) ConditionalFilter.otherAxisSelector": {
        "prefix": "ConditionalFilter.otherAxisSelector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.otherAxisSelector for more information.",
        "description": [
            "N/workbook Module",
            "ConditionalFilter.otherAxisSelector\n",
            "Property Description:\nThe selector for the other axis in the conditional filter.\n",
            "Type:\nworkbook.AllSubNodesSelector | workbook.PathSelector | workbook.DimensionSelector\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ConditionalFilter\n",
            "Sibling Object Members:\nConditionalFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.otherAxisSelector\n"
        ]
    },
    "(N/workbook) ConditionalFilter.predicate": {
        "prefix": "ConditionalFilter.predicate",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.predicate for more information.",
        "description": [
            "N/workbook Module",
            "ConditionalFilter.predicate\n",
            "Property Description:\nThe actual predicate for the conditional filter, which indicates whether the condition is met.\n",
            "Type:\nworkbook.Expression\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ConditionalFilter\n",
            "Sibling Object Members:\nConditionalFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.predicate\n"
        ]
    },
    "(N/workbook) ConditionalFilter.row": {
        "prefix": "ConditionalFilter.row",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.row for more information.",
        "description": [
            "N/workbook Module",
            "ConditionalFilter.row\n",
            "Property Description:\nThe row axis indicator for the conditional filter.\n",
            "Type:\nboolean\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.ConditionalFilter\n",
            "Sibling Object Members:\nConditionalFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=ConditionalFilter.row\n"
        ]
    },
    "(N/workbook) workbook.DataDimension": {
        "prefix": "workbook.DataDimension",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DataDimension for more information.",
        "description": [
            "N/workbook Module",
            "workbook.DataDimension\n",
            "Object Description:\nA data dimension. A data dimension can be used when you create a category, a legend, a pivot axis, a dimension selector, or a section.\nYou can create a data dimension using workbook.createDataDimension(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nDataDimension Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DataDimension\n"
        ]
    },
    "(N/workbook) DataDimension.children": {
        "prefix": "DataDimension.children",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DataDimension.children for more information.",
        "description": [
            "N/workbook Module",
            "DataDimension.children\n",
            "Property Description:\nThe children of the data dimension.\n",
            "Type:\nArray<workbook.DataDimension | workbook.Section | workbook.Measure>\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DataDimension\n",
            "Sibling Object Members:\nDataDimension Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DataDimension.children\n"
        ]
    },
    "(N/workbook) DataDimension.items": {
        "prefix": "DataDimension.items",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DataDimension.items for more information.",
        "description": [
            "N/workbook Module",
            "DataDimension.items\n",
            "Property Description:\nThe items of the data dimension.\n",
            "Type:\nworkbook.DataDimensionItem[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DataDimension\n",
            "Sibling Object Members:\nDataDimension Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DataDimension.items\n"
        ]
    },
    "(N/workbook) DataDimension.totalLine": {
        "prefix": "DataDimension.totalLine",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DataDimension.totalLine for more information.",
        "description": [
            "N/workbook Module",
            "DataDimension.totalLine\n",
            "Property Description:\nThe formatting specification for the total line of the data dimension.\n",
            "Type:\nworkbook.TotalLine\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DataDimension\n",
            "Sibling Object Members:\nDataDimension Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DataDimension.totalLine\n"
        ]
    },
    "(N/workbook) workbook.DataDimensionItem": {
        "prefix": "workbook.DataDimensionItem",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DataDimensionItem for more information.",
        "description": [
            "N/workbook Module",
            "workbook.DataDimensionItem\n",
            "Object Description:\nA data dimension item. A data dimension item is used when you create a data dimension or a dimension sort.\nYou can create a data dimension item using workbook.createDataDimensionItem(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nDataDimensionItem Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DataDimensionItem\n"
        ]
    },
    "(N/workbook) DataDimensionItem.expression": {
        "prefix": "DataDimensionItem.expression",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DataDimensionItem.expression for more information.",
        "description": [
            "N/workbook Module",
            "DataDimensionItem.expression\n",
            "Property Description:\nThe expression for data dimension item.\n",
            "Type:\nworkbook.Expression\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DataDimensionItem\n",
            "Sibling Object Members:\nDataDimensionItem Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DataDimensionItem.expression\n"
        ]
    },
    "(N/workbook) DataDimensionItem.label": {
        "prefix": "DataDimensionItem.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DataDimensionItem.label for more information.",
        "description": [
            "N/workbook Module",
            "DataDimensionItem.label\n",
            "Property Description:\nThe label for the data dimension item.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DataDimensionItem\n",
            "Sibling Object Members:\nDataDimensionItem Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DataDimensionItem.label\n"
        ]
    },
    "(N/workbook) workbook.DimensionSelector": {
        "prefix": "workbook.DimensionSelector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DimensionSelector for more information.",
        "description": [
            "N/workbook Module",
            "workbook.DimensionSelector\n",
            "Object Description:\nA dimension selector. A dimension selector is used when you create a path selector, a sort definition, a conditional filter, a limiting filter or a measure sort.\nYou can create a dimension selector using workbook.createDimensionSelector(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nDimensionSelector Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DimensionSelector\n"
        ]
    },
    "(N/workbook) DimensionSelector.dimension": {
        "prefix": "DimensionSelector.dimension",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DimensionSelector.dimension for more information.",
        "description": [
            "N/workbook Module",
            "DimensionSelector.dimension\n",
            "Property Description:\nThe dimension of the dimension selector.\n",
            "Type:\nworkbook.DataDimension | workbook.Section\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DimensionSelector\n",
            "Sibling Object Members:\nDimensionSelector Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DimensionSelector.dimension\n"
        ]
    },
    "(N/workbook) workbook.DimensionSort": {
        "prefix": "workbook.DimensionSort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DimensionSort for more information.",
        "description": [
            "N/workbook Module",
            "workbook.DimensionSort\n",
            "Object Description:\nA dimension sort. A dimension sort can be used when you create a sort definition or a limiting filter.\nYou can create a dimension sort using workbook.createDimensionSort(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nDimensionSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DimensionSort\n"
        ]
    },
    "(N/workbook) DimensionSort.item": {
        "prefix": "DimensionSort.item",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DimensionSort.item for more information.",
        "description": [
            "N/workbook Module",
            "DimensionSort.item\n",
            "Property Description:\nThe data dimension item for the dimension sort.\n",
            "Type:\nworkbook.DataDimensionItem\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DimensionSort\n",
            "Sibling Object Members:\nDimensionSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DimensionSort.item\n"
        ]
    },
    "(N/workbook) DimensionSort.sort": {
        "prefix": "DimensionSort.sort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=DimensionSort.sort for more information.",
        "description": [
            "N/workbook Module",
            "DimensionSort.sort\n",
            "Property Description:\nThe sort object for the dimension sort.\n",
            "Type:\nworkbook.Sort\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.DimensionSort\n",
            "Sibling Object Members:\nDimensionSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=DimensionSort.sort\n"
        ]
    },
    "(N/workbook) workbook.Expression": {
        "prefix": "workbook.Expression",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Expression for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Expression\n",
            "Object Description:\nAn expression. An expression can be used when you create a pivot definition, a chart definition, a data dimension item, a measure, a conditional filter, or a constant.\nYou can create an expression using workbook.createExpression(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nExpression Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Expression\n"
        ]
    },
    "(N/workbook) Expression.functionId": {
        "prefix": "Expression.functionId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Expression.functionId for more information.",
        "description": [
            "N/workbook Module",
            "Expression.functionId\n",
            "Property Description:\nThe ID of the function used in the expression.\n",
            "Type:\nworkbook.ExpressionType\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Expression\n",
            "Sibling Object Members:\nExpression Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Expression.functionId\n"
        ]
    },
    "(N/workbook) Expression.parameters": {
        "prefix": "Expression.parameters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Expression.parameters for more information.",
        "description": [
            "N/workbook Module",
            "Expression.parameters\n",
            "Property Description:\nThe parameters for the expression.\n",
            "Type:\nObject\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Expression\n",
            "Sibling Object Members:\nExpression Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Expression.parameters\n"
        ]
    },
    "(N/workbook) workbook.FieldContext": {
        "prefix": "workbook.FieldContext",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.FieldContext for more information.",
        "description": [
            "N/workbook Module",
            "workbook.FieldContext\n",
            "Object Description:\nA field context. A field context is used when you create a table column.\nYou can create a field context using workbook.createFieldContext(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nFieldContext Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.FieldContext\n"
        ]
    },
    "(N/workbook) FieldContext.name": {
        "prefix": "FieldContext.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=FieldContext.name for more information.",
        "description": [
            "N/workbook Module",
            "FieldContext.name\n",
            "Property Description:\nThe name of the field context (for example, DISPLAY or CONSOLIDATED)\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.FieldContext\n",
            "Sibling Object Members:\nFieldContext Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=FieldContext.name\n"
        ]
    },
    "(N/workbook) FieldContext.parameters": {
        "prefix": "FieldContext.parameters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=FieldContext.parameters for more information.",
        "description": [
            "N/workbook Module",
            "FieldContext.parameters\n",
            "Property Description:\nThe user-specified parameters of the field context, specified as key:value pairs.\n",
            "Type:\nObject\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.FieldContext\n",
            "Sibling Object Members:\nFieldContext Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=FieldContext.parameters\n"
        ]
    },
    "(N/workbook) workbook.Legend": {
        "prefix": "workbook.Legend",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Legend for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Legend\n",
            "Object Description:\nA legend. A legend can be used when you create a chart definition.\nYou can create a legend using workbook.createLegend(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nLegend Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Legend\n"
        ]
    },
    "(N/workbook) Legend.axes": {
        "prefix": "Legend.axes",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Legend.axes for more information.",
        "description": [
            "N/workbook Module",
            "Legend.axes\n",
            "Property Description:\nThe axes for the legend.\n",
            "Type:\nworkbook.ChartAxis[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Legend\n",
            "Sibling Object Members:\nLegend Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Legend.axes\n"
        ]
    },
    "(N/workbook) Legend.root": {
        "prefix": "Legend.root",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Legend.root for more information.",
        "description": [
            "N/workbook Module",
            "Legend.root\n",
            "Property Description:\nThe root data (i.e., fields) that defines the legend.\n",
            "Type:\nworkbook.DataDimension | workbook.Section\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Legend\n",
            "Sibling Object Members:\nLegend Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Legend.root\n"
        ]
    },
    "(N/workbook) Legend.sortDefinitions": {
        "prefix": "Legend.sortDefinitions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Legend.sortDefinitions for more information.",
        "description": [
            "N/workbook Module",
            "Legend.sortDefinitions\n",
            "Property Description:\nThe sort definitions of the legend.\n",
            "Type:\nworkbook.SortDefinition[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Legend\n",
            "Sibling Object Members:\nLegend Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Legend.sortDefinitions\n"
        ]
    },
    "(N/workbook) workbook.LimitingFilter": {
        "prefix": "workbook.LimitingFilter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.LimitingFilter for more information.",
        "description": [
            "N/workbook Module",
            "workbook.LimitingFilter\n",
            "Object Description:\nA limiting filter. A limiting factor can be used when you create a chart definition or a pivot definition.\nYou can create a limiting filter using workbook.createLimitingFilter(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nLimitingFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.LimitingFilter\n"
        ]
    },
    "(N/workbook) LimitingFilter.filteredNodesSelector": {
        "prefix": "LimitingFilter.filteredNodesSelector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.filteredNodesSelector for more information.",
        "description": [
            "N/workbook Module",
            "LimitingFilter.filteredNodesSelector\n",
            "Property Description:\nThe selections for the limiting filter.\n",
            "Type:\nworkbook.AllSubNodesSelector | workbook.PathSelector | workbook.DimensionSelector\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.LimitingFilter\n",
            "Sibling Object Members:\nLimitingFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.filteredNodesSelector\n"
        ]
    },
    "(N/workbook) LimitingFilter.limit": {
        "prefix": "LimitingFilter.limit",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.limit for more information.",
        "description": [
            "N/workbook Module",
            "LimitingFilter.limit\n",
            "Property Description:\nThe limit number for the limiting filter.\n",
            "Type:\nnumber\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.LimitingFilter\n",
            "Sibling Object Members:\nLimitingFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.limit\n"
        ]
    },
    "(N/workbook) LimitingFilter.row": {
        "prefix": "LimitingFilter.row",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.row for more information.",
        "description": [
            "N/workbook Module",
            "LimitingFilter.row\n",
            "Property Description:\nThe row axis indicator for the limiting factor.\n",
            "Type:\nboolean\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.LimitingFilter\n",
            "Sibling Object Members:\nLimitingFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.row\n"
        ]
    },
    "(N/workbook) LimitingFilter.sortBys": {
        "prefix": "LimitingFilter.sortBys",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.sortBys for more information.",
        "description": [
            "N/workbook Module",
            "LimitingFilter.sortBys\n",
            "Property Description:\nThe ordering elements of the limiting filter.\n",
            "Type:\nArray<workbook.DimensionSort | workbook.MeasureSort>\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.LimitingFilter\n",
            "Sibling Object Members:\nLimitingFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=LimitingFilter.sortBys\n"
        ]
    },
    "(N/workbook) workbook.Measure": {
        "prefix": "workbook.Measure",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Measure for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Measure\n",
            "Object Description:\nA measure. A measure can be used when you create an aspect, a section, a conditional filter, or a measure sort.\nYou can create a measure using workbook.createMeasure(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nMeasure Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Measure\n"
        ]
    },
    "(N/workbook) Measure.aggregation": {
        "prefix": "Measure.aggregation",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Measure.aggregation for more information.",
        "description": [
            "N/workbook Module",
            "Measure.aggregation\n",
            "Property Description:\nThe aggregation for the measure.\n",
            "Type:\nworkbook.Aggregation\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Measure\n",
            "Sibling Object Members:\nMeasure Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Measure.aggregation\n"
        ]
    },
    "(N/workbook) Measure.expression": {
        "prefix": "Measure.expression",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Measure.expression for more information.",
        "description": [
            "N/workbook Module",
            "Measure.expression\n",
            "Property Description:\nThe expression for the measure. Only used for a single expression measure.\n",
            "Type:\nworkbook.Expression\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Measure\n",
            "Sibling Object Members:\nMeasure Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Measure.expression\n"
        ]
    },
    "(N/workbook) Measure.expressions": {
        "prefix": "Measure.expressions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Measure.expressions for more information.",
        "description": [
            "N/workbook Module",
            "Measure.expressions\n",
            "Property Description:\nThe expressions (multiple) for the measure. Only used for a multi expression measure.\n",
            "Type:\nworkbook.Expression[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Measure\n",
            "Sibling Object Members:\nMeasure Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Measure.expressions\n"
        ]
    },
    "(N/workbook) Measure.label": {
        "prefix": "Measure.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Measure.label for more information.",
        "description": [
            "N/workbook Module",
            "Measure.label\n",
            "Property Description:\nThe label of the measure.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Measure\n",
            "Sibling Object Members:\nMeasure Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Measure.label\n"
        ]
    },
    "(N/workbook) workbook.MeasureSort": {
        "prefix": "workbook.MeasureSort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.MeasureSort for more information.",
        "description": [
            "N/workbook Module",
            "workbook.MeasureSort\n",
            "Object Description:\nA measure sort. A measure sort can be used when you create a limiting filter or a sort definition.\nYou can create a measure sort using workbook.createMeasureSort(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nMeasureSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.MeasureSort\n"
        ]
    },
    "(N/workbook) MeasureSort.measure": {
        "prefix": "MeasureSort.measure",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MeasureSort.measure for more information.",
        "description": [
            "N/workbook Module",
            "MeasureSort.measure\n",
            "Property Description:\nThe sort of the measure sort.\n",
            "Type:\nworkbook.Measure\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.MeasureSort\n",
            "Sibling Object Members:\nMeasureSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MeasureSort.measure\n"
        ]
    },
    "(N/workbook) MeasureSort.otherAxisSelector": {
        "prefix": "MeasureSort.otherAxisSelector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MeasureSort.otherAxisSelector for more information.",
        "description": [
            "N/workbook Module",
            "MeasureSort.otherAxisSelector\n",
            "Property Description:\nThe other axis selector for the measure sort.\n",
            "Type:\nworkbook.AllSubNodesSelector | workbook.PathSelector | workbook.DimensionSelector\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.MeasureSort\n",
            "Sibling Object Members:\nMeasureSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MeasureSort.otherAxisSelector\n"
        ]
    },
    "(N/workbook) MeasureSort.sort": {
        "prefix": "MeasureSort.sort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=MeasureSort.sort for more information.",
        "description": [
            "N/workbook Module",
            "MeasureSort.sort\n",
            "Property Description:\nThe sort for the measure sort.\n",
            "Type:\nworkbook.Sort\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.MeasureSort\n",
            "Sibling Object Members:\nMeasureSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=MeasureSort.sort\n"
        ]
    },
    "(N/workbook) workbook.PathSelector": {
        "prefix": "workbook.PathSelector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.PathSelector for more information.",
        "description": [
            "N/workbook Module",
            "workbook.PathSelector\n",
            "Object Description:\nA path selector. A path selector can be used when you create a sort definition, a conditional filter, a limiting filter, or a measure sort.\nYou can create a path selector using workbook.createPathSelector(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nPathSelector Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.PathSelector\n"
        ]
    },
    "(N/workbook) PathSelector.elements": {
        "prefix": "PathSelector.elements",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PathSelector.elements for more information.",
        "description": [
            "N/workbook Module",
            "PathSelector.elements\n",
            "Property Description:\nThe elements denoting 'xpath' of the path selector.\n",
            "Type:\nworkbook.AllSubNodesSelector | workbook.DimensionSelector\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PathSelector\n",
            "Sibling Object Members:\nPathSelector Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PathSelector.elements\n"
        ]
    },
    "(N/workbook) workbook.PivotAxis": {
        "prefix": "workbook.PivotAxis",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.PivotAxis for more information.",
        "description": [
            "N/workbook Module",
            "workbook.PivotAxis\n",
            "Object Description:\nA pivot axis. A pivot axis is used with you create a pivot definition.\nYou can create a pivot axis using workbook.createPivotAxis(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nPivotAxis Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.PivotAxis\n"
        ]
    },
    "(N/workbook) PivotAxis.root": {
        "prefix": "PivotAxis.root",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotAxis.root for more information.",
        "description": [
            "N/workbook Module",
            "PivotAxis.root\n",
            "Property Description:\nThe root data for the pivot axis.\n",
            "Type:\nworkbook.DataDimension | workbook.Section\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotAxis\n",
            "Sibling Object Members:\nPivotAxis Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotAxis.root\n"
        ]
    },
    "(N/workbook) PivotAxis.sortDefinitions": {
        "prefix": "PivotAxis.sortDefinitions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotAxis.sortDefinitions for more information.",
        "description": [
            "N/workbook Module",
            "PivotAxis.sortDefinitions\n",
            "Property Description:\nThe sort definitions of the pivot axis.\n",
            "Type:\nworkbook.SortDefinition[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotAxis\n",
            "Sibling Object Members:\nPivotAxis Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotAxis.sortDefinitions\n"
        ]
    },
    "(N/workbook) workbook.PivotDefinition": {
        "prefix": "workbook.PivotDefinition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.PivotDefinition for more information.",
        "description": [
            "N/workbook Module",
            "workbook.PivotDefinition\n",
            "Object Description:\nA pivot definition. A pivot is a workbook component that enables you to pivot your dataset query results by defining measures and dimensions, so that you can analyze different subsets of data.\nYou can create a pivot definition using workbook.createPivotDefinition(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.PivotDefinition\n"
        ]
    },
    "(N/workbook) PivotDefinition.aggregationFilters": {
        "prefix": "PivotDefinition.aggregationFilters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.aggregationFilters for more information.",
        "description": [
            "N/workbook Module",
            "PivotDefinition.aggregationFilters\n",
            "Property Description:\nThe limiting and conditional filters of the pivot definition.\n",
            "Type:\nArray<workbook.LimitingFilter | workbook.ConditionalFilter>\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotDefinition\n",
            "Sibling Object Members:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.aggregationFilters\n"
        ]
    },
    "(N/workbook) PivotDefinition.columnAxis": {
        "prefix": "PivotDefinition.columnAxis",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.columnAxis for more information.",
        "description": [
            "N/workbook Module",
            "PivotDefinition.columnAxis\n",
            "Property Description:\nThe column axis of the pivot definition.\n",
            "Type:\nworkbook.PivotAxis\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotDefinition\n",
            "Sibling Object Members:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.columnAxis\n"
        ]
    },
    "(N/workbook) PivotDefinition.dataset": {
        "prefix": "PivotDefinition.dataset",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.dataset for more information.",
        "description": [
            "N/workbook Module",
            "PivotDefinition.dataset\n",
            "Property Description:\nThe underlying dataset of the pivot definition.\n",
            "Type:\ndataset.Dataset\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotDefinition\n",
            "Sibling Object Members:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.dataset\n"
        ]
    },
    "(N/workbook) PivotDefinition.filterExpressions": {
        "prefix": "PivotDefinition.filterExpressions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.filterExpressions for more information.",
        "description": [
            "N/workbook Module",
            "PivotDefinition.filterExpressions\n",
            "Property Description:\nThe filter expressions of the pivot definition.\n",
            "Type:\nworkbook.Expression[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotDefinition\n",
            "Sibling Object Members:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.filterExpressions\n"
        ]
    },
    "(N/workbook) PivotDefinition.id": {
        "prefix": "PivotDefinition.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.id for more information.",
        "description": [
            "N/workbook Module",
            "PivotDefinition.id\n",
            "Property Description:\nThe ID of the pivot definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotDefinition\n",
            "Sibling Object Members:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.id\n"
        ]
    },
    "(N/workbook) PivotDefinition.name": {
        "prefix": "PivotDefinition.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.name for more information.",
        "description": [
            "N/workbook Module",
            "PivotDefinition.name\n",
            "Property Description:\nThe name of pivot definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotDefinition\n",
            "Sibling Object Members:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.name\n"
        ]
    },
    "(N/workbook) PivotDefinition.rowAxis": {
        "prefix": "PivotDefinition.rowAxis",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.rowAxis for more information.",
        "description": [
            "N/workbook Module",
            "PivotDefinition.rowAxis\n",
            "Property Description:\nThe row axis of the pivot definition.\n",
            "Type:\nworkbook.PivotAxis\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.PivotDefinition\n",
            "Sibling Object Members:\nPivotDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=PivotDefinition.rowAxis\n"
        ]
    },
    "(N/workbook) workbook.Section": {
        "prefix": "workbook.Section",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Section for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Section\n",
            "Object Description:\nA section. A section can be used when you create a category, a legend, a data dimension, a dimension selector, a pivot axis, or a pivot definition.\nYou can create a section using workbook.createSection(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nSection Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Section\n"
        ]
    },
    "(N/workbook) Section.children": {
        "prefix": "Section.children",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Section.children for more information.",
        "description": [
            "N/workbook Module",
            "Section.children\n",
            "Property Description:\nThe children of the section.\n",
            "Type:\nArray<workbook.DataDimension | workbook.Measure | workbook.Section>\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Section\n",
            "Sibling Object Members:\nSection Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Section.children\n"
        ]
    },
    "(N/workbook) Section.totalLine": {
        "prefix": "Section.totalLine",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Section.totalLine for more information.",
        "description": [
            "N/workbook Module",
            "Section.totalLine\n",
            "Property Description:\nThe format for the total line on a section.\n",
            "Type:\nworkbook.TotalLine\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Section\n",
            "Sibling Object Members:\nSection Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Section.totalLine\n"
        ]
    },
    "(N/workbook) workbook.Series": {
        "prefix": "workbook.Series",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Series for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Series\n",
            "Object Description:\nA series in a workbook. A series is used when you create a chart definition.\nYou can create a series using workbook.createSeries(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nSeries Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Series\n"
        ]
    },
    "(N/workbook) Series.aspects": {
        "prefix": "Series.aspects",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Series.aspects for more information.",
        "description": [
            "N/workbook Module",
            "Series.aspects\n",
            "Property Description:\nThe aspects for the series.\n",
            "Type:\nworkbook.Aspect[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Series\n",
            "Sibling Object Members:\nSeries Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Series.aspects\n"
        ]
    },
    "(N/workbook) workbook.Sort": {
        "prefix": "workbook.Sort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Sort for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Sort\n",
            "Object Description:\nA sort. A sort is used when you create a table column, a dimension sort, or a measure sort.\nYou can create a sort using workbook.createSort(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Sort\n"
        ]
    },
    "(N/workbook) Sort.ascending": {
        "prefix": "Sort.ascending",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.ascending for more information.",
        "description": [
            "N/workbook Module",
            "Sort.ascending\n",
            "Property Description:\nThe ascending sort indicator of the sort.\n",
            "Type:\nboolean\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.ascending\n"
        ]
    },
    "(N/workbook) Sort.caseSensitive": {
        "prefix": "Sort.caseSensitive",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.caseSensitive for more information.",
        "description": [
            "N/workbook Module",
            "Sort.caseSensitive\n",
            "Property Description:\nThe indicator that determines if the sort is case sensitive.\n",
            "Type:\nboolean\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.caseSensitive\n"
        ]
    },
    "(N/workbook) Sort.locale": {
        "prefix": "Sort.locale",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.locale for more information.",
        "description": [
            "N/workbook Module",
            "Sort.locale\n",
            "Property Description:\nThe locale of the sort.\n",
            "Type:\nquery.Operator (read-only)\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.locale\n"
        ]
    },
    "(N/workbook) Sort.nullsLast": {
        "prefix": "Sort.nullsLast",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Sort.nullsLast for more information.",
        "description": [
            "N/workbook Module",
            "Sort.nullsLast\n",
            "Property Description:\nThe indicator for placing nulls last of the sort.\n",
            "Type:\nboolean\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Sort\n",
            "Sibling Object Members:\nSort Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Sort.nullsLast\n"
        ]
    },
    "(N/workbook) workbook.SortDefinition": {
        "prefix": "workbook.SortDefinition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.SortDefinition for more information.",
        "description": [
            "N/workbook Module",
            "workbook.SortDefinition\n",
            "Object Description:\nA sort definition. A sort definition can be used with you create a category, a legend, and a pivot axis.\nYou can create a sort definition using workbook.createSortDefinition(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nSortDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.SortDefinition\n"
        ]
    },
    "(N/workbook) SortDefinition.selector": {
        "prefix": "SortDefinition.selector",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SortDefinition.selector for more information.",
        "description": [
            "N/workbook Module",
            "SortDefinition.selector\n",
            "Property Description:\nThe selector for the sort definition.\n",
            "Type:\nworkbook.AllSubNodesSelector | workbook.DimensionSelector | workbook.PathSelector\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.SortDefinition\n",
            "Sibling Object Members:\nSortDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SortDefinition.selector\n"
        ]
    },
    "(N/workbook) SortDefinition.sortBys": {
        "prefix": "SortDefinition.sortBys",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=SortDefinition.sortBys for more information.",
        "description": [
            "N/workbook Module",
            "SortDefinition.sortBys\n",
            "Property Description:\nThe ordering elements for the sort definition.\n",
            "Type:\nArray<workbook.DimensionSort | workbook.MeasureSort>\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.SortDefinition\n",
            "Sibling Object Members:\nSortDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=SortDefinition.sortBys\n"
        ]
    },
    "(N/workbook) workbook.TableColumn": {
        "prefix": "workbook.TableColumn",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.TableColumn for more information.",
        "description": [
            "N/workbook Module",
            "workbook.TableColumn\n",
            "Object Description:\nA table column. A table column is used when you create a table definition.\nYou can create a table column using workbook.createTableColumn(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.TableColumn\n"
        ]
    },
    "(N/workbook) TableColumn.alias": {
        "prefix": "TableColumn.alias",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.alias for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.alias\n",
            "Property Description:\nThe alias for the column.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.alias\n"
        ]
    },
    "(N/workbook) TableColumn.datasetColumnAlias": {
        "prefix": "TableColumn.datasetColumnAlias",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.datasetColumnAlias for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.datasetColumnAlias\n",
            "Property Description:\nThe alias of the dataset column from which the table column was created.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.datasetColumnAlias\n"
        ]
    },
    "(N/workbook) TableColumn.datasetColumnId": {
        "prefix": "TableColumn.datasetColumnId",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.datasetColumnId for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.datasetColumnId\n",
            "Property Description:\nThe ID of the dataset column from which the table column was created.\n",
            "Type:\nnumber\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.datasetColumnId\n"
        ]
    },
    "(N/workbook) TableColumn.fieldContext": {
        "prefix": "TableColumn.fieldContext",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.fieldContext for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.fieldContext\n",
            "Property Description:\nThe field context specification for the field used in the table column.\n",
            "Type:\nworkbook.FieldContext\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.fieldContext\n"
        ]
    },
    "(N/workbook) TableColumn.filters": {
        "prefix": "TableColumn.filters",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.filters for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.filters\n",
            "Property Description:\nThe filters for the table column.\n",
            "Type:\nworkbook.TableFilter[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.filters\n"
        ]
    },
    "(N/workbook) TableColumn.label": {
        "prefix": "TableColumn.label",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.label for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.label\n",
            "Property Description:\nThe label of table column.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.label\n"
        ]
    },
    "(N/workbook) TableColumn.sort": {
        "prefix": "TableColumn.sort",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.sort for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.sort\n",
            "Property Description:\nThe sort of the table column.\n",
            "Type:\nworkbook.Sort\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.sort\n"
        ]
    },
    "(N/workbook) TableColumn.width": {
        "prefix": "TableColumn.width",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.width for more information.",
        "description": [
            "N/workbook Module",
            "TableColumn.width\n",
            "Property Description:\nThe width of the table column when displayed in the UI.\n",
            "Type:\nnumber\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableColumn\n",
            "Sibling Object Members:\nTableColumn Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableColumn.width\n"
        ]
    },
    "(N/workbook) workbook.TableDefinition": {
        "prefix": "workbook.TableDefinition",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.TableDefinition for more information.",
        "description": [
            "N/workbook Module",
            "workbook.TableDefinition\n",
            "Object Description:\nA table definition. A table is a workbook component that enables you to view your dataset query results in a simple table.\nYou can create a table definition using workbook.createTableDefinition(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nTableDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.TableDefinition\n"
        ]
    },
    "(N/workbook) TableDefinition.columns": {
        "prefix": "TableDefinition.columns",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.columns for more information.",
        "description": [
            "N/workbook Module",
            "TableDefinition.columns\n",
            "Property Description:\nThe columns of the table definition.\n",
            "Type:\nworkbook.TableColumn[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableDefinition\n",
            "Sibling Object Members:\nTableDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.columns\n"
        ]
    },
    "(N/workbook) TableDefinition.dataset": {
        "prefix": "TableDefinition.dataset",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.dataset for more information.",
        "description": [
            "N/workbook Module",
            "TableDefinition.dataset\n",
            "Property Description:\nThe dataset of the table definition.\n",
            "Type:\ndataset.Dataset\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableDefinition\n",
            "Sibling Object Members:\nTableDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.dataset\n"
        ]
    },
    "(N/workbook) TableDefinition.id": {
        "prefix": "TableDefinition.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.id for more information.",
        "description": [
            "N/workbook Module",
            "TableDefinition.id\n",
            "Property Description:\nThe ID of the table definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableDefinition\n",
            "Sibling Object Members:\nTableDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.id\n"
        ]
    },
    "(N/workbook) TableDefinition.name": {
        "prefix": "TableDefinition.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.name for more information.",
        "description": [
            "N/workbook Module",
            "TableDefinition.name\n",
            "Property Description:\nThe name of the table definition.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableDefinition\n",
            "Sibling Object Members:\nTableDefinition Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableDefinition.name\n"
        ]
    },
    "(N/workbook) workbook.TableFilter": {
        "prefix": "workbook.TableFilter",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.TableFilter for more information.",
        "description": [
            "N/workbook Module",
            "workbook.TableFilter\n",
            "Object Description:\nA table filter. A table filter can be used when you create a table column.\nYou can create a table filter using workbook.createTableFilter(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nTableFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.TableFilter\n"
        ]
    },
    "(N/workbook) TableFilter.operator": {
        "prefix": "TableFilter.operator",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableFilter.operator for more information.",
        "description": [
            "N/workbook Module",
            "TableFilter.operator\n",
            "Property Description:\nThe operator of the table filter.\n",
            "Type:\nquery.Operator\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableFilter\n",
            "Sibling Object Members:\nTableFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableFilter.operator\n"
        ]
    },
    "(N/workbook) TableFilter.values": {
        "prefix": "TableFilter.values",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=TableFilter.values for more information.",
        "description": [
            "N/workbook Module",
            "TableFilter.values\n",
            "Property Description:\nThe values of the table filter.\n",
            "Type:\nArray<null | Object | boolean | number | string | Date>\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.TableFilter\n",
            "Sibling Object Members:\nTableFilter Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=TableFilter.values\n"
        ]
    },
    "(N/workbook) workbook.Workbook": {
        "prefix": "workbook.Workbook",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Workbook for more information.",
        "description": [
            "N/workbook Module",
            "workbook.Workbook\n",
            "Object Description:\nA workbook. Workbooks are where you analyze the results of your dataset queries using different components, such as table views, pivot tables, and charts. All workbooks are based on a dataset, and a single dataset can be used as the basis for multiple workbooks. A workbook can include tables, pivots, and charts. A workbook is created using workbook.create(options).\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/workbook Module\n",
            "Methods and Properties:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Workbook\n"
        ]
    },
    "(N/workbook) Workbook.runTable(options)": {
        "prefix": "Workbook.runTable(options)",
        "body": [
            "${1:Workbook}.runTable({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "Workbook.runTable()\n",
            "Method Description:\nExecutes the table and returns the result set (the same as in N/query Module).\n",
            "Returns:\nquery.ResultSet\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.runTable(options)\n"
        ]
    },
    "(N/workbook) Workbook.runTablePaged(options)": {
        "prefix": "Workbook.runTablePaged(options)",
        "body": [
            "${1:Workbook}.runTablePaged({",
            "\tid: ${2:string*},",
            "\tpageSize: ${3:number}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "Workbook.runTablePaged()\n",
            "Method Description:\nExecutes the table and returns paginated data (the same as in N/query Module).\n",
            "Returns:\nquery.PagedData\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.runTablePaged(options)\n"
        ]
    },
    "(N/workbook) Workbook.chartDefinitions": {
        "prefix": "Workbook.chartDefinitions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.chartDefinitions for more information.",
        "description": [
            "N/workbook Module",
            "Workbook.chartDefinitions\n",
            "Property Description:\nChart definitions that can be included in a workbook when you create a new workbook.\n",
            "Type:\nworkbook.ChartDefinition[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.chartDefinitions\n"
        ]
    },
    "(N/workbook) Workbook.description": {
        "prefix": "Workbook.description",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.description for more information.",
        "description": [
            "N/workbook Module",
            "Workbook.description\n",
            "Property Description:\nThe description of the workbook. This is set when you create a workbook.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.description\n"
        ]
    },
    "(N/workbook) Workbook.id": {
        "prefix": "Workbook.id",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.id for more information.",
        "description": [
            "N/workbook Module",
            "Workbook.id\n",
            "Property Description:\nThe ID of the workbook, that is set when you create a workbook.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.id\n"
        ]
    },
    "(N/workbook) Workbook.name": {
        "prefix": "Workbook.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.name for more information.",
        "description": [
            "N/workbook Module",
            "Workbook.name\n",
            "Property Description:\nThe name of the workbook.\n",
            "Type:\nstring\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.name\n"
        ]
    },
    "(N/workbook) Workbook.pivotDefinitions": {
        "prefix": "Workbook.pivotDefinitions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.pivotDefinitions for more information.",
        "description": [
            "N/workbook Module",
            "Workbook.pivotDefinitions\n",
            "Property Description:\nPivot definitions that can be included in a workbook when you create a new workbook.\n",
            "Type:\nworkbook.PivotDefinition[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.pivotDefinitions\n"
        ]
    },
    "(N/workbook) Workbook.tableDefinitions": {
        "prefix": "Workbook.tableDefinitions",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.tableDefinitions for more information.",
        "description": [
            "N/workbook Module",
            "Workbook.tableDefinitions\n",
            "Property Description:\nTable definitions that can be included in a workbook when you create a new workbook.\n",
            "Type:\nworkbook.TableDefinition[]\n",
            "Module:\nN/workbook Module\n",
            "Parent Object:\nworkbook.Workbook\n",
            "Sibling Object Members:\nWorkbook Object Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Workbook.tableDefinitions\n"
        ]
    },
    "(N/workbook) workbook.create(options)": {
        "prefix": "workbook.create(options)",
        "body": [
            "${1:workbook}.create({",
            "\tchartDefinitions: ${2:workbook.ChartDefinition[]},",
            "\tdescription: ${3:string},",
            "\tname: ${4:string},",
            "\tpivotDefinitions: ${5:workbook.PivotDefinition[]},",
            "\ttableDefinitions: ${6:workbook.TableDefinition[]}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.create()\n",
            "Method Description:\nCreates a new workbook. Workbooks are where you analyze the results of your dataset queries using different components, such as table views, pivot tables, and charts. All workbooks are based on a dataset, and a single dataset can be used as the basis for multiple workbooks. A workbook can include an ID, a name, a description, pivot definitions, chart definitions, and table definitions.\n",
            "Returns:\nworkbook.Workbook\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.create(options)\n"
        ]
    },
    "(N/workbook) workbook.createAllSubNodesSelector()": {
        "prefix": "workbook.createAllSubNodesSelector()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createAllSubNodesSelector() for more information.",
        "description": [
            "N/workbook Module",
            "workbook.createAllSubNodesSelector()\n",
            "Method Description:\nCreates an AllSubNodesSelector, which can be used when creating a path selector, a sort definition, a conditional filter, a limiting filter, or a measure sort.\n",
            "Returns:\nworkbook.AllSubNodesSelector\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createAllSubNodesSelector()\n"
        ]
    },
    "(N/workbook) workbook.createAspect(options)": {
        "prefix": "workbook.createAspect(options)",
        "body": [
            "${1:workbook}.createAspect({",
            "\tmeasure: ${2:workbook.Measure*},",
            "\ttype: ${3:workbook.AspectType}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createAspect()\n",
            "Method Description:\nCreates an aspect for a chart series. An aspect includes a measure and an aspect type.\n",
            "Returns:\nworkbook.Aspect\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createAspect(options)\n"
        ]
    },
    "(N/workbook) workbook.createCategory(options)": {
        "prefix": "workbook.createCategory(options)",
        "body": [
            "${1:workbook}.createCategory({",
            "\taxis: ${2:workbook.ChartAxis*},",
            "\troot: ${3:workbook.DataDimension |workbook.Section*},",
            "\tsortDefinitions: ${4:workbook.SortDefinition[]}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createCategory()\n",
            "Method Description:\nCreates a chart category, which includes an axis, a data root, and a sort definition. A chart category is used in a workbook.ChartDefinition.\n",
            "Returns:\nworkbook.Category\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createCategory(options)\n"
        ]
    },
    "(N/workbook) workbook.createChartAxis(options)": {
        "prefix": "workbook.createChartAxis(options)",
        "body": [
            "${1:workbook}.createChartAxis({",
            "\ttitle: ${2:string*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createChartAxis()\n",
            "Method Description:\nCreates an X-axis or a Y-axis for the chart.\n",
            "Returns:\nworkbook.ChartAxis\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createChartAxis(options)\n"
        ]
    },
    "(N/workbook) workbook.createChartDefinition(options)": {
        "prefix": "workbook.createChartDefinition(options)",
        "body": [
            "${1:workbook}.createChartDefinition({",
            "\taggregationFilters: ${2:Array<workbook.ConditionalFilter |workbook.LimitingFilter>},",
            "\tcategory: ${3:workbook.Category*},",
            "\tdataset: ${4:dataset.Dataset*},",
            "\tfilterExpressions: ${5:workbook.Expression[]},",
            "\tid: ${6:string*},",
            "\tlegend: ${7:workbook.Legend*},",
            "\tname: ${8:string*},",
            "\tseries: ${9:workbook.Series[]*},",
            "\tstacking: ${10:workbook.Stacking},",
            "\tsubTitle: ${11:string},",
            "\ttitle: ${12:string},",
            "\ttype: ${13:workbook.ChartType*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createChartDefinition()\n",
            "Method Description:\nCreates a chart definition, A chart is a workbook component that enables you to visualize your dataset query results using predefined chart and graph types, such as line graphs and bar charts. A chart is built from an underlying dataset and can also include a category, a legend, series, a type, expressions, filters, stacking behavior indicators, along with an ID, a name, a title, and a subtitle.\nFor more information on charts in SuiteAnalytics, see Workbook Charts.\n",
            "Returns:\nworkbook.ChartDefinition\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createChartDefinition(options)\n"
        ]
    },
    "(N/workbook) workbook.createConditionalFilter(options)": {
        "prefix": "workbook.createConditionalFilter(options)",
        "body": [
            "${1:workbook}.createConditionalFilter({",
            "\tfilteredNodesSelector: ${2:workbook.AllSubNodesSelector |workbook.DimensionSelector | workbook.PathSelector*},",
            "\tmeasure: ${3:workbook.Measure*},",
            "\totherAxisSelector: ${4:workbook.AllSubNodesSelector |workbook.DimensionSelector | workbook.PathSelector*},",
            "\tpredicate: ${5:workbook.Expression*},",
            "\trow: ${6:boolean*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createConditionalFilter()\n",
            "Method Description:\nCreates a conditional filter, which includes a selector of what to filter, a row axis and other axis, a measure and a predicate. Conditional filters can be used in pivot definitions and chart definitions.\n",
            "Returns:\nworkbook.ConditionalFilter\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createConditionalFilter(options)\n"
        ]
    },
    "(N/workbook) workbook.createConstant(options)": {
        "prefix": "workbook.createConstant(options)",
        "body": [
            "${1:workbook}.createConstant({",
            "\tconstant: ${2:string | number | boolean | Date*},",
            "\ttype: ${3:workbook.ConstantType}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createConstant()\n",
            "Method Description:\nCreates a constant expression.\n",
            "Returns:\nworkbook.Expression\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createConstant(options)\n"
        ]
    },
    "(N/workbook) workbook.createDataDimension(options)": {
        "prefix": "workbook.createDataDimension(options)",
        "body": [
            "${1:workbook}.createDataDimension({",
            "\tchildren: ${2:Array<workbook.DataDimension | workbook.Section | workbook.Measure>},",
            "\titems: ${3:workbook.DataDimensionItem*},",
            "\ttotalLine: ${4:string}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createDataDimension()\n",
            "Method Description:\nCreates a data dimension, which includes items, child data items, and a total line. A data dimension is used in a workbook.Category, a workbook.Legend a workbook.PivotAxis, a workbook.DimensionSelector, and a workbook.Section.\n",
            "Returns:\nworkbook.DataDimension\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createDataDimension(options)\n"
        ]
    },
    "(N/workbook) workbook.createDataDimensionItem(options)": {
        "prefix": "workbook.createDataDimensionItem(options)",
        "body": [
            "${1:workbook}.createDataDimensionItem({",
            "\texpression: ${2:workbook.Expression*},",
            "\tlabel: ${3:string}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createDataDimensionItem()\n",
            "Method Description:\nCreates a data dimension item, which includes an expression and a label.\n",
            "Returns:\nworkbook.DataDimensionItem\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createDataDimensionItem(options)\n"
        ]
    },
    "(N/workbook) workbook.createDimensionSelector(options)": {
        "prefix": "workbook.createDimensionSelector(options)",
        "body": [
            "${1:workbook}.createDimensionSelector({",
            "\tdimension: ${2:workbook.DataDimension | workbook.Section*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createDimensionSelector()\n",
            "Method Description:\nCreates a dimension selector.\n",
            "Returns:\nworkbook.DimensionSelector\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createDimensionSelector(options)\n"
        ]
    },
    "(N/workbook) workbook.createDimensionSort(options)": {
        "prefix": "workbook.createDimensionSort(options)",
        "body": [
            "${1:workbook}.createDimensionSort({",
            "\titem: ${2:workbook.DataDimensionItem*},",
            "\tsort: ${3:workbook.Sort*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createDimensionSort()\n",
            "Method Description:\nCreates a dimension sort.\n",
            "Returns:\nworkbook.DimensionSort\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createDimensionSort(options)\n"
        ]
    },
    "(N/workbook) workbook.createExpression(options)": {
        "prefix": "workbook.createExpression(options)",
        "body": [
            "${1:workbook}.createExpression({",
            "\tfunctionId: ${2:workbook.ExpressionType*},",
            "\tparameters: ${3:Object}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createExpression()\n",
            "Method Description:\nCreates an expression, that includes a function ID and parameters. Expressions can be used to create a pivot definition, a chart definition, a data dimension item, a measure, a conditional filter, and a dimension sort.\n",
            "Returns:\nworkbook.Expression\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createExpression(options)\n"
        ]
    },
    "(N/workbook) workbook.createFieldContext(options)": {
        "prefix": "workbook.createFieldContext(options)",
        "body": [
            "${1:workbook}.createFieldContext({",
            "\tname: ${2:string*},",
            "\tparameters: ${3:Object}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createFieldContext()\n",
            "Method Description:\nCreates a field context for a table definition column.\n",
            "Returns:\nworkbook.FieldContext\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createFieldContext(options)\n"
        ]
    },
    "(N/workbook) workbook.createLegend(options)": {
        "prefix": "workbook.createLegend(options)",
        "body": [
            "${1:workbook}.createLegend({",
            "\taxes: ${2:workbook.ChartAxis[]*},",
            "\troot: ${3:workbook.Section |workbook.DataDimension*},",
            "\tsortDefinitions: ${4:workbook.SortDefinition[]}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createLegend()\n",
            "Method Description:\nCreates a chart legend.\n",
            "Returns:\nworkbook.Legend\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createLegend(options)\n"
        ]
    },
    "(N/workbook) workbook.createLimitingFilter(options)": {
        "prefix": "workbook.createLimitingFilter(options)",
        "body": [
            "${1:workbook}.createLimitingFilter({",
            "\tfilteredNodesSelector: ${2:workbook.AllSubNodesSelector |workbook.DimensionSelector | workbook.PathSelector*},",
            "\tlimit: ${3:number*},",
            "\trow: ${4:boolean*},",
            "\tsortBys: ${5:Array<workbook.DimensionSort|workbook.MeasureSort>*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createLimitingFilter()\n",
            "Method Description:\nCreates a limiting filter, which includes a selector of what to filter, a row axis, a limit, and a sorting order. Limiting filters can be used in pivot definitions and chart definitions to limit the data shown on a pivot or chart.\n",
            "Returns:\nworkbook.LimitingFilter\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createLimitingFilter(options)\n"
        ]
    },
    "(N/workbook) workbook.createMeasure(options)": {
        "prefix": "workbook.createMeasure(options)",
        "body": [
            "${1:workbook}.createMeasure({",
            "\taggregation: ${2:string},",
            "\t\texpression: ${3:workbook.Expression}",
            "\t\t},",
            "\texpressions: ${4:workbook.Expression[]},",
            "\tlabel: ${5:string}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createMeasure()\n",
            "Method Description:\nCreates a measure, which includes an aggregation, a label, and one or more expressions.\n",
            "Returns:\nworkbook.Measure\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createMeasure(options)\n"
        ]
    },
    "(N/workbook) workbook.createMeasureSort(options)": {
        "prefix": "workbook.createMeasureSort(options)",
        "body": [
            "${1:workbook}.createMeasureSort({",
            "\tmeasure: ${2:workbook.Measure*},",
            "\totherAxisSelector: ${3:workbook.AllSubNodesSelector |workbook.DimensionSelector | workbook.PathSelector*},",
            "\tselector: ${4:workbook.AllSubNodesSelector |workbook.DimensionSelector | workbook.PathSelector*},",
            "\tsort: ${5:workbook.Sort*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createMeasureSort()\n",
            "Method Description:\nCreates a measure sort, which defines a sort on a measure.\n",
            "Returns:\nworkbook.MeasureSort\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createMeasureSort(options)\n"
        ]
    },
    "(N/workbook) workbook.createPathSelector(options)": {
        "prefix": "workbook.createPathSelector(options)",
        "body": [
            "${1:workbook}.createPathSelector({",
            "\telements: ${2:Array<workbook.AllSubNodesSelector |workbook.DimensionSelector>*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createPathSelector()\n",
            "Method Description:\nCreates a path selector.\n",
            "Returns:\nworkbook.PathSelector\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createPathSelector(options)\n"
        ]
    },
    "(N/workbook) workbook.createPivotAxis(options)": {
        "prefix": "workbook.createPivotAxis(options)",
        "body": [
            "${1:workbook}.createPivotAxis({",
            "\troot: ${2:workbook.DataDimension | workbook.Section*},",
            "\tsortDefinitions: ${3:workbook.SortDefinition[]}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createPivotAxis()\n",
            "Method Description:\nCreates a pivot axis, which includes a data root and a sort definition.\n",
            "Returns:\nworkbook.PivotAxis\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createPivotAxis(options)\n"
        ]
    },
    "(N/workbook) workbook.createPivotDefinition(options)": {
        "prefix": "workbook.createPivotDefinition(options)",
        "body": [
            "${1:workbook}.createPivotDefinition({",
            "\taggregationFilters: ${2:Array<workbook.ConditionalFilter |workbook.LimitingFilter>},",
            "\tcolumnAxis: ${3:workbook.PivotAxis*},",
            "\tdataset: ${4:dataset.Dataset*},",
            "\tfilterExpressions: ${5:workbook.Expression[]},",
            "\tid: ${6:string*},",
            "\tname: ${7:string*},",
            "\trowAxis: ${8:workbook.PivotAxis*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createPivotDefinition()\n",
            "Method Description:\nCreates a pivot definition. A pivot is a workbook component that enables you to pivot your dataset query results by defining measures and dimensions, so that you can analyze different subsets of data. A pivot definition is based on an underlying dataset and can include an ID, a name, a row axis, a column axis, conditional/limiting filters, and filter expressions.\n",
            "Returns:\nworkbook.PivotDefinition\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createPivotDefinition(options)\n"
        ]
    },
    "(N/workbook) workbook.createSection(options)": {
        "prefix": "workbook.createSection(options)",
        "body": [
            "${1:workbook}.createSection({",
            "\tchildren: ${2:Array<workbook.DataDimension | workbook.Measure | workbook.Section>*},",
            "\ttotalLine: ${3:workbook.TotalLine}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createSection()\n",
            "Method Description:\nCreates a section, which includes children and a total line.\n",
            "Returns:\nworkbook.Section\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createSection(options)\n"
        ]
    },
    "(N/workbook) workbook.createSeries(options)": {
        "prefix": "workbook.createSeries(options)",
        "body": [
            "${1:workbook}.createSeries({",
            "\taspects: ${2:workbook.Aspect[]*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createSeries()\n",
            "Method Description:\nCreates a chart series, which is a set of aspects.\n",
            "Returns:\nworkbook.Series\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createSeries(options)\n"
        ]
    },
    "(N/workbook) workbook.createSort(options)": {
        "prefix": "workbook.createSort(options)",
        "body": [
            "${1:workbook}.createSort({",
            "\tascending: ${2:boolean},",
            "\tcaseSensitive: ${3:boolean},",
            "\tlocale: ${4:query.SortLocale},",
            "\tnullsLast: ${5:boolean}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createSort()\n",
            "Method Description:\nCreates a sort, which includes indicators for sorting in ascending order, case sensitivity, sort locale, and whether nulls should be placed last.\n",
            "Returns:\nworkbook.Sort\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createSort(options)\n"
        ]
    },
    "(N/workbook) workbook.createSortDefinition(options)": {
        "prefix": "workbook.createSortDefinition(options)",
        "body": [
            "${1:workbook}.createSortDefinition({",
            "\tselector: ${2:workbook.AllSubNodesSelector | workbook.DimensionSelector | workbook.PathSelector*},",
            "\tsortBys: ${3:Array<workbook.DimensionSort | workbook.MeasureSort>*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createSortDefinition()\n",
            "Method Description:\nCreates a sort definition. A sort definition is used to specify sorting for a category, legend, pivot definition, or pivot axis.\n",
            "Returns:\nworkbook.SortDefinition\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createSortDefinition(options)\n"
        ]
    },
    "(N/workbook) workbook.createTableColumn(options)": {
        "prefix": "workbook.createTableColumn(options)",
        "body": [
            "${1:workbook}.createTableColumn({",
            "\talias: ${2:string},",
            "\tdatasetColumnAlias: ${3:string},",
            "\tdatasetColumnId: ${4:number},",
            "\tfieldContext: ${5:workbook.FieldContext},",
            "\tfilters: ${6:workbook.TableFilter[]},",
            "\tlabel: ${7:string},",
            "\tsort: ${8:workbook.Sort*},",
            "\twidth: ${9:number}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createTableColumn()\n",
            "Method Description:\nCreates a table column. Table columns are used in table definitions, and include an alias, dataset column alias/ID, filters, a label, sorts, and a column width.\n",
            "Returns:\nworkbook.TableColumn\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createTableColumn(options)\n"
        ]
    },
    "(N/workbook) workbook.createTableDefinition(options)": {
        "prefix": "workbook.createTableDefinition(options)",
        "body": [
            "${1:workbook}.createTableDefinition({",
            "\tcolumns: ${2:workbook.TableColumn[]*},",
            "\tdataset: ${3:dataset.Dataset*},",
            "\tid: ${4:string*},",
            "\tname: ${5:string*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createTableDefinition()\n",
            "Method Description:\nCreates a table. A table is a workbook component that enables you to view your dataset query results in a simple table. A table is based on an underlying dataset and can include an ID, a name, a dataset, and table columns,\n",
            "Returns:\nworkbook.TableDefinition\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createTableDefinition(options)\n"
        ]
    },
    "(N/workbook) workbook.createTableFilter(options)": {
        "prefix": "workbook.createTableFilter(options)",
        "body": [
            "${1:workbook}.createTableFilter({",
            "\toperator: ${2:string*},",
            "\tvalues: ${3:Array<null | Object | number | string | boolean | Date>}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.createTableFilter()\n",
            "Method Description:\nCreates a table filter, which includes an operator and values.\n",
            "Returns:\nworkbook.TableFilter\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.createTableFilter(options)\n"
        ]
    },
    "(N/workbook) workbook.list()": {
        "prefix": "workbook.list()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=workbook.list() for more information.",
        "description": [
            "N/workbook Module",
            "workbook.list()\n",
            "Method Description:\nLists all existing workbooks.\n",
            "Returns:\nObject[]\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.list()\n"
        ]
    },
    "(N/workbook) workbook.load(options)": {
        "prefix": "workbook.load(options)",
        "body": [
            "${1:workbook}.load({",
            "\tid: ${2:string*}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.load()\n",
            "Method Description:\nLoads an existing workbook. Once you load a workbook, you can execute a table and view the results.\n",
            "Returns:\nworkbook.Workbook\n",
            "Supported Script Types:\nServer scripts\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\n10 units\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.load(options)\n"
        ]
    },
    "(N/workbook) workbook.Aggregation": {
        "prefix": "workbook.Aggregation",
        "body": "workbook.Aggregation.${1|COUNT,COUNT_DISTINCT,MAX,MEDIAN,MIN,SUM|}",
        "description": [
            "N/workbook Module",
            "workbook.Aggregation\n",
            "Enum Description:\nHolds string values for aggregation types. This enum is used pass the aggregation parameter to workbook.createMeasure(options).\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Aggregation\n"
        ]
    },
    "(N/workbook) workbook.AspectType": {
        "prefix": "workbook.AspectType",
        "body": "workbook.AspectType.${1|COLOR,VALUE|}",
        "description": [
            "N/workbook Module",
            "workbook.AspectType\n",
            "Enum Description:\nHolds string values for aspect types. Used to pass the type value to workbook.createAspect(options).\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.AspectType\n"
        ]
    },
    "(N/workbook) workbook.ChartType": {
        "prefix": "workbook.ChartType",
        "body": "workbook.ChartType.${1|AREA,BAR,COLUMN,LINE|}",
        "description": [
            "N/workbook Module",
            "workbook.ChartType\n",
            "Enum Description:\nHolds string values for chart types. Used to pass the type value to workbook.createChartDefinition(options).\nFor more information about charts in SuiteAnalytics, see Chart Types.\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ChartType\n"
        ]
    },
    "(N/workbook) workbook.ConstantType": {
        "prefix": "workbook.ConstantType",
        "body": "workbook.ConstantType.${1|BOOLEAN,CURRENCY,DATE,DATE_TIME,DURATION,NUMBER,TEXT|}",
        "description": [
            "N/workbook Module",
            "workbook.ConstantType\n",
            "Enum Description:\nHolds string values for constant types. Used to pass the type value to workbook.createConstant(options).\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ConstantType\n"
        ]
    },
    "(N/workbook) workbook.DateTimeHierarchy": {
        "prefix": "workbook.DateTimeHierarchy",
        "body": "workbook.DateTimeHierarchy.${1|MONTH_BASED,WEEK_BASED|}",
        "description": [
            "N/workbook Module",
            "workbook.DateTimeHierarchy\n",
            "Enum Description:\nHolds string values for date-time hierarchy types.\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DateTimeHierarchy\n"
        ]
    },
    "(N/workbook) workbook.DateTimeProperty": {
        "prefix": "workbook.DateTimeProperty",
        "body": "workbook.DateTimeProperty.${1|DATE,DAY_OF_MONTH,DAY_OF_WEEK,MONTH,QUARTER,WEEK_OF_YEAR,YEAR|}",
        "description": [
            "N/workbook Module",
            "workbook.DateTimeProperty\n",
            "Enum Description:\nHolds the string values for date-time property types.\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.DateTimeProperty\n"
        ]
    },
    "(N/workbook) workbook.ExpressionType": {
        "prefix": "workbook.ExpressionType",
        "body": [
            "${1:workbook}.ExpressionType{",
            "\tAND: ${2:and},",
            "\tANY_IN_HIERARCHY: ${3:anyInHierarchy},",
            "\tANY_OF: ${4:anyOf},",
            "\tBETWEEN: ${5:between},",
            "\tCHILD_OF: ${6:childOf},",
            "\tCOMPARE: ${7:compare},",
            "\tCONSOLIDATE: ${8:simpleConsolidate},",
            "\tCURRENCY_CONVERSION: ${9:currencyConversion},",
            "\tDATE_RANGE_SELECTOR_ID: ${10:dateRangeSelectorId},",
            "\tDATE_SELECTOR_ID: ${11:dateSelectorId},",
            "\tDATE_TIME_PROPERTY: ${12:dateTimeProperty},",
            "\tEQUALS: ${13:equals},",
            "\tFIELD: ${14:field},",
            "\tHIERARCHY: ${15:hierarchy},",
            "\tHIERARCHY_TO_TEXT: ${16:hierarchyToText},",
            "\tIN_RANGE: ${17:inRange},",
            "\tIS_NULL: ${18:isNull},",
            "\tLAMBDA: ${19:lambdaArgument},",
            "\tNOT: ${20:not},",
            "\tOR: ${21:or},",
            "\tRECORD_DISPLAY_VALUE: ${22:recordDisplayValue},",
            "\tRECORD_KEY: ${23:recordKey},",
            "\tTRUNCATE_DATE_TIME: ${24:truncateDateTime}",
            "})"
        ],
        "description": [
            "N/workbook Module",
            "workbook.ExpressionType\n",
            "Enum Description:\nHolds string values for expression types.\nUse these values for the options.functionId parameter when creating an expression using workbook.createExpression(options). Each expression type uses a set of parameters, which you specify using the options.parameters parameter of workbook.createExpression(options). Make sure that you use the exact parameter names that are supported for each expression type. For example, if you create an EQUALS expression, the supported parameters are a and b. You can specify these parameters as the value of the options.parameters parameter of workbook.createExpression(options):\nExpressions are used in the following methods:\nworkbook.createChartDefinition(options)\nworkbook.createDataDimensionItem(options)\nworkbook.createMeasure(options)\nworkbook.createConditionalFilter(options)\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.ExpressionType\n"
        ]
    },
    "(N/workbook) workbook.Stacking": {
        "prefix": "workbook.Stacking",
        "body": "workbook.Stacking.${1|DISABLED,NORMAL,PERCENT|}",
        "description": [
            "N/workbook Module",
            "workbook.Stacking\n",
            "Enum Description:\nHolds stacking types. Used to pass the stacking value to workbook.createChartDefinition(options).\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.Stacking\n"
        ]
    },
    "(N/workbook) workbook.TotalLine": {
        "prefix": "workbook.TotalLine",
        "body": "workbook.TotalLine.${1|FIRST_LINE,HIDDEN,LAST_LINE|}",
        "description": [
            "N/workbook Module",
            "workbook.TotalLine\n",
            "Enum Description:\nHolds formatting presets for the total line. Used to pass the totalLine value to workbook.createDataDimension(options) and to workbook.createSection(options).\n",
            "Module:\nN/workbook Module\n",
            "Sibling Module Members:\nN/workbook Module Members\n",
            "Since:\n2020.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workbook.TotalLine\n"
        ]
    },
    "(N/workflow) workflow.initiate(options)": {
        "prefix": "workflow.initiate(options)",
        "body": [
            "${1:workflow}.initiate({",
            "\trecordType: ${2:string*},",
            "\trecordId: ${3:string | number*},",
            "\tworkflowId: ${4:string | number*},",
            "\tdefaultValues: ${5:Object}",
            "})"
        ],
        "description": [
            "N/workflow Module",
            "workflow.initiate()\n",
            "Method Description:\nInitiates a workflow on-demand. This method is the programmatic equivalent of the Initiate Workflow Action action in SuiteFlow.\nReturns the internal ID of the workflow instance used to track the workflow against the record.\nTo asynchronously initiate a workflow, see task.WorkflowTriggerTask.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nAll server scripts\nFor more information, see SuiteScript 2.0 Script Types\n",
            "Governance:\n20 units\n",
            "Module:\nN/workflow Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workflow.initiate(options)\n"
        ]
    },
    "(N/workflow) workflow.trigger(options)": {
        "prefix": "workflow.trigger(options)",
        "body": [
            "${1:workflow}.trigger({",
            "\trecordType: ${2:string*},",
            "\tworkflowId: ${3:string | number*},",
            "\tworkflowInstanceId: ${4:string | number},",
            "\tactionId: ${5:string | number},",
            "\tstateId: ${6:string | number}",
            "})"
        ],
        "description": [
            "N/workflow Module",
            "workflow.trigger()\n",
            "Method Description:\nTriggers a workflow on a record. The actions and transitions of the workflow are evaluated for the record in the workflow instance, based on the current state for the workflow instance.\nReturns the internal ID of the workflow instance used to track the workflow against the record.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nAll server scripts\nFor more information, see SuiteScript 2.0 Script Types\n",
            "Governance:\n20 units\n",
            "Module:\nN/workflow Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=workflow.trigger(options)\n"
        ]
    },
    "(N/xml) xml.Parser": {
        "prefix": "xml.Parser",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=xml.Parser for more information.",
        "description": [
            "N/xml Module",
            "xml.Parser\n",
            "Object Description:\nEncapsulates the functionality used by NetSuite to parse an XML document.\nFor a complete list of this object’s methods, see Parser Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.Parser\n"
        ]
    },
    "(N/xml) Parser.fromString(options)": {
        "prefix": "Parser.fromString(options)",
        "body": [
            "${1:Parser}.fromString({",
            "\ttext: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Parser.fromString()\n",
            "Method Description:\nParses a String into a W3C XML document object. This API is useful if you want to navigate/query a structured XML document more effectively using either the Document API or NetSuite built-in XPath functions.\nYou can also use this method to validate your XML. If you pass a malformed string in as the options.text argument, Parser.fromString returns an SSS_XML_DOM_EXCEPTION error.\n",
            "Returns:\nxml.Document\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Parser.fromString(options)\n"
        ]
    },
    "(N/xml) Parser.toString(options)": {
        "prefix": "Parser.toString(options)",
        "body": [
            "${1:Parser}.toString({",
            "\tdocument: ${2:xml.Document}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Parser.toString()\n",
            "Method Description:\nConverts (serializes) an xml.Document object into a string. This API is useful, for example, if you want to serialize and store an xml.Document in a custom field.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Parser.toString(options)\n"
        ]
    },
    "(N/xml) xml.XPath": {
        "prefix": "xml.XPath",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=xml.XPath for more information.",
        "description": [
            "N/xml Module",
            "xml.XPath\n",
            "Object Description:\nEncapsulates the functionality to run XPath expressions.\nFor a complete list of this object’s methods, see XPath Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.XPath\n"
        ]
    },
    "(N/xml) XPath.select(options)": {
        "prefix": "XPath.select(options)",
        "body": [
            "${1:XPath}.select({",
            "\tnode: ${2:xml.Node},",
            "\txpath: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "XPath.select()\n",
            "Method Description:\nSelects an array of nodes from an XML that match an XPath expression.\n",
            "Returns:\nxml.Node[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=XPath.select(options)\n"
        ]
    },
    "(N/xml) xml.Node": {
        "prefix": "xml.Node",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=xml.Node for more information.",
        "description": [
            "N/xml Module",
            "xml.Node\n",
            "Object Description:\nRepresents a single node in an XML document tree. The XML DOM presents a document as a hierarchy of node objects. See the xml.NodeType enum for a list of possible node types.\nYou can use this object to work with a child node, or nested nodes.\nNetSuite supports a subset of W3C DOM methods. For a complete list of this object’s methods and properties, see Node Object Members.\nFor other code snippets that use this object, see the syntax sample that follows, as well as Node.childNodes and N/xml Module Script Sample.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.Node\n"
        ]
    },
    "(N/xml) Node.appendChild(options)": {
        "prefix": "Node.appendChild(options)",
        "body": [
            "${1:Node}.appendChild({",
            "\tnewChild: ${2:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.appendChild()\n",
            "Method Description:\nAppends a node after the last child node of a specific element node. Returns the new child node.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.appendChild(options)\n"
        ]
    },
    "(N/xml) Node.cloneNode(options)": {
        "prefix": "Node.cloneNode(options)",
        "body": [
            "${1:Node}.cloneNode({",
            "\tdeep: ${2:boolean}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.cloneNode()\n",
            "Method Description:\nCreates a copy of a node. Returns the copied node.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.cloneNode(options)\n"
        ]
    },
    "(N/xml) Node.compareDocumentPosition(options)": {
        "prefix": "Node.compareDocumentPosition(options)",
        "body": [
            "${1:Node}.compareDocumentPosition({",
            "\tother: ${2:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.compareDocumentPosition()\n",
            "Method Description:\nReturns a number that reflects where two nodes are located, compared to each other. Returns one of the following numbers:\n1. The two nodes do not belong to the same document.\n2. The specified node comes before the current node.\n4. The specified node comes after the current node.\n8. The specified node contains the current node.\n16. The current node contains the specified node.\n32. The specified and current nodes do not have a common container node or the two nodes are different attributes of the same node.\nThe return value can be a combination of the above values. For example, a return value of 20 means the specified node is contained by the current node, a value of 16, and the specified node follows the current node, a value of 4.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nnumber\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.compareDocumentPosition(options)\n"
        ]
    },
    "(N/xml) Node.hasAttributes()": {
        "prefix": "Node.hasAttributes()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.hasAttributes() for more information.",
        "description": [
            "N/xml Module",
            "Node.hasAttributes()\n",
            "Method Description:\nReturns true if the current node has attributes defined, or false otherwise.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.hasAttributes()\n"
        ]
    },
    "(N/xml) Node.hasChildNodes()": {
        "prefix": "Node.hasChildNodes()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.hasChildNodes() for more information.",
        "description": [
            "N/xml Module",
            "Node.hasChildNodes()\n",
            "Method Description:\nReturns true if the current node has child nodes or returns false if the current node does not have child nodes.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.hasChildNodes()\n"
        ]
    },
    "(N/xml) Node.insertBefore(options)": {
        "prefix": "Node.insertBefore(options)",
        "body": [
            "${1:Node}.insertBefore({",
            "\tnewChild: ${2:xml.Node},",
            "\trefChild: ${3:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.insertBefore()\n",
            "Method Description:\nInserts a new child node before an existing child node for the current node.\nIf the new child node is already in the list of children, this method removes the new child node and inserts it again.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.insertBefore(options)\n"
        ]
    },
    "(N/xml) Node.isDefaultNamespace(options)": {
        "prefix": "Node.isDefaultNamespace(options)",
        "body": [
            "${1:Node}.isDefaultNamespace({",
            "\tnamespaceURI: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.isDefaultNamespace()\n",
            "Method Description:\nReturns true if the  specified namespace uniform resource identifier (URI) is the default namespace for the current node or returns false if the specified namespace is not the default namespace.\nSee also Node.namespaceURI.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.isDefaultNamespace(options)\n"
        ]
    },
    "(N/xml) Node.isEqualNode(options)": {
        "prefix": "Node.isEqualNode(options)",
        "body": [
            "${1:Node}.isEqualNode({",
            "\tother: ${2:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.isEqualNode()\n",
            "Method Description:\nReturns true if two nodes are equal or returns false if two nodes are not equal.\nThe two nodes are equal if they meet the following conditions:\nBoth nodes have the same type.\nBoth nodes have the same attributes and attribute values. The order of the attributes is not considered.\nBoth nodes have equal lists of child nodes and the child nodes appear in the same order.\nTwo nodes may be equal, even if they are not the same. See Node.isSameNode(options).\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.isEqualNode(options)\n"
        ]
    },
    "(N/xml) Node.isSameNode(options)": {
        "prefix": "Node.isSameNode(options)",
        "body": [
            "${1:Node}.isSameNode({",
            "\tother: ${2:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.isSameNode()\n",
            "Method Description:\nReturns true if two nodes reference the same object or returns false if two nodes do not reference the same object.\nIf two nodes are the same, all attributes have the same values and you can use methods on the two nodes interchangeably.\nTwo nodes that are the same are also equal. See Node.isEqualNode(options).\nThis method is not supported on Internet Explorer or Firefox.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.isSameNode(options)\n"
        ]
    },
    "(N/xml) Node.lookupNamespaceURI(options)": {
        "prefix": "Node.lookupNamespaceURI(options)",
        "body": [
            "${1:Node}.lookupNamespaceURI({",
            "\tprefix: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.lookupNamespaceURI()\n",
            "Method Description:\nReturns the namespace uniform resource identifier (URI) that matches the specified namespace prefix.\nReturns null if the specified prefix does not have an associated URI.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.lookupNamespaceURI(options)\n"
        ]
    },
    "(N/xml) Node.lookupPrefix(options)": {
        "prefix": "Node.lookupPrefix(options)",
        "body": [
            "${1:Node}.lookupPrefix({",
            "\t namespaceURI: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.lookupPrefix()\n",
            "Method Description:\nReturns the namespace prefix associated with the specified namespace uniform resource identifier (URI).\nReturns null if the specified URI does not have an associated prefix. If more than one prefix is associated with the namespace prefix, the namespace returned by this method depends on the module implementation.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.lookupPrefix(options)\n"
        ]
    },
    "(N/xml) Node.normalize()": {
        "prefix": "Node.normalize()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.normalize() for more information.",
        "description": [
            "N/xml Module",
            "Node.normalize()\n",
            "Method Description:\nPuts all text nodes underneath a node, including attribute nodes, into a normal form. In normal form, only structure (such as elements, comments, processing instructions, CDATA sections, and entity references) separates text nodes. After normalization, there are no adjacent or empty text nodes.\nUse this method if you require a particular document tree structure and want to make sure that the XML DOM view of a document is identical when you save and reload it.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.normalize()\n"
        ]
    },
    "(N/xml) Node.removeChild(options)": {
        "prefix": "Node.removeChild(options)",
        "body": [
            "${1:Node}.removeChild({",
            "\toldChild: ${2:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.removeChild()\n",
            "Method Description:\nRemoves the specified child node.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.removeChild(options)\n"
        ]
    },
    "(N/xml) Node.replaceChild(options)": {
        "prefix": "Node.replaceChild(options)",
        "body": [
            "${1:Node}.replaceChild({",
            "\tnewChild: ${2:xml.Node},",
            "\toldChild: ${3:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.replaceChild()\n",
            "Method Description:\nReplaces a specific child node with another child node in a list of child nodes.\nIf the new child node to add already exists in the list of child nodes, the node is first removed.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.replaceChild(options)\n"
        ]
    },
    "(N/xml) Node.attributes": {
        "prefix": "Node.attributes",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.attributes for more information.",
        "description": [
            "N/xml Module",
            "Node.attributes\n",
            "Property Description:\nKey-value pairs for all attributes for an xml.Element node. Returns null for all other node types.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.attributes\n"
        ]
    },
    "(N/xml) Node.baseURI": {
        "prefix": "Node.baseURI",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.baseURI for more information.",
        "description": [
            "N/xml Module",
            "Node.baseURI\n",
            "Property Description:\nAbsolute base uniform resource identifier (URI) of a node or null if the URI cannot be determined.\nFor client scripts, this property always returns null.\nThe format of this value is browser-specific.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.baseURI\n"
        ]
    },
    "(N/xml) Node.childNodes": {
        "prefix": "Node.childNodes",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.childNodes for more information.",
        "description": [
            "N/xml Module",
            "Node.childNodes\n",
            "Property Description:\nArray of all child nodes of a node or an empty array if there are no child nodes.\n",
            "Type:\nxml.Node[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.childNodes\n"
        ]
    },
    "(N/xml) Node.firstChild": {
        "prefix": "Node.firstChild",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.firstChild for more information.",
        "description": [
            "N/xml Module",
            "Node.firstChild\n",
            "Property Description:\nThe first child node of a node, or null if there are no child nodes.\n",
            "Type:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.firstChild\n"
        ]
    },
    "(N/xml) Node.lastChild": {
        "prefix": "Node.lastChild",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.lastChild for more information.",
        "description": [
            "N/xml Module",
            "Node.lastChild\n",
            "Property Description:\nThe last child node of a node, or null if there are no child nodes.\n",
            "Type:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.lastChild\n"
        ]
    },
    "(N/xml) Node.localName": {
        "prefix": "Node.localName",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.localName for more information.",
        "description": [
            "N/xml Module",
            "Node.localName\n",
            "Property Description:\nThe local part of the qualified name of a node.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.localName\n"
        ]
    },
    "(N/xml) Node.namespaceURI": {
        "prefix": "Node.namespaceURI",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.namespaceURI for more information.",
        "description": [
            "N/xml Module",
            "Node.namespaceURI\n",
            "Property Description:\nThe namespace uniform resource identifier (URI) of a node or null if there is no namespace URI for the node.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.namespaceURI\n"
        ]
    },
    "(N/xml) Node.nextSibling": {
        "prefix": "Node.nextSibling",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.nextSibling for more information.",
        "description": [
            "N/xml Module",
            "Node.nextSibling\n",
            "Property Description:\nThe next node in a node list or null if the current node is the last node.\n",
            "Type:\nxml.Node (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.nextSibling\n"
        ]
    },
    "(N/xml) Node.nodeName": {
        "prefix": "Node.nodeName",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.nodeName for more information.",
        "description": [
            "N/xml Module",
            "Node.nodeName\n",
            "Property Description:\nName of a node, depending on the type. For example, for a node of type xml.Element, the name is the name of the element.\nOn Chrome, this property also includes the namespace or prefix.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.nodeName\n"
        ]
    },
    "(N/xml) Node.nodeType": {
        "prefix": "Node.nodeType",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.nodeType for more information.",
        "description": [
            "N/xml Module",
            "Node.nodeType\n",
            "Property Description:\nThe type of node as an enum.\nFor all possible values of this property, see xml.NodeType.\n",
            "Type:\nxml.NodeType\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.nodeType\n"
        ]
    },
    "(N/xml) Node.nodeValue": {
        "prefix": "Node.nodeValue",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.nodeValue for more information.",
        "description": [
            "N/xml Module",
            "Node.nodeValue\n",
            "Property Description:\nThe value of a node, depending on its type. If the value is null, setting this value has no effect.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.nodeValue\n"
        ]
    },
    "(N/xml) Node.ownerDocument": {
        "prefix": "Node.ownerDocument",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.ownerDocument for more information.",
        "description": [
            "N/xml Module",
            "Node.ownerDocument\n",
            "Property Description:\nThe root element for a node as a xml.Document object. Use this object to create new nodes with Document.createElement(options) or Document.createElementNS(options).\n",
            "Type:\nxml.Document\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.ownerDocument\n"
        ]
    },
    "(N/xml) Node.parentNode": {
        "prefix": "Node.parentNode",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.parentNode for more information.",
        "description": [
            "N/xml Module",
            "Node.parentNode\n",
            "Property Description:\nThe parent node of a node. All node types, except xml.Attr, xml.Document, DocumentFragment, Entity, and Notation can have a parent node.\nSee xml.NodeType for possible node types.\n",
            "Type:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.parentNode\n"
        ]
    },
    "(N/xml) Node.prefix": {
        "prefix": "Node.prefix",
        "body": [
            "${1:Node}.prefix{",
            "\tSSS_XML_DOM_EXCEPTION: ${2:NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Node.prefix\n",
            "Property Description:\nThe namespace prefix of the node, or null if the node does not have a namespace. If the value is null, setting it has no effect, including read-only node types.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.prefix\n"
        ]
    },
    "(N/xml) Node.previousSibling": {
        "prefix": "Node.previousSibling",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.previousSibling for more information.",
        "description": [
            "N/xml Module",
            "Node.previousSibling\n",
            "Property Description:\nThe previous node in a node list or null if the current node is the first node.\n",
            "Type:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.previousSibling\n"
        ]
    },
    "(N/xml) Node.textContent": {
        "prefix": "Node.textContent",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Node.textContent for more information.",
        "description": [
            "N/xml Module",
            "Node.textContent\n",
            "Property Description:\nThe textual content of a node and its descendants. If the value is null, then setting it has no effect. If you set this value, any child nodes are removed and replaced by a single text node with this string as a value.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Node.textContent\n"
        ]
    },
    "(N/xml) xml.Document": {
        "prefix": "xml.Document",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=xml.Document for more information.",
        "description": [
            "N/xml Module",
            "xml.Document\n",
            "Object Description:\nRepresents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.\nFor a list of this object’s methods and properties, see Document Object Members.\nAn XML document object is also a node of type DOCUMENT_NODE. In addition to the Document object members, Document objects inherit the members of the Node object. For a complete list of these methods and properties, see Node Object Members.\n",
            "Supported Script Types:\nAll script types\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.Document\n"
        ]
    },
    "(N/xml) Document.adoptNode(options)": {
        "prefix": "Document.adoptNode(options)",
        "body": [
            "${1:Document}.adoptNode({",
            "\tsource: ${2:xml.Node}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.adoptNode()\n",
            "Method Description:\nAttempts to adopt a node from another document to this document.\nIf successful, this method changes the Node.ownerDocument property of the source node, its children, and any attribute nodes to the current document. If the source node has a parent node, the parent node is first removed from the child list of its own parent node.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.adoptNode(options)\n"
        ]
    },
    "(N/xml) Document.createAttribute(options)": {
        "prefix": "Document.createAttribute(options)",
        "body": [
            "${1:Document}.createAttribute({",
            "\tname: ${2:string},",
            "\tvalue: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createAttribute()\n",
            "Method Description:\nCreates an attribute node of type ATTRIBUTE_NODE with the optional specified value and returns the new xml.Attr object.\nThe localName, prefix, and namespaceURI properties of the new node are set to null.\n",
            "Returns:\nxml.Attr\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createAttribute(options)\n"
        ]
    },
    "(N/xml) Document.createAttributeNS(options)": {
        "prefix": "Document.createAttributeNS(options)",
        "body": [
            "${1:Document}.createAttributeNS({",
            "\tnamespaceURI: ${2:string},",
            "\tqualifiedName: ${3:string},",
            "\tvalue: ${4:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createAttributeNS()\n",
            "Method Description:\nCreates an attribute node of type ATTRIBUTE_NODE, with the specified namespace value and optional specified value, and returns the new xml.Attr object.\nThe Node.localName, Node.prefix, and Node.namespaceURI properties of the new node are set to null.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nxml.Attr\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createAttributeNS(options)\n"
        ]
    },
    "(N/xml) Document.createCDATASection(options)": {
        "prefix": "Document.createCDATASection(options)",
        "body": [
            "${1:Document}.createCDATASection({",
            "\tdata: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createCDATASection()\n",
            "Method Description:\nCreates a CDATA section node of type DOCUMENT_FRAGMENT_NODE with the specified data and returns the new xml.Node object.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createCDATASection(options)\n"
        ]
    },
    "(N/xml) Document.createComment(options)": {
        "prefix": "Document.createComment(options)",
        "body": [
            "${1:Document}.createComment({",
            "\tdata: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createComment()\n",
            "Method Description:\nCreates a Comment node of type COMMENT_NODE with the specified string.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createComment(options)\n"
        ]
    },
    "(N/xml) Document.createDocumentFragment()": {
        "prefix": "Document.createDocumentFragment()",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Document.createDocumentFragment() for more information.",
        "description": [
            "N/xml Module",
            "Document.createDocumentFragment()\n",
            "Method Description:\nCreates a node of type DOCUMENT_FRAGMENT_NODE and returns the new xml.Node object.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createDocumentFragment()\n"
        ]
    },
    "(N/xml) Document.createElement(options)": {
        "prefix": "Document.createElement(options)",
        "body": [
            "${1:Document}.createElement({",
            "\ttagName: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createElement()\n",
            "Method Description:\nCreates a new node of type ELEMENT_NODE with the specified name and returns the new xml.Element node.\nThe Node.localName, Node.prefix, and Node.namespaceURI properties of the new node are set to null.\n",
            "Returns:\nxml.Element\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createElement(options)\n"
        ]
    },
    "(N/xml) Document.createElementNS(options)": {
        "prefix": "Document.createElementNS(options)",
        "body": [
            "${1:Document}.createElementNS({",
            "\tnamespaceURI: ${2:string},",
            "\tqualifiedName: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createElementNS()\n",
            "Method Description:\nCreates a new node of type ELEMENT_NODE with the specified namespace URI and name and returns the new xml.Element object.\nThe Node.localName, Node.prefix, and Node.namespaceURI properties of the new node are set to null.\n",
            "Returns:\nxml.Element\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createElementNS(options)\n"
        ]
    },
    "(N/xml) Document.createProcessingInstruction(options)": {
        "prefix": "Document.createProcessingInstruction(options)",
        "body": [
            "${1:Document}.createProcessingInstruction({",
            "\ttarget: ${2:string},",
            "\tdata: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createProcessingInstruction()\n",
            "Method Description:\nCreates a new node of type PROCESSING_INSTRUCTION_NODE with the specified target and data and returns the new xml.Node object.\nThe following example shows a sample processing instruction:\n<?xml version=\"1.0\"?>\nUse a processing instruction node to keep processor-specific information in the text of the XML document.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createProcessingInstruction(options)\n"
        ]
    },
    "(N/xml) Document.createTextNode(options)": {
        "prefix": "Document.createTextNode(options)",
        "body": [
            "${1:Document}.createTextNode({",
            "\tdata: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.createTextNode()\n",
            "Method Description:\nCreates a new text node and returns the new xml.Node object.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.createTextNode(options)\n"
        ]
    },
    "(N/xml) Document.getElementById(options)": {
        "prefix": "Document.getElementById(options)",
        "body": [
            "${1:Document}.getElementById({",
            "\telementId: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.getElementById()\n",
            "Method Description:\nReturns the element that has an ID attribute with the specified value as an xml.Element object. Returns null if no such element exists.\n",
            "Returns:\nxml.Element\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.getElementById(options)\n"
        ]
    },
    "(N/xml) Document.getElementsByTagName(options)": {
        "prefix": "Document.getElementsByTagName(options)",
        "body": [
            "${1:Document}.getElementsByTagName({",
            "\ttagName: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.getElementsByTagName()\n",
            "Method Description:\nReturns an array of xml.Element objects with a specific tag name, in the order in which they appear in the XML document.\n",
            "Returns:\nxml.Element[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.getElementsByTagName(options)\n"
        ]
    },
    "(N/xml) Document.getElementsByTagNameNS(options)": {
        "prefix": "Document.getElementsByTagNameNS(options)",
        "body": [
            "${1:Document}.getElementsByTagNameNS({",
            "\tnamespaceURI: ${2:string},",
            "\tlocalName: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.getElementsByTagNameNS()\n",
            "Method Description:\nReturns an array of xml.Element objects with a specific tag name and namespace, in the order in which they appear in the XML document.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nxml.Element[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.getElementsByTagNameNS(options)\n"
        ]
    },
    "(N/xml) Document.importNode(options)": {
        "prefix": "Document.importNode(options)",
        "body": [
            "${1:Document}.importNode({",
            "\timportedNode: ${2:xml.Node},",
            "\tdeep: ${3:boolean}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.importNode()\n",
            "Method Description:\nImports a node from another document to this document. This method creates a new copy of the source node.\nIf the deep parameter is set to true, it imports all children of the specified node. If set to false, it imports only the node itself.\nMethod returns the imported xml.Node object.\n",
            "Returns:\nxml.Node\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.importNode(options)\n"
        ]
    },
    "(N/xml) Document.doctype": {
        "prefix": "Document.doctype",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Document.doctype for more information.",
        "description": [
            "N/xml Module",
            "Document.doctype\n",
            "Property Description:\nThe doctype of the XML document.\nThis property is not supported on Internet Explorer.\n",
            "Type:\nxml.Element (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.doctype\n"
        ]
    },
    "(N/xml) Document.documentElement": {
        "prefix": "Document.documentElement",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Document.documentElement for more information.",
        "description": [
            "N/xml Module",
            "Document.documentElement\n",
            "Property Description:\nRoot node of the XML document.\nUse this property to directly access the xml.Element object that represents the root node of an XML document.\n",
            "Type:\nxml.Element (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.documentElement\n"
        ]
    },
    "(N/xml) Document.documentURI": {
        "prefix": "Document.documentURI",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Document.documentURI for more information.",
        "description": [
            "N/xml Module",
            "Document.documentURI\n",
            "Property Description:\nLocation of the document or null if undefined.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.documentURI\n"
        ]
    },
    "(N/xml) Document.inputEncoding": {
        "prefix": "Document.inputEncoding",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Document.inputEncoding for more information.",
        "description": [
            "N/xml Module",
            "Document.inputEncoding\n",
            "Property Description:\nEncoding used for an XML document at the time the document was parsed.\nWhen parsing an XML document with the following declaration, the inputEncoding property is UTF-8:\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\nThe value of this property is browser-specific.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.inputEncoding\n"
        ]
    },
    "(N/xml) Document.xmlEncoding": {
        "prefix": "Document.xmlEncoding",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Document.xmlEncoding for more information.",
        "description": [
            "N/xml Module",
            "Document.xmlEncoding\n",
            "Property Description:\nPart of the XML declaration, the XML encoding of the XML document.\nIn the following declaration, the xmlEncoding property is UTF-8:\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\nThis property is not supported on Internet Explorer or Firefox.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.xmlEncoding\n"
        ]
    },
    "(N/xml) Document.xmlStandalone": {
        "prefix": "Document.xmlStandalone",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Document.xmlStandalone for more information.",
        "description": [
            "N/xml Module",
            "Document.xmlStandalone\n",
            "Property Description:\nPart of the XML declaration, returns true if the current XML document is standalone or returns false if it is not.\nIn the following declaration, the xmlStandalone property is true:\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\nThis property is not supported on Internet Explorer or Firefox.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.xmlStandalone\n"
        ]
    },
    "(N/xml) Document.xmlVersion": {
        "prefix": "Document.xmlVersion",
        "body": [
            "${1:Document}.xmlVersion{",
            "\tSSS_XML_DOM_EXCEPTION: ${2:The implementation does not support the requested type of object or operation.}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Document.xmlVersion\n",
            "Property Description:\nPart of the XML declaration, the version number of the XML document.\nIn the following declaration, the xmlVersion property is 1.0:\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\nThis property is not supported on Internet Explorer or Firefox.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Document.xmlVersion\n"
        ]
    },
    "(N/xml) xml.Element": {
        "prefix": "xml.Element",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=xml.Element for more information.",
        "description": [
            "N/xml Module",
            "xml.Element\n",
            "Object Description:\nRepresents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.\nFor example, the following element year contains a text node with the value of 2015:\n<year>2015</year>\nFor a list of this object’s methods and properties, see Element Object Members\nAn XML element object is also a node of type ELEMENT_NODE. In addition to the Element object members, Element objects inherit the members of the Node object. For a complete list of these methods and properties, see Node Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.Element\n"
        ]
    },
    "(N/xml) Element.getAttribute(options)": {
        "prefix": "Element.getAttribute(options)",
        "body": [
            "${1:Element}.getAttribute({",
            "\tname: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.getAttribute()\n",
            "Method Description:\nReturns the value of the specified attribute.\n",
            "Returns:\nxml.Attr\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.getAttribute(options)\n"
        ]
    },
    "(N/xml) Element.getAttributeNode(options)": {
        "prefix": "Element.getAttributeNode(options)",
        "body": [
            "${1:Element}.getAttributeNode({",
            "\tname: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.getAttributeNode()\n",
            "Method Description:\nRetrieves an attribute node by name.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nxml.Attr\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.getAttributeNode(options)\n"
        ]
    },
    "(N/xml) Element.getAttributeNodeNS(options)": {
        "prefix": "Element.getAttributeNodeNS(options)",
        "body": [
            "${1:Element}.getAttributeNodeNS({",
            "\tnamespaceURI: ${2:string},",
            "\tlocalName: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.getAttributeNodeNS()\n",
            "Method Description:\nReturns an attribute node with the specified namespace URI and local name.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.getAttributeNodeNS(options)\n"
        ]
    },
    "(N/xml) Element.getAttributeNS(options)": {
        "prefix": "Element.getAttributeNS(options)",
        "body": [
            "${1:Element}.getAttributeNS({",
            "\tnamespaceURI: ${2:string},",
            "\tlocalName: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.getAttributeNS()\n",
            "Method Description:\nReturns an attribute value with the specified namespace URI and local name.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.getAttributeNS(options)\n"
        ]
    },
    "(N/xml) Element.getElementsByTagName(options)": {
        "prefix": "Element.getElementsByTagName(options)",
        "body": [
            "${1:Element}.getElementsByTagName({",
            "\ttagName: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.getElementsByTagName()\n",
            "Method Description:\nReturns an array of descendant xml.Element objects with a specific tag name, in the order in which they appear in the XML document.\n",
            "Returns:\nxml.Element[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.getElementsByTagName(options)\n"
        ]
    },
    "(N/xml) Element.getElementsByTagNameNS(options)": {
        "prefix": "Element.getElementsByTagNameNS(options)",
        "body": [
            "${1:Element}.getElementsByTagNameNS({",
            "\tnamespaceURI: ${2:string},",
            "\tlocalName: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.getElementsByTagNameNS()\n",
            "Method Description:\nReturns an array of descendant xml.Element objects with a specific tag name and namespace, in the order in which they appear in the XML document.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nxml.Element[]\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.getElementsByTagNameNS(options)\n"
        ]
    },
    "(N/xml) Element.hasAttribute(options)": {
        "prefix": "Element.hasAttribute(options)",
        "body": [
            "${1:Element}.hasAttribute({",
            "\tname: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.hasAttribute()\n",
            "Method Description:\nReturns true if the current element has an attribute with the specified name or if that attribute has a default value. Otherwise, returns false.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.hasAttribute(options)\n"
        ]
    },
    "(N/xml) Element.hasAttributeNS(options)": {
        "prefix": "Element.hasAttributeNS(options)",
        "body": [
            "${1:Element}.hasAttributeNS({",
            "\tnamespaceURI: ${2:string},",
            "\tlocalName: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.hasAttributeNS()\n",
            "Method Description:\nReturns true if the current element has an attribute with the specified local name and namespace or if that attribute has a default value. Otherwise, returns false.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.hasAttributeNS(options)\n"
        ]
    },
    "(N/xml) Element.removeAttribute(options)": {
        "prefix": "Element.removeAttribute(options)",
        "body": [
            "${1:Element}.removeAttribute({",
            "\tname: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.removeAttribute()\n",
            "Method Description:\nRemoves the attribute with the specified name.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.removeAttribute(options)\n"
        ]
    },
    "(N/xml) Element.removeAttributeNode(options)": {
        "prefix": "Element.removeAttributeNode(options)",
        "body": [
            "${1:Element}.removeAttributeNode({",
            "\toldAttr: ${2:xml.Attr}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.removeAttributeNode()\n",
            "Method Description:\nRemoves the attribute specified as a xml.Attr object.\n",
            "Returns:\nxml.Attr\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.removeAttributeNode(options)\n"
        ]
    },
    "(N/xml) Element.removeAttributeNS(options)": {
        "prefix": "Element.removeAttributeNS(options)",
        "body": [
            "${1:Element}.removeAttributeNS({",
            "\tnamespaceURI: ${2:string},",
            "\tlocalName: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.removeAttributeNS()\n",
            "Method Description:\nRemoves the attribute with the specified namespace URI and local name.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.removeAttributeNS(options)\n"
        ]
    },
    "(N/xml) Element.setAttribute(options)": {
        "prefix": "Element.setAttribute(options)",
        "body": [
            "${1:Element}.setAttribute({",
            "\tname: ${2:string},",
            "\tvalue: ${3:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.setAttribute()\n",
            "Method Description:\nAdds a new attribute with the specified name. If an attribute with that name is already present in the element, its value is changed to the value specified in method argument.\nIf an attribute with the specified name already exists, the value of the attribute is changed to the value of the value parameter.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.setAttribute(options)\n"
        ]
    },
    "(N/xml) Element.setAttributeNode(options)": {
        "prefix": "Element.setAttributeNode(options)",
        "body": [
            "${1:Element}.setAttributeNode({",
            "\tnewAttr: ${2:xml.Attr}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.setAttributeNode()\n",
            "Method Description:\nAdds the specified attribute node. If an attribute with the same name is already present in the element, it is replaced by the new one.\nIf an attribute with the same nodeName property already exists, it is replaced with the object in the newAttr parameter. If the attribute node replaces an existing attribute node, the method returns the new xml.Attr object.\n",
            "Returns:\nxml.Attr\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.setAttributeNode(options)\n"
        ]
    },
    "(N/xml) Element.setAttributeNodeNS(options)": {
        "prefix": "Element.setAttributeNodeNS(options)",
        "body": [
            "${1:Element}.setAttributeNodeNS({",
            "\tnewAttr: ${2:xml.Attr}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.setAttributeNodeNS()\n",
            "Method Description:\nAdds the specified attribute node. If an attribute with the same local name and namespace URI is already present in the element, it is replaced by the new one.\nIf an attribute with the same namespaceURI and localName property already exist, it is replaced with the object in the newAttr parameter. If the attribute node replaces an existing attribute node, the method returns the new xml.Attr object.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nxml.Attr\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.setAttributeNodeNS(options)\n"
        ]
    },
    "(N/xml) Element.setAttributeNS(options)": {
        "prefix": "Element.setAttributeNS(options)",
        "body": [
            "${1:Element}.setAttributeNS({",
            "\tnamespaceURI: ${2:string},",
            "\tqualifiedName: ${3:string},",
            "\tvalue: ${4:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Element.setAttributeNS()\n",
            "Method Description:\nAdds a new attribute with the specified name and namespace URI. If an attribute with the same name and namespace URI is already present in the element, its value is changed to the value specified in method argument.\nIf an attribute with the specified name already exists, the value of the attribute is changed to the value of the value parameter. If the attribute node replaces an existing attribute node, the method returns the new xml.Attr object.\nThis method is not supported on Internet Explorer.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.setAttributeNS(options)\n"
        ]
    },
    "(N/xml) Element.tagName": {
        "prefix": "Element.tagName",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Element.tagName for more information.",
        "description": [
            "N/xml Module",
            "Element.tagName\n",
            "Property Description:\nThe tag name of this xml.Element object.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Element.tagName\n"
        ]
    },
    "(N/xml) xml.Attr": {
        "prefix": "xml.Attr",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=xml.Attr for more information.",
        "description": [
            "N/xml Module",
            "xml.Attr\n",
            "Object Description:\nRepresents an attribute node of an xml.Element object.\nFor a complete list of this object’s properties, see Attr Object Members.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.Attr\n"
        ]
    },
    "(N/xml) Attr.name": {
        "prefix": "Attr.name",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Attr.name for more information.",
        "description": [
            "N/xml Module",
            "Attr.name\n",
            "Property Description:\nThe name of an attribute.\nThis property is a qualified name if the Node.localName property for the parent xml.Element object is null.\n",
            "Type:\nstring (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Attr.name\n"
        ]
    },
    "(N/xml) Attr.ownerElement": {
        "prefix": "Attr.ownerElement",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Attr.ownerElement for more information.",
        "description": [
            "N/xml Module",
            "Attr.ownerElement\n",
            "Property Description:\nxml.Element object that is the parent of the xml.Attr object. Value is null if the attribute is not used by an element.\nThis property is not supported on Internet Explorer.\n",
            "Type:\nxml.Element (read-only)\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Attr.ownerElement\n"
        ]
    },
    "(N/xml) Attr.specified": {
        "prefix": "Attr.specified",
        "body": "// Please search https://system.netsuite.com/app/help/helpcenter.nl?search=Attr.specified for more information.",
        "description": [
            "N/xml Module",
            "Attr.specified\n",
            "Property Description:\nReturns true if the attribute value is set in the parsed XML document, and false if it is a default value in a DTD or Schema.\n",
            "Type:\nboolean\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Attr.specified\n"
        ]
    },
    "(N/xml) Attr.value": {
        "prefix": "Attr.value",
        "body": [
            "${1:Attr}.value{",
            "\tSSS_XML_DOM_EXCEPTION: ${2:Invalid argument type, expected string: value}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "Attr.value\n",
            "Property Description:\nValue of an attribute. The value of the attribute is returned as a string.\nCharacter and general entity references are replaced with their values. For example, a character reference such as &#160; or an entity reference such as &#nbsp; is replaced with a non-breaking space.\nIf you set this value, it creates a text node with the unparsed contents of the string, for example, any characters that an XML processor would recognize as markup are instead treated as literal text.\n",
            "Type:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=Attr.value\n"
        ]
    },
    "(N/xml) xml.escape(options)": {
        "prefix": "xml.escape(options)",
        "body": [
            "${1:xml}.escape({",
            "\txmlText: ${2:string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "xml.escape()\n",
            "Method Description:\nPrepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands.\n",
            "Returns:\nstring\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.escape(options)\n"
        ]
    },
    "(N/xml) xml.validate(options)": {
        "prefix": "xml.validate(options)",
        "body": [
            "${1:xml}.validate({",
            "\txml: ${2:xml.Document},",
            "\txsdFilePathOrId: ${3:number | string},",
            "\timportFolderPathOrId: ${4:number | string}",
            "})"
        ],
        "description": [
            "N/xml Module",
            "xml.validate()\n",
            "Method Description:\nValidates an XML document against an XML Schema (XSD).\nThis method only validates XML Schema (XSD); validation of other XML schema languages is not supported.\nThe XML document must be passed as an xml.Document object. The location of the source XML Document does not matter; the validation is performed with the Document object stored in memory. The XSD must be stored in the File Cabinet.\n",
            "Returns:\nvoid\n",
            "Supported Script Types:\nAll server-side script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Governance:\nNone\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.validate(options)\n"
        ]
    },
    "(N/xml) xml.NodeType": {
        "prefix": "xml.NodeType",
        "body": "xml.NodeType.${1|ATTRIBUTE_NODE,CDATA_SECTION_NODE,COMMENT_NODE,DOCUMENT_FRAGMENT_NODE,DOCUMENT_NODE,DOCUMENT_TYPE_NODE,ELEMENT_NODE,ENTITY_NODE,ENTITY_REFERENCE_NODE,NOTATION_NODE,PROCESSING_INSTRUCTION_NODE,TEXT_NODE|}",
        "description": [
            "N/xml Module",
            "xml.NodeType\n",
            "Enum Description:\nEnumeration that holds the string values for the supported node types. The Node.nodeType property is defined by one of the values in this enum.\nUse this enum to determine the type of a node in an XML document.\nEnum values are constants and therefore read-only.\n",
            "Supported Script Types:\nAll script types\nFor more information, see SuiteScript 2.0 Script Types.\n",
            "Module:\nN/xml Module\n",
            "Since:\n2015.2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=xml.NodeType\n"
        ]
    },
    "(SuiteScript 2.x User Event Script Type) context.UserEventType": {
        "prefix": "context.UserEventType",
        "body": "${1:context}.UserEventType.${2|APPROVE,CANCEL,CHANGEPASSWORD,COPY,CREATE,DELETE,DROPSHIP,EDIT,EDITFORECAST,EMAIL,MARKCOMPLETE,ORDERITEMS,PACK,PAYBILLS,PRINT,QUICKVIEW,REASSIGN,REJECT,SHIP,SPECIALORDER,TRANSFORM,VIEW,XEDIT|}",
        "description": [
            "SuiteScript 2.x User Event Script Type",
            "Enum Description:\nHolds the string values for user event execution contexts.\nThe beforeLoad, beforeSubmit, and afterSubmit entry points include the context.type parameter that takes on one of the enum values.\nJavaScript does not include an enumeration type. The SuiteScript 2.x documentation utilizes the term enumeration (or enum) to describe the following: a plain JavaScript object with a flat, map-like structure.\nWithin this object, each key points to a read-only string value",
            "Module:\nSuiteScript 2.x User Event Script Type\n",
            "Since:\nVersion 2015 Release 2\n",
            "\nSearch NetSuite - \nhttps://system.netsuite.com/app/help/helpcenter.nl?search=context.UserEventType\n"
        ]
    }
}
